{
  "resources": {
    "3box>graphql-request>cross-fetch>node-fetch": {
      "globals": {
        "fetch": true
      }
    },
    "@babel/runtime": {
      "globals": {
        "regeneratorRuntime": "write"
      }
    },
    "@download/blockies": {
      "globals": {
        "document.createElement": true
      }
    },
    "@ensdomains/content-hash": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "@ensdomains/content-hash>cids": true,
        "@ensdomains/content-hash>js-base64": true,
        "@ensdomains/content-hash>multicodec": true,
        "@ensdomains/content-hash>multihashes": true,
        "browserify>buffer": true
      }
    },
    "@ensdomains/content-hash>cids": {
      "packages": {
        "@ensdomains/content-hash>cids>multibase": true,
        "@ensdomains/content-hash>cids>multicodec": true,
        "@ensdomains/content-hash>cids>multihashes": true,
        "@ensdomains/content-hash>cids>uint8arrays": true
      }
    },
    "@ensdomains/content-hash>cids>multibase": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true
      },
      "packages": {
        "@ensdomains/content-hash>cids>multibase>@multiformats/base-x": true
      }
    },
    "@ensdomains/content-hash>cids>multicodec": {
      "packages": {
        "@ensdomains/content-hash>cids>multicodec>varint": true,
        "@ensdomains/content-hash>cids>uint8arrays": true
      }
    },
    "@ensdomains/content-hash>cids>multihashes": {
      "packages": {
        "@ensdomains/content-hash>cids>multibase": true,
        "@ensdomains/content-hash>cids>uint8arrays": true,
        "@ensdomains/content-hash>multihashes>varint": true
      }
    },
    "@ensdomains/content-hash>cids>uint8arrays": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true
      },
      "packages": {
        "@ensdomains/content-hash>cids>multibase": true
      }
    },
    "@ensdomains/content-hash>js-base64": {
      "globals": {
        "Base64": "write",
        "TextDecoder": true,
        "TextEncoder": true,
        "atob": true,
        "btoa": true,
        "define": true
      },
      "packages": {
        "browserify>buffer": true
      }
    },
    "@ensdomains/content-hash>multicodec": {
      "packages": {
        "@ensdomains/content-hash>multicodec>uint8arrays": true,
        "@ensdomains/content-hash>multicodec>varint": true
      }
    },
    "@ensdomains/content-hash>multicodec>uint8arrays": {
      "packages": {
        "@ensdomains/content-hash>multicodec>uint8arrays>multibase": true,
        "@ensdomains/content-hash>multihashes>web-encoding": true
      }
    },
    "@ensdomains/content-hash>multicodec>uint8arrays>multibase": {
      "packages": {
        "@ensdomains/content-hash>cids>multibase>@multiformats/base-x": true,
        "@ensdomains/content-hash>multihashes>web-encoding": true
      }
    },
    "@ensdomains/content-hash>multihashes": {
      "packages": {
        "@ensdomains/content-hash>multihashes>multibase": true,
        "@ensdomains/content-hash>multihashes>varint": true,
        "@ensdomains/content-hash>multihashes>web-encoding": true,
        "browserify>buffer": true
      }
    },
    "@ensdomains/content-hash>multihashes>multibase": {
      "packages": {
        "@ensdomains/content-hash>multihashes>web-encoding": true,
        "browserify>buffer": true,
        "ethereumjs-wallet>bs58check>bs58>base-x": true
      }
    },
    "@ensdomains/content-hash>multihashes>web-encoding": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true
      },
      "packages": {
        "browserify>util": true
      }
    },
    "@eth-optimism/contracts": {
      "packages": {
        "ethers": true
      }
    },
    "@ethereumjs/common": {
      "packages": {
        "@ethereumjs/common>crc-32": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "ethereumjs-util": true
      }
    },
    "@ethereumjs/common>crc-32": {
      "globals": {
        "DO_NOT_EXPORT_CRC": true,
        "define": true
      }
    },
    "@ethereumjs/tx": {
      "packages": {
        "@ethereumjs/common": true,
        "browserify>buffer": true,
        "browserify>insert-module-globals>is-buffer": true,
        "ethereumjs-util": true
      }
    },
    "@formatjs/intl-relativetimeformat": {
      "globals": {
        "Intl": true
      },
      "packages": {
        "@formatjs/intl-relativetimeformat>@formatjs/intl-utils": true
      }
    },
    "@formatjs/intl-relativetimeformat>@formatjs/intl-utils": {
      "globals": {
        "Intl.getCanonicalLocales": true
      }
    },
    "@keystonehq/bc-ur-registry-eth": {
      "packages": {
        "@keystonehq/bc-ur-registry-eth>@keystonehq/bc-ur-registry": true,
        "@keystonehq/bc-ur-registry-eth>hdkey": true,
        "browserify>buffer": true,
        "ethereumjs-util": true,
        "uuid": true
      }
    },
    "@keystonehq/bc-ur-registry-eth>@keystonehq/bc-ur-registry": {
      "globals": {
        "define": true
      },
      "packages": {
        "@ngraveio/bc-ur": true,
        "browserify>buffer": true,
        "ethereumjs-wallet>bs58check": true
      }
    },
    "@keystonehq/bc-ur-registry-eth>hdkey": {
      "packages": {
        "@keystonehq/bc-ur-registry-eth>hdkey>secp256k1": true,
        "browserify>assert": true,
        "browserify>crypto-browserify": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "@keystonehq/bc-ur-registry-eth>hdkey>secp256k1": {
      "packages": {
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring": {
      "packages": {
        "@ethereumjs/tx": true,
        "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring": true,
        "@keystonehq/metamask-airgapped-keyring>@keystonehq/bc-ur-registry-eth": true,
        "@keystonehq/metamask-airgapped-keyring>@metamask/obs-store": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "ethereumjs-util>rlp": true,
        "uuid": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring": {
      "packages": {
        "@keystonehq/bc-ur-registry-eth>hdkey": true,
        "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@ethereumjs/tx": true,
        "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@keystonehq/bc-ur-registry-eth": true,
        "browserify>buffer": true,
        "ethereumjs-util": true,
        "uuid": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@ethereumjs/tx": {
      "packages": {
        "@ethereumjs/common": true,
        "browserify>buffer": true,
        "ethereumjs-util": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@keystonehq/bc-ur-registry-eth": {
      "packages": {
        "@keystonehq/bc-ur-registry-eth>@keystonehq/bc-ur-registry": true,
        "@keystonehq/bc-ur-registry-eth>hdkey": true,
        "browserify>buffer": true,
        "ethereumjs-util": true,
        "uuid": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@keystonehq/bc-ur-registry-eth": {
      "packages": {
        "@keystonehq/bc-ur-registry-eth>@keystonehq/bc-ur-registry": true,
        "@keystonehq/bc-ur-registry-eth>hdkey": true,
        "browserify>buffer": true,
        "ethereumjs-util": true,
        "uuid": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@metamask/obs-store": {
      "packages": {
        "@keystonehq/metamask-airgapped-keyring>@metamask/obs-store>through2": true,
        "browserify>stream-browserify": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "@keystonehq/metamask-airgapped-keyring>@metamask/obs-store>through2": {
      "packages": {
        "browserify>process": true,
        "browserify>util": true,
        "readable-stream": true,
        "watchify>xtend": true
      }
    },
    "@material-ui/core": {
      "globals": {
        "Image": true,
        "_formatMuiErrorMessage": true,
        "addEventListener": true,
        "clearInterval": true,
        "clearTimeout": true,
        "console.error": true,
        "console.warn": true,
        "document": true,
        "getComputedStyle": true,
        "getSelection": true,
        "innerHeight": true,
        "innerWidth": true,
        "matchMedia": true,
        "navigator": true,
        "performance.now": true,
        "removeEventListener": true,
        "requestAnimationFrame": true,
        "setInterval": true,
        "setTimeout": true
      },
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/styles": true,
        "@material-ui/core>@material-ui/system": true,
        "@material-ui/core>@material-ui/utils": true,
        "@material-ui/core>clsx": true,
        "@material-ui/core>popper.js": true,
        "@material-ui/core>react-transition-group": true,
        "prop-types": true,
        "prop-types>react-is": true,
        "react": true,
        "react-dom": true,
        "react-redux>hoist-non-react-statics": true
      }
    },
    "@material-ui/core>@material-ui/styles": {
      "globals": {
        "console.error": true,
        "console.warn": true,
        "document.createComment": true,
        "document.head": true
      },
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/styles>jss": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-camel-case": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-default-unit": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-global": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-nested": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-props-sort": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-rule-value-function": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-vendor-prefixer": true,
        "@material-ui/core>@material-ui/utils": true,
        "@material-ui/core>clsx": true,
        "prop-types": true,
        "react": true,
        "react-redux>hoist-non-react-statics": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss": {
      "globals": {
        "CSS": true,
        "document.createElement": true,
        "document.querySelector": true
      },
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/styles>jss>is-in-browser": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-camel-case": {
      "packages": {
        "@material-ui/core>@material-ui/styles>jss-plugin-camel-case>hyphenate-style-name": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-default-unit": {
      "globals": {
        "CSS": true
      },
      "packages": {
        "@material-ui/core>@material-ui/styles>jss": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-global": {
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/styles>jss": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-nested": {
      "packages": {
        "@babel/runtime": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-rule-value-function": {
      "packages": {
        "@material-ui/core>@material-ui/styles>jss": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-vendor-prefixer": {
      "packages": {
        "@material-ui/core>@material-ui/styles>jss": true,
        "@material-ui/core>@material-ui/styles>jss-plugin-vendor-prefixer>css-vendor": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss-plugin-vendor-prefixer>css-vendor": {
      "globals": {
        "document.createElement": true,
        "document.documentElement": true,
        "getComputedStyle": true
      },
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/styles>jss>is-in-browser": true
      }
    },
    "@material-ui/core>@material-ui/styles>jss>is-in-browser": {
      "globals": {
        "document": true
      }
    },
    "@material-ui/core>@material-ui/system": {
      "globals": {
        "console.error": true
      },
      "packages": {
        "@babel/runtime": true,
        "@material-ui/core>@material-ui/utils": true,
        "prop-types": true
      }
    },
    "@material-ui/core>@material-ui/utils": {
      "packages": {
        "@babel/runtime": true,
        "prop-types": true,
        "prop-types>react-is": true
      }
    },
    "@material-ui/core>popper.js": {
      "globals": {
        "MSInputMethodContext": true,
        "Node.DOCUMENT_POSITION_FOLLOWING": true,
        "cancelAnimationFrame": true,
        "console.warn": true,
        "define": true,
        "devicePixelRatio": true,
        "document": true,
        "getComputedStyle": true,
        "innerHeight": true,
        "innerWidth": true,
        "navigator": true,
        "requestAnimationFrame": true,
        "setTimeout": true
      }
    },
    "@material-ui/core>react-transition-group": {
      "globals": {
        "Element": true,
        "setTimeout": true
      },
      "packages": {
        "@material-ui/core>react-transition-group>dom-helpers": true,
        "prop-types": true,
        "react": true,
        "react-dom": true
      }
    },
    "@material-ui/core>react-transition-group>dom-helpers": {
      "packages": {
        "@babel/runtime": true
      }
    },
    "@metamask/controllers": {
      "globals": {
        "Headers": true,
        "URL": true,
        "clearInterval": true,
        "clearTimeout": true,
        "console.error": true,
        "console.log": true,
        "fetch": true,
        "setInterval": true,
        "setTimeout": true
      },
      "packages": {
        "@ethereumjs/common": true,
        "@ethereumjs/tx": true,
        "@metamask/contract-metadata": true,
        "@metamask/controllers>abort-controller": true,
        "@metamask/controllers>async-mutex": true,
        "@metamask/controllers>eth-method-registry": true,
        "@metamask/controllers>eth-phishing-detect": true,
        "@metamask/controllers>ethereumjs-wallet": true,
        "@metamask/controllers>isomorphic-fetch": true,
        "@metamask/controllers>multiformats": true,
        "@metamask/controllers>nanoid": true,
        "@metamask/controllers>web3-provider-engine": true,
        "@metamask/metamask-eth-abis": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "deep-freeze-strict": true,
        "eslint>fast-deep-equal": true,
        "eth-ens-namehash": true,
        "eth-json-rpc-infura": true,
        "eth-keyring-controller": true,
        "eth-query": true,
        "eth-rpc-errors": true,
        "eth-sig-util": true,
        "ethereumjs-util": true,
        "ethers": true,
        "ethjs>ethjs-unit": true,
        "immer": true,
        "json-rpc-engine": true,
        "jsonschema": true,
        "punycode": true,
        "single-call-balance-checker-abi": true,
        "uuid": true,
        "web3": true
      }
    },
    "@metamask/controllers>abort-controller": {
      "globals": {
        "AbortController": true
      }
    },
    "@metamask/controllers>async-mutex": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "@metamask/controllers>async-mutex>tslib": true
      }
    },
    "@metamask/controllers>async-mutex>tslib": {
      "globals": {
        "define": true
      }
    },
    "@metamask/controllers>eth-method-registry": {
      "packages": {
        "@metamask/controllers>eth-method-registry>ethjs": true
      }
    },
    "@metamask/controllers>eth-method-registry>ethjs": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      },
      "packages": {
        "@metamask/controllers>eth-method-registry>ethjs>bn.js": true,
        "@metamask/controllers>eth-method-registry>ethjs>ethjs-abi": true,
        "@metamask/controllers>eth-method-registry>ethjs>ethjs-contract": true,
        "@metamask/controllers>eth-method-registry>ethjs>ethjs-query": true,
        "browserify>buffer": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-provider-http": true,
        "ethjs>ethjs-unit": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/controllers>eth-method-registry>ethjs>ethjs-abi": {
      "packages": {
        "@metamask/controllers>eth-method-registry>ethjs>bn.js": true,
        "browserify>buffer": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/controllers>eth-method-registry>ethjs>ethjs-contract": {
      "packages": {
        "@metamask/controllers>eth-method-registry>ethjs>ethjs-contract>ethjs-abi": true,
        "ethjs-query>babel-runtime": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "promise-to-callback": true
      }
    },
    "@metamask/controllers>eth-method-registry>ethjs>ethjs-contract>ethjs-abi": {
      "packages": {
        "@metamask/controllers>eth-method-registry>ethjs>bn.js": true,
        "browserify>buffer": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/controllers>eth-method-registry>ethjs>ethjs-query": {
      "globals": {
        "console": true
      },
      "packages": {
        "ethjs-query>babel-runtime": true,
        "ethjs-query>ethjs-format": true,
        "ethjs-query>ethjs-rpc": true,
        "promise-to-callback": true
      }
    },
    "@metamask/controllers>eth-phishing-detect": {
      "packages": {
        "eslint>optionator>fast-levenshtein": true
      }
    },
    "@metamask/controllers>ethereumjs-wallet": {
      "packages": {
        "@metamask/controllers>ethereumjs-wallet>uuid": true,
        "@truffle/codec>utf8": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify": true,
        "ethereumjs-util": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-wallet>aes-js": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>randombytes": true,
        "ethers>@ethersproject/json-wallets>scrypt-js": true
      }
    },
    "@metamask/controllers>ethereumjs-wallet>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "@metamask/controllers>isomorphic-fetch": {
      "globals": {
        "fetch.bind": true
      },
      "packages": {
        "@metamask/controllers>isomorphic-fetch>whatwg-fetch": true
      }
    },
    "@metamask/controllers>isomorphic-fetch>whatwg-fetch": {
      "globals": {
        "Blob": true,
        "FileReader": true,
        "FormData": true,
        "URLSearchParams.prototype.isPrototypeOf": true,
        "XMLHttpRequest": true,
        "define": true,
        "setTimeout": true
      }
    },
    "@metamask/controllers>multiformats": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true,
        "console.warn": true
      }
    },
    "@metamask/controllers>nanoid": {
      "globals": {
        "crypto.getRandomValues": true
      }
    },
    "@metamask/controllers>web3-provider-engine": {
      "globals": {
        "WebSocket": true,
        "console": true,
        "setTimeout": true
      },
      "packages": {
        "@ethereumjs/tx": true,
        "@metamask/controllers>web3-provider-engine>backoff": true,
        "@metamask/controllers>web3-provider-engine>eth-block-tracker": true,
        "@metamask/controllers>web3-provider-engine>eth-json-rpc-middleware": true,
        "@metamask/controllers>web3-provider-engine>eth-sig-util": true,
        "@metamask/controllers>web3-provider-engine>ethereumjs-util": true,
        "@metamask/controllers>web3-provider-engine>semaphore": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>util": true,
        "eth-json-rpc-filters": true,
        "eth-json-rpc-infura": true,
        "lavamoat>json-stable-stringify": true,
        "mockttp>portfinder>async": true,
        "watchify>xtend": true
      }
    },
    "@metamask/controllers>web3-provider-engine>backoff": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      },
      "packages": {
        "@metamask/controllers>web3-provider-engine>backoff>precond": true,
        "browserify>events": true,
        "browserify>util": true
      }
    },
    "@metamask/controllers>web3-provider-engine>backoff>precond": {
      "packages": {
        "browserify>util": true
      }
    },
    "@metamask/controllers>web3-provider-engine>cross-fetch>node-fetch": {
      "globals": {
        "fetch": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-block-tracker": {
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "setTimeout": true
      },
      "packages": {
        "@metamask/controllers>web3-provider-engine>eth-block-tracker>pify": true,
        "eth-query": true,
        "safe-event-emitter": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-json-rpc-middleware": {
      "globals": {
        "console.error": true,
        "fetch": true,
        "setTimeout": true
      },
      "packages": {
        "@metamask/controllers>web3-provider-engine>eth-json-rpc-middleware>json-rpc-engine": true,
        "@metamask/controllers>web3-provider-engine>eth-rpc-errors": true,
        "browserify>url": true,
        "lavamoat>json-stable-stringify": true,
        "node-fetch": true,
        "source-map-explorer>btoa": true,
        "vinyl>clone": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-json-rpc-middleware>node-fetch": {
      "globals": {
        "fetch": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-rpc-errors": {
      "packages": {
        "eth-rpc-errors>fast-safe-stringify": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-sig-util": {
      "packages": {
        "@metamask/controllers>web3-provider-engine>eth-sig-util>ethereumjs-abi": true,
        "@metamask/controllers>web3-provider-engine>ethereumjs-util": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-sig-util>ethereumjs-abi": {
      "packages": {
        "@metamask/controllers>web3-provider-engine>eth-sig-util>ethereumjs-abi>ethereumjs-util": true,
        "bn.js": true,
        "browserify>buffer": true
      }
    },
    "@metamask/controllers>web3-provider-engine>eth-sig-util>ethereumjs-abi>ethereumjs-util": {
      "packages": {
        "@metamask/controllers>web3-provider-engine>ethereumjs-util>ethjs-util": true,
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "@metamask/controllers>web3-provider-engine>ethereumjs-util": {
      "packages": {
        "@metamask/controllers>web3-provider-engine>ethereumjs-util>ethjs-util": true,
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "@metamask/controllers>web3-provider-engine>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "@metamask/controllers>web3-provider-engine>semaphore": {
      "globals": {
        "define": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>process": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring": {
      "globals": {
        "addEventListener": true,
        "console.log": true,
        "document.createElement": true,
        "document.head.appendChild": true,
        "fetch": true,
        "removeEventListener": true
      },
      "packages": {
        "@ethereumjs/tx": true,
        "@metamask/eth-ledger-bridge-keyring>eth-sig-util": true,
        "@metamask/eth-ledger-bridge-keyring>hdkey": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "ethereumjs-util": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring>eth-sig-util": {
      "packages": {
        "@metamask/eth-ledger-bridge-keyring>eth-sig-util>ethereumjs-util": true,
        "browserify>buffer": true,
        "eth-sig-util>tweetnacl": true,
        "eth-sig-util>tweetnacl-util": true,
        "ethereumjs-abi": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring>eth-sig-util>ethereumjs-util": {
      "packages": {
        "@metamask/eth-ledger-bridge-keyring>eth-sig-util>ethereumjs-util>ethjs-util": true,
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring>eth-sig-util>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring>hdkey": {
      "packages": {
        "@metamask/eth-ledger-bridge-keyring>hdkey>secp256k1": true,
        "browserify>assert": true,
        "browserify>crypto-browserify": true,
        "eth-trezor-keyring>hdkey>coinstring": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "@metamask/eth-ledger-bridge-keyring>hdkey>secp256k1": {
      "packages": {
        "bn.js": true,
        "browserify>insert-module-globals>is-buffer": true,
        "eth-trezor-keyring>hdkey>secp256k1>bip66": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "@metamask/eth-token-tracker": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "@babel/runtime": true,
        "@metamask/eth-token-tracker>eth-block-tracker": true,
        "@metamask/eth-token-tracker>ethjs": true,
        "@metamask/eth-token-tracker>human-standard-token-abi": true,
        "ethjs-contract": true,
        "ethjs-query": true,
        "nock>deep-equal": true,
        "safe-event-emitter": true
      }
    },
    "@metamask/eth-token-tracker>eth-block-tracker": {
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "setTimeout": true
      },
      "packages": {
        "@metamask/eth-token-tracker>eth-block-tracker>pify": true,
        "eth-query": true,
        "safe-event-emitter": true
      }
    },
    "@metamask/eth-token-tracker>ethjs": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      },
      "packages": {
        "@metamask/eth-token-tracker>ethjs>bn.js": true,
        "@metamask/eth-token-tracker>ethjs>ethjs-abi": true,
        "@metamask/eth-token-tracker>ethjs>ethjs-contract": true,
        "@metamask/eth-token-tracker>ethjs>ethjs-query": true,
        "browserify>buffer": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-provider-http": true,
        "ethjs>ethjs-unit": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/eth-token-tracker>ethjs>ethjs-abi": {
      "packages": {
        "@metamask/eth-token-tracker>ethjs>bn.js": true,
        "browserify>buffer": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/eth-token-tracker>ethjs>ethjs-contract": {
      "packages": {
        "@metamask/eth-token-tracker>ethjs>ethjs-contract>ethjs-abi": true,
        "ethjs-query>babel-runtime": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "promise-to-callback": true
      }
    },
    "@metamask/eth-token-tracker>ethjs>ethjs-contract>ethjs-abi": {
      "packages": {
        "@metamask/eth-token-tracker>ethjs>bn.js": true,
        "browserify>buffer": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "@metamask/eth-token-tracker>ethjs>ethjs-query": {
      "globals": {
        "console": true
      },
      "packages": {
        "ethjs-query>babel-runtime": true,
        "ethjs-query>ethjs-format": true,
        "ethjs-query>ethjs-rpc": true,
        "promise-to-callback": true
      }
    },
    "@metamask/etherscan-link": {
      "globals": {
        "URL": true
      }
    },
    "@metamask/jazzicon": {
      "globals": {
        "document.createElement": true,
        "document.createElementNS": true
      },
      "packages": {
        "@metamask/jazzicon>color": true,
        "@metamask/jazzicon>mersenne-twister": true
      }
    },
    "@metamask/jazzicon>color": {
      "packages": {
        "@metamask/jazzicon>color>clone": true,
        "@metamask/jazzicon>color>color-convert": true,
        "@metamask/jazzicon>color>color-string": true
      }
    },
    "@metamask/jazzicon>color>clone": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "@metamask/jazzicon>color>color-convert": {
      "packages": {
        "@metamask/jazzicon>color>color-convert>color-name": true
      }
    },
    "@metamask/jazzicon>color>color-string": {
      "packages": {
        "jest-canvas-mock>moo-color>color-name": true
      }
    },
    "@metamask/logo": {
      "globals": {
        "addEventListener": true,
        "document.body.appendChild": true,
        "document.createElementNS": true,
        "innerHeight": true,
        "innerWidth": true,
        "requestAnimationFrame": true
      },
      "packages": {
        "@metamask/logo>gl-mat4": true,
        "@metamask/logo>gl-vec3": true
      }
    },
    "@metamask/obs-store": {
      "globals": {
        "localStorage": true
      },
      "packages": {
        "@metamask/obs-store>through2": true,
        "browserify>stream-browserify": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "@metamask/obs-store>through2": {
      "packages": {
        "browserify>process": true,
        "browserify>util": true,
        "readable-stream": true,
        "watchify>xtend": true
      }
    },
    "@metamask/providers>@metamask/object-multiplex": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "end-of-stream": true,
        "pump>once": true,
        "readable-stream": true
      }
    },
    "@metamask/rpc-methods": {
      "packages": {
        "@metamask/controllers": true,
        "@metamask/rpc-methods>@metamask/key-tree": true,
        "@metamask/rpc-methods>@metamask/utils": true,
        "@metamask/snap-controllers": true,
        "eth-rpc-errors": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree": {
      "packages": {
        "@metamask/rpc-methods>@metamask/key-tree>@noble/ed25519": true,
        "@metamask/rpc-methods>@metamask/key-tree>@noble/hashes": true,
        "@metamask/rpc-methods>@metamask/key-tree>@noble/secp256k1": true,
        "@metamask/rpc-methods>@metamask/key-tree>@scure/base": true,
        "@metamask/rpc-methods>@metamask/key-tree>@scure/bip39": true,
        "browserify>buffer": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree>@noble/ed25519": {
      "globals": {
        "crypto": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree>@noble/hashes": {
      "globals": {
        "TextEncoder": true,
        "crypto": true,
        "setTimeout": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree>@noble/secp256k1": {
      "globals": {
        "crypto": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree>@scure/base": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true
      }
    },
    "@metamask/rpc-methods>@metamask/key-tree>@scure/bip39": {
      "packages": {
        "@metamask/rpc-methods>@metamask/key-tree>@noble/hashes": true,
        "@metamask/rpc-methods>@metamask/key-tree>@scure/base": true
      }
    },
    "@metamask/rpc-methods>@metamask/utils": {
      "packages": {
        "eslint>fast-deep-equal": true
      }
    },
    "@metamask/smart-transactions-controller": {
      "globals": {
        "URLSearchParams": true,
        "clearInterval": true,
        "console.error": true,
        "console.log": true,
        "fetch": true,
        "setInterval": true
      },
      "packages": {
        "@metamask/controllers": true,
        "@metamask/controllers>isomorphic-fetch": true,
        "@metamask/smart-transactions-controller>bignumber.js": true,
        "@metamask/smart-transactions-controller>fast-json-patch": true,
        "ethers": true,
        "lodash": true
      }
    },
    "@metamask/smart-transactions-controller>@metamask/controllers>nanoid": {
      "globals": {
        "crypto.getRandomValues": true
      }
    },
    "@metamask/smart-transactions-controller>bignumber.js": {
      "globals": {
        "crypto": true,
        "define": true
      }
    },
    "@metamask/smart-transactions-controller>fast-json-patch": {
      "globals": {
        "addEventListener": true,
        "clearTimeout": true,
        "removeEventListener": true,
        "setTimeout": true
      }
    },
    "@metamask/snap-controllers": {
      "globals": {
        "URL": true,
        "clearTimeout": true,
        "console.error": true,
        "console.info": true,
        "console.log": true,
        "console.warn": true,
        "document.body.appendChild": true,
        "document.createElement": true,
        "document.getElementById": true,
        "fetch": true,
        "setTimeout": true
      },
      "packages": {
        "@metamask/controllers": true,
        "@metamask/providers>@metamask/object-multiplex": true,
        "@metamask/rpc-methods>@metamask/utils": true,
        "@metamask/snap-controllers>@metamask/browser-passworder": true,
        "@metamask/snap-controllers>@metamask/execution-environments": true,
        "@metamask/snap-controllers>@metamask/obs-store": true,
        "@metamask/snap-controllers>@metamask/post-message-stream": true,
        "@metamask/snap-controllers>ajv": true,
        "@metamask/snap-controllers>concat-stream": true,
        "@metamask/snap-controllers>gunzip-maybe": true,
        "@metamask/snap-controllers>json-rpc-middleware-stream": true,
        "@metamask/snap-controllers>nanoid": true,
        "@metamask/snap-controllers>readable-web-to-node-stream": true,
        "@metamask/snap-controllers>tar-stream": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify": true,
        "eslint>fast-deep-equal": true,
        "eth-rpc-errors": true,
        "json-rpc-engine": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true,
        "pump": true,
        "semver": true
      }
    },
    "@metamask/snap-controllers>@metamask/browser-passworder": {
      "globals": {
        "btoa": true,
        "crypto.getRandomValues": true,
        "crypto.subtle.decrypt": true,
        "crypto.subtle.deriveKey": true,
        "crypto.subtle.encrypt": true,
        "crypto.subtle.importKey": true
      },
      "packages": {
        "browserify>buffer": true
      }
    },
    "@metamask/snap-controllers>@metamask/obs-store": {
      "packages": {
        "@metamask/snap-controllers>@metamask/obs-store>through2": true,
        "browserify>stream-browserify": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "@metamask/snap-controllers>@metamask/obs-store>through2": {
      "packages": {
        "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream": true,
        "browserify>process": true,
        "browserify>util": true,
        "watchify>xtend": true
      }
    },
    "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream": {
      "packages": {
        "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream>process-nextick-args": true,
        "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream>string_decoder": true,
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true,
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>timers-browserify": true,
        "pumpify>inherits": true,
        "readable-stream>core-util-is": true,
        "readable-stream>isarray": true
      }
    },
    "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream>process-nextick-args": {
      "packages": {
        "browserify>process": true
      }
    },
    "@metamask/snap-controllers>@metamask/obs-store>through2>readable-stream>string_decoder": {
      "packages": {
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true
      }
    },
    "@metamask/snap-controllers>@metamask/post-message-stream": {
      "globals": {
        "WorkerGlobalScope": true,
        "addEventListener": true,
        "location.origin": true,
        "onmessage": "write",
        "postMessage": true,
        "removeEventListener": true
      },
      "packages": {
        "@metamask/rpc-methods>@metamask/utils": true,
        "@metamask/snap-controllers>@metamask/post-message-stream>readable-stream": true
      }
    },
    "@metamask/snap-controllers>@metamask/post-message-stream>readable-stream": {
      "packages": {
        "@metamask/snap-controllers>@metamask/post-message-stream>readable-stream>string_decoder": true,
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true,
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>timers-browserify": true,
        "pumpify>inherits": true,
        "readable-stream>core-util-is": true,
        "readable-stream>isarray": true,
        "vinyl>cloneable-readable>process-nextick-args": true
      }
    },
    "@metamask/snap-controllers>@metamask/post-message-stream>readable-stream>string_decoder": {
      "packages": {
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true
      }
    },
    "@metamask/snap-controllers>ajv": {
      "packages": {
        "eslint>fast-deep-equal": true
      }
    },
    "@metamask/snap-controllers>concat-stream": {
      "packages": {
        "@metamask/snap-controllers>concat-stream>readable-stream": true,
        "browserify>buffer": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>concat-stream>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe": {
      "packages": {
        "@metamask/snap-controllers>gunzip-maybe>browserify-zlib": true,
        "@metamask/snap-controllers>gunzip-maybe>is-deflate": true,
        "@metamask/snap-controllers>gunzip-maybe>is-gzip": true,
        "@metamask/snap-controllers>gunzip-maybe>peek-stream": true,
        "@metamask/snap-controllers>gunzip-maybe>pumpify": true,
        "@metamask/snap-controllers>gunzip-maybe>through2": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>browserify-zlib": {
      "packages": {
        "@metamask/snap-controllers>gunzip-maybe>browserify-zlib>pako": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "browserify>process": true,
        "browserify>util": true,
        "readable-stream": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>peek-stream": {
      "packages": {
        "@metamask/snap-controllers>gunzip-maybe>peek-stream>duplexify": true,
        "@metamask/snap-controllers>gunzip-maybe>peek-stream>through2": true,
        "browserify>buffer": true,
        "terser>source-map-support>buffer-from": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>peek-stream>duplexify": {
      "packages": {
        "browserify>buffer": true,
        "browserify>process": true,
        "duplexify>stream-shift": true,
        "end-of-stream": true,
        "pumpify>inherits": true,
        "readable-stream": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>peek-stream>through2": {
      "packages": {
        "browserify>process": true,
        "browserify>util": true,
        "readable-stream": true,
        "watchify>xtend": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>pumpify": {
      "packages": {
        "@metamask/snap-controllers>gunzip-maybe>pumpify>duplexify": true,
        "@metamask/snap-controllers>gunzip-maybe>pumpify>pump": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>pumpify>duplexify": {
      "packages": {
        "browserify>buffer": true,
        "browserify>process": true,
        "duplexify>stream-shift": true,
        "end-of-stream": true,
        "pumpify>inherits": true,
        "readable-stream": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>pumpify>pump": {
      "packages": {
        "browserify>browser-resolve": true,
        "end-of-stream": true,
        "pump>once": true
      }
    },
    "@metamask/snap-controllers>gunzip-maybe>through2": {
      "packages": {
        "browserify>process": true,
        "browserify>util": true,
        "readable-stream": true,
        "watchify>xtend": true
      }
    },
    "@metamask/snap-controllers>json-rpc-middleware-stream": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream": {
      "packages": {
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>process-nextick-args": true,
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true,
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>string_decoder": true,
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>timers-browserify": true,
        "pumpify>inherits": true,
        "readable-stream>core-util-is": true,
        "readable-stream>isarray": true
      }
    },
    "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>process-nextick-args": {
      "packages": {
        "browserify>process": true
      }
    },
    "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>string_decoder": {
      "packages": {
        "@metamask/snap-controllers>json-rpc-middleware-stream>readable-stream>safe-buffer": true
      }
    },
    "@metamask/snap-controllers>nanoid": {
      "globals": {
        "crypto.getRandomValues": true
      }
    },
    "@metamask/snap-controllers>readable-web-to-node-stream": {
      "packages": {
        "@metamask/snap-controllers>readable-web-to-node-stream>readable-stream": true
      }
    },
    "@metamask/snap-controllers>readable-web-to-node-stream>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>tar-stream": {
      "packages": {
        "@metamask/snap-controllers>tar-stream>bl": true,
        "@metamask/snap-controllers>tar-stream>fs-constants": true,
        "@metamask/snap-controllers>tar-stream>readable-stream": true,
        "browserify>buffer": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "browserify>util": true,
        "end-of-stream": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>tar-stream>bl": {
      "packages": {
        "@metamask/snap-controllers>tar-stream>readable-stream": true,
        "browserify>buffer": true,
        "pumpify>inherits": true
      }
    },
    "@metamask/snap-controllers>tar-stream>fs-constants": {
      "packages": {
        "browserify>constants-browserify": true
      }
    },
    "@metamask/snap-controllers>tar-stream>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "@ngraveio/bc-ur": {
      "packages": {
        "@ngraveio/bc-ur>@apocentre/alias-sampling": true,
        "@ngraveio/bc-ur>bignumber.js": true,
        "@ngraveio/bc-ur>crc": true,
        "@ngraveio/bc-ur>jsbi": true,
        "addons-linter>sha.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "pubnub>cbor-sync": true
      }
    },
    "@ngraveio/bc-ur>bignumber.js": {
      "globals": {
        "crypto": true,
        "define": true
      }
    },
    "@ngraveio/bc-ur>crc": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "@ngraveio/bc-ur>jsbi": {
      "globals": {
        "define": true
      }
    },
    "@popperjs/core": {
      "globals": {
        "Element": true,
        "HTMLElement": true,
        "ShadowRoot": true,
        "console.error": true,
        "console.warn": true,
        "document": true,
        "navigator.userAgent": true
      }
    },
    "@reduxjs/toolkit": {
      "globals": {
        "AbortController": true,
        "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__": true,
        "__REDUX_DEVTOOLS_EXTENSION__": true,
        "console.error": true,
        "console.info": true,
        "console.warn": true
      },
      "packages": {
        "@reduxjs/toolkit>reselect": true,
        "immer": true,
        "redux": true,
        "redux-thunk": true
      }
    },
    "@sentry/browser": {
      "globals": {
        "XMLHttpRequest": true,
        "setTimeout": true
      },
      "packages": {
        "@sentry/browser>@sentry/core": true,
        "@sentry/browser>@sentry/types": true,
        "@sentry/browser>@sentry/utils": true,
        "@sentry/browser>tslib": true
      }
    },
    "@sentry/browser>@sentry/core": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      },
      "packages": {
        "@sentry/browser>@sentry/core>@sentry/hub": true,
        "@sentry/browser>@sentry/core>@sentry/minimal": true,
        "@sentry/browser>@sentry/types": true,
        "@sentry/browser>@sentry/utils": true,
        "@sentry/browser>tslib": true
      }
    },
    "@sentry/browser>@sentry/core>@sentry/hub": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      },
      "packages": {
        "@sentry/browser>@sentry/types": true,
        "@sentry/browser>@sentry/utils": true,
        "@sentry/browser>tslib": true
      }
    },
    "@sentry/browser>@sentry/core>@sentry/minimal": {
      "packages": {
        "@sentry/browser>@sentry/core>@sentry/hub": true,
        "@sentry/browser>tslib": true
      }
    },
    "@sentry/browser>@sentry/utils": {
      "globals": {
        "CustomEvent": true,
        "DOMError": true,
        "DOMException": true,
        "Element": true,
        "ErrorEvent": true,
        "Event": true,
        "Headers": true,
        "Request": true,
        "Response": true,
        "XMLHttpRequest.prototype": true,
        "clearTimeout": true,
        "console.error": true,
        "document": true,
        "setTimeout": true
      },
      "packages": {
        "@sentry/browser>tslib": true,
        "browserify>process": true
      }
    },
    "@sentry/browser>tslib": {
      "globals": {
        "define": true
      }
    },
    "@sentry/integrations": {
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "console.log": true,
        "setTimeout": true
      },
      "packages": {
        "@sentry/browser>@sentry/types": true,
        "@sentry/browser>@sentry/utils": true,
        "@sentry/browser>tslib": true,
        "localforage": true
      }
    },
    "@spruceid/siwe-parser": {
      "globals": {
        "console.error": true,
        "console.log": true
      },
      "packages": {
        "@spruceid/siwe-parser>apg-js": true
      }
    },
    "@spruceid/siwe-parser>apg-js": {
      "globals": {
        "mode": true
      },
      "packages": {
        "browserify>buffer": true,
        "browserify>insert-module-globals>is-buffer": true
      }
    },
    "@storybook/api>regenerator-runtime": {
      "globals": {
        "regeneratorRuntime": "write"
      }
    },
    "@storybook/api>util-deprecate": {
      "globals": {
        "console.trace": true,
        "console.warn": true,
        "localStorage": true
      }
    },
    "@truffle/codec": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils": true,
        "@truffle/codec>@truffle/compile-common": true,
        "@truffle/codec>big.js": true,
        "@truffle/codec>bn.js": true,
        "@truffle/codec>cbor": true,
        "@truffle/codec>lodash.escaperegexp": true,
        "@truffle/codec>lodash.partition": true,
        "@truffle/codec>lodash.sum": true,
        "@truffle/codec>utf8": true,
        "@truffle/codec>web3-utils": true,
        "browserify>buffer": true,
        "browserify>util": true,
        "eslint>debug": true,
        "gulp-dart-sass>lodash.clonedeep": true,
        "semver": true
      }
    },
    "@truffle/codec>@truffle/abi-utils": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case": true,
        "@truffle/codec>@truffle/abi-utils>faker": true,
        "@truffle/codec>@truffle/abi-utils>fast-check": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>camel-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>constant-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>dot-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>header-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>is-lower-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>is-upper-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case-first": true,
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>param-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>pascal-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>path-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>sentence-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>snake-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>swap-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>title-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case-first": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>camel-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>constant-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>snake-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>dot-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>header-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>is-lower-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>is-upper-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>lower-case-first": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>no-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>param-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>pascal-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>camel-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case-first": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>path-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>sentence-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case-first": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>snake-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>swap-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>lower-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>title-case": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>no-case": true,
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>change-case>upper-case-first": {
      "packages": {
        "@truffle/codec>@truffle/abi-utils>change-case>upper-case": true
      }
    },
    "@truffle/codec>@truffle/abi-utils>faker": {
      "globals": {
        "console.error": true,
        "console.log": true,
        "dbg": "write"
      }
    },
    "@truffle/codec>@truffle/abi-utils>fast-check": {
      "globals": {
        "clearTimeout": true,
        "console.log": true,
        "setTimeout": true
      },
      "packages": {
        "@truffle/codec>@truffle/abi-utils>fast-check>pure-rand": true,
        "browserify>buffer": true
      }
    },
    "@truffle/codec>@truffle/compile-common": {
      "packages": {
        "@truffle/codec>@truffle/compile-common>@truffle/error": true,
        "@truffle/codec>@truffle/compile-common>colors": true,
        "browserify>path-browserify": true
      }
    },
    "@truffle/codec>@truffle/compile-common>colors": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "browserify>os-browserify": true,
        "browserify>process": true,
        "browserify>util": true
      }
    },
    "@truffle/codec>big.js": {
      "globals": {
        "define": true
      }
    },
    "@truffle/codec>bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "@truffle/codec>cbor": {
      "globals": {
        "TextDecoder": true
      },
      "packages": {
        "@truffle/codec>cbor>bignumber.js": true,
        "@truffle/codec>cbor>nofilter": true,
        "browserify>buffer": true,
        "browserify>insert-module-globals>is-buffer": true,
        "browserify>stream-browserify": true,
        "browserify>url": true,
        "browserify>util": true
      }
    },
    "@truffle/codec>cbor>bignumber.js": {
      "globals": {
        "crypto": true,
        "define": true
      }
    },
    "@truffle/codec>cbor>nofilter": {
      "packages": {
        "browserify>buffer": true,
        "browserify>stream-browserify": true,
        "browserify>util": true
      }
    },
    "@truffle/codec>web3-utils": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "@truffle/codec>utf8": true,
        "@truffle/codec>web3-utils>eth-lib": true,
        "@truffle/codec>web3-utils>ethereum-bloom-filters": true,
        "bn.js": true,
        "browserify>insert-module-globals>is-buffer": true,
        "ethereumjs-wallet>randombytes": true,
        "ethjs>ethjs-unit": true,
        "ethjs>number-to-bn": true
      }
    },
    "@truffle/codec>web3-utils>ethereum-bloom-filters": {
      "packages": {
        "@truffle/codec>web3-utils>ethereum-bloom-filters>js-sha3": true
      }
    },
    "@truffle/codec>web3-utils>ethereum-bloom-filters>js-sha3": {
      "globals": {
        "define": true
      },
      "packages": {
        "browserify>process": true
      }
    },
    "@truffle/decoder": {
      "packages": {
        "@truffle/codec": true,
        "@truffle/codec>@truffle/abi-utils": true,
        "@truffle/codec>@truffle/compile-common": true,
        "@truffle/codec>web3-utils": true,
        "@truffle/decoder>@truffle/source-map-utils": true,
        "@truffle/decoder>bn.js": true,
        "eslint>debug": true
      }
    },
    "@truffle/decoder>@truffle/source-map-utils": {
      "packages": {
        "@truffle/codec": true,
        "@truffle/codec>web3-utils": true,
        "@truffle/decoder>@truffle/source-map-utils>@truffle/code-utils": true,
        "@truffle/decoder>@truffle/source-map-utils>json-pointer": true,
        "@truffle/decoder>@truffle/source-map-utils>node-interval-tree": true,
        "eslint>debug": true
      }
    },
    "@truffle/decoder>@truffle/source-map-utils>@truffle/code-utils": {
      "packages": {
        "@truffle/codec>cbor": true,
        "browserify>buffer": true
      }
    },
    "@truffle/decoder>@truffle/source-map-utils>json-pointer": {
      "packages": {
        "@truffle/decoder>@truffle/source-map-utils>json-pointer>foreach": true
      }
    },
    "@truffle/decoder>@truffle/source-map-utils>node-interval-tree": {
      "packages": {
        "react-dnd>shallowequal": true
      }
    },
    "@truffle/decoder>bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "@zxing/browser": {
      "globals": {
        "HTMLElement": true,
        "HTMLImageElement": true,
        "HTMLVideoElement": true,
        "URL.createObjectURL": true,
        "clearTimeout": true,
        "console.error": true,
        "console.warn": true,
        "document": true,
        "navigator": true,
        "setTimeout": true
      },
      "packages": {
        "@zxing/library": true
      }
    },
    "@zxing/library": {
      "globals": {
        "TextDecoder": true,
        "TextEncoder": true,
        "btoa": true,
        "clearTimeout": true,
        "define": true,
        "document.createElement": true,
        "document.createElementNS": true,
        "document.getElementById": true,
        "navigator.mediaDevices.enumerateDevices": true,
        "navigator.mediaDevices.getUserMedia": true,
        "setTimeout": true
      }
    },
    "addons-linter>sha.js": {
      "packages": {
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "analytics-node": {
      "globals": {
        "clearTimeout": true,
        "console.log": true,
        "setImmediate": true,
        "setTimeout": true
      },
      "packages": {
        "analytics-node>@segment/loosely-validate-event": true,
        "analytics-node>axios": true,
        "analytics-node>axios-retry": true,
        "analytics-node>lodash.isstring": true,
        "analytics-node>md5": true,
        "analytics-node>ms": true,
        "analytics-node>remove-trailing-slash": true,
        "analytics-node>uuid": true,
        "browserify>assert": true,
        "browserify>process": true
      }
    },
    "analytics-node>@segment/loosely-validate-event": {
      "packages": {
        "analytics-node>@segment/loosely-validate-event>component-type": true,
        "analytics-node>@segment/loosely-validate-event>join-component": true,
        "browserify>assert": true,
        "browserify>buffer": true
      }
    },
    "analytics-node>axios": {
      "globals": {
        "FormData": true,
        "URLSearchParams": true,
        "XMLHttpRequest": true,
        "btoa": true,
        "console.warn": true,
        "document": true,
        "location.href": true,
        "navigator": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>process": true
      }
    },
    "analytics-node>axios-retry": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "geckodriver>got>is-retry-allowed": true
      }
    },
    "analytics-node>md5": {
      "packages": {
        "analytics-node>md5>charenc": true,
        "analytics-node>md5>crypt": true,
        "browserify>insert-module-globals>is-buffer": true
      }
    },
    "analytics-node>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "await-semaphore": {
      "packages": {
        "browserify>process": true,
        "browserify>timers-browserify": true
      }
    },
    "base32-encode": {
      "packages": {
        "base32-encode>to-data-view": true
      }
    },
    "bignumber.js": {
      "globals": {
        "crypto": true,
        "define": true
      }
    },
    "bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "browserify>assert": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>assert>util": true,
        "react>object-assign": true
      }
    },
    "browserify>assert>util": {
      "globals": {
        "console.error": true,
        "console.log": true,
        "console.trace": true,
        "process": true
      },
      "packages": {
        "browserify>assert>util>inherits": true,
        "browserify>process": true
      }
    },
    "browserify>browser-resolve": {
      "packages": {
        "ethjs-query>babel-runtime>core-js": true
      }
    },
    "browserify>buffer": {
      "globals": {
        "console": true
      },
      "packages": {
        "base64-js": true,
        "browserify>buffer>ieee754": true
      }
    },
    "browserify>crypto-browserify": {
      "packages": {
        "browserify>crypto-browserify>browserify-cipher": true,
        "browserify>crypto-browserify>browserify-sign": true,
        "browserify>crypto-browserify>create-ecdh": true,
        "browserify>crypto-browserify>create-hmac": true,
        "browserify>crypto-browserify>diffie-hellman": true,
        "browserify>crypto-browserify>pbkdf2": true,
        "browserify>crypto-browserify>public-encrypt": true,
        "browserify>crypto-browserify>randomfill": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>randombytes": true
      }
    },
    "browserify>crypto-browserify>browserify-cipher": {
      "packages": {
        "browserify>crypto-browserify>browserify-cipher>browserify-des": true,
        "browserify>crypto-browserify>browserify-cipher>evp_bytestokey": true,
        "ethereumjs-util>ethereum-cryptography>browserify-aes": true
      }
    },
    "browserify>crypto-browserify>browserify-cipher>browserify-des": {
      "packages": {
        "browserify>buffer": true,
        "browserify>crypto-browserify>browserify-cipher>browserify-des>des.js": true,
        "ethereumjs-util>create-hash>cipher-base": true,
        "pumpify>inherits": true
      }
    },
    "browserify>crypto-browserify>browserify-cipher>browserify-des>des.js": {
      "packages": {
        "ethers>@ethersproject/sha2>hash.js>minimalistic-assert": true,
        "pumpify>inherits": true
      }
    },
    "browserify>crypto-browserify>browserify-cipher>evp_bytestokey": {
      "packages": {
        "ethereumjs-util>create-hash>md5.js": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "browserify>crypto-browserify>browserify-sign": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify>create-hmac": true,
        "browserify>crypto-browserify>public-encrypt>browserify-rsa": true,
        "browserify>crypto-browserify>public-encrypt>parse-asn1": true,
        "browserify>stream-browserify": true,
        "ethereumjs-util>create-hash": true,
        "ethers>@ethersproject/signing-key>elliptic": true,
        "pumpify>inherits": true
      }
    },
    "browserify>crypto-browserify>create-ecdh": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "browserify>crypto-browserify>create-hmac": {
      "packages": {
        "addons-linter>sha.js": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>create-hash>cipher-base": true,
        "ethereumjs-util>create-hash>ripemd160": true,
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "browserify>crypto-browserify>diffie-hellman": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify>diffie-hellman>miller-rabin": true,
        "ethereumjs-wallet>randombytes": true
      }
    },
    "browserify>crypto-browserify>diffie-hellman>miller-rabin": {
      "packages": {
        "bn.js": true,
        "ethers>@ethersproject/signing-key>elliptic>brorand": true
      }
    },
    "browserify>crypto-browserify>pbkdf2": {
      "globals": {
        "crypto": true,
        "process": true,
        "queueMicrotask": true,
        "setImmediate": true,
        "setTimeout": true
      },
      "packages": {
        "addons-linter>sha.js": true,
        "browserify>process": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>create-hash>ripemd160": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "browserify>crypto-browserify>public-encrypt": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify>public-encrypt>browserify-rsa": true,
        "browserify>crypto-browserify>public-encrypt>parse-asn1": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>randombytes": true
      }
    },
    "browserify>crypto-browserify>public-encrypt>browserify-rsa": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "ethereumjs-wallet>randombytes": true
      }
    },
    "browserify>crypto-browserify>public-encrypt>parse-asn1": {
      "packages": {
        "browserify>buffer": true,
        "browserify>crypto-browserify>browserify-cipher>evp_bytestokey": true,
        "browserify>crypto-browserify>pbkdf2": true,
        "browserify>crypto-browserify>public-encrypt>parse-asn1>asn1.js": true,
        "ethereumjs-util>ethereum-cryptography>browserify-aes": true
      }
    },
    "browserify>crypto-browserify>public-encrypt>parse-asn1>asn1.js": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "browserify>vm-browserify": true,
        "ethers>@ethersproject/sha2>hash.js>minimalistic-assert": true,
        "pumpify>inherits": true
      }
    },
    "browserify>crypto-browserify>randomfill": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      },
      "packages": {
        "browserify>process": true,
        "ethereumjs-wallet>randombytes": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "browserify>events": {
      "globals": {
        "console": true
      }
    },
    "browserify>https-browserify": {
      "packages": {
        "browserify>stream-http": true,
        "browserify>url": true
      }
    },
    "browserify>os-browserify": {
      "globals": {
        "location": true,
        "navigator": true
      }
    },
    "browserify>path-browserify": {
      "packages": {
        "browserify>process": true
      }
    },
    "browserify>process": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      }
    },
    "browserify>punycode": {
      "globals": {
        "define": true
      }
    },
    "browserify>stream-browserify": {
      "packages": {
        "browserify>events": true,
        "pumpify>inherits": true,
        "readable-stream": true
      }
    },
    "browserify>stream-http": {
      "globals": {
        "AbortController": true,
        "Blob": true,
        "MSStreamReader": true,
        "ReadableStream": true,
        "WritableStream": true,
        "XDomainRequest": true,
        "XMLHttpRequest": true,
        "clearTimeout": true,
        "fetch": true,
        "location.protocol.search": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>buffer": true,
        "browserify>process": true,
        "browserify>stream-http>builtin-status-codes": true,
        "browserify>stream-http>readable-stream": true,
        "browserify>url": true,
        "pumpify>inherits": true,
        "watchify>xtend": true
      }
    },
    "browserify>stream-http>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "browserify>string_decoder": {
      "packages": {
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "browserify>timers-browserify": {
      "globals": {
        "clearInterval": true,
        "clearTimeout": true,
        "setInterval": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>process": true
      }
    },
    "browserify>url": {
      "packages": {
        "browserify>punycode": true,
        "browserify>querystring-es3": true
      }
    },
    "browserify>util": {
      "globals": {
        "console.error": true,
        "console.log": true,
        "console.trace": true,
        "process": true
      },
      "packages": {
        "browserify>process": true,
        "browserify>util>inherits": true
      }
    },
    "browserify>vm-browserify": {
      "globals": {
        "document.body.appendChild": true,
        "document.body.removeChild": true,
        "document.createElement": true
      }
    },
    "classnames": {
      "globals": {
        "classNames": "write",
        "define": true
      }
    },
    "copy-to-clipboard": {
      "globals": {
        "clipboardData": true,
        "console.error": true,
        "console.warn": true,
        "document.body.appendChild": true,
        "document.body.removeChild": true,
        "document.createElement": true,
        "document.createRange": true,
        "document.execCommand": true,
        "document.getSelection": true,
        "navigator.userAgent": true,
        "prompt": true
      },
      "packages": {
        "copy-to-clipboard>toggle-selection": true
      }
    },
    "copy-to-clipboard>toggle-selection": {
      "globals": {
        "document.activeElement": true,
        "document.getSelection": true
      }
    },
    "currency-formatter": {
      "packages": {
        "currency-formatter>accounting": true,
        "currency-formatter>locale-currency": true,
        "react>object-assign": true
      }
    },
    "currency-formatter>accounting": {
      "globals": {
        "define": true
      }
    },
    "currency-formatter>locale-currency": {
      "globals": {
        "countryCode": true
      }
    },
    "debounce-stream": {
      "packages": {
        "debounce-stream>debounce": true,
        "debounce-stream>duplexer": true,
        "debounce-stream>through": true
      }
    },
    "debounce-stream>debounce": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      }
    },
    "debounce-stream>duplexer": {
      "packages": {
        "browserify>stream-browserify": true
      }
    },
    "debounce-stream>through": {
      "packages": {
        "browserify>process": true,
        "browserify>stream-browserify": true
      }
    },
    "depcheck>@vue/compiler-sfc>postcss>nanoid": {
      "globals": {
        "crypto.getRandomValues": true
      }
    },
    "dependency-tree>precinct>detective-postcss>postcss>nanoid": {
      "globals": {
        "crypto.getRandomValues": true
      }
    },
    "end-of-stream": {
      "packages": {
        "browserify>process": true,
        "pump>once": true
      }
    },
    "enzyme>has": {
      "packages": {
        "mocha>object.assign>function-bind": true
      }
    },
    "enzyme>is-regex": {
      "packages": {
        "enzyme>is-regex>has-tostringtag": true,
        "string.prototype.matchall>call-bind": true
      }
    },
    "enzyme>is-regex>has-tostringtag": {
      "packages": {
        "string.prototype.matchall>has-symbols": true
      }
    },
    "eslint>debug": {
      "globals": {
        "console": true,
        "document": true,
        "localStorage": true,
        "navigator": true,
        "process": true
      },
      "packages": {
        "browserify>process": true,
        "eslint>debug>ms": true
      }
    },
    "eslint>optionator>fast-levenshtein": {
      "globals": {
        "Intl": true,
        "Levenshtein": "write",
        "console.log": true,
        "define": true,
        "importScripts": true,
        "postMessage": true
      }
    },
    "eth-block-tracker": {
      "globals": {
        "clearTimeout": true,
        "console.error": true,
        "setTimeout": true
      },
      "packages": {
        "eth-block-tracker>pify": true,
        "eth-query>json-rpc-random-id": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "eth-ens-namehash": {
      "globals": {
        "name": "write"
      },
      "packages": {
        "browserify>buffer": true,
        "eth-ens-namehash>idna-uts46-hx": true,
        "eth-ens-namehash>js-sha3": true
      }
    },
    "eth-ens-namehash>idna-uts46-hx": {
      "globals": {
        "define": true
      },
      "packages": {
        "browserify>punycode": true
      }
    },
    "eth-ens-namehash>js-sha3": {
      "packages": {
        "browserify>process": true
      }
    },
    "eth-json-rpc-filters": {
      "globals": {
        "console.error": true,
        "results": "write"
      },
      "packages": {
        "await-semaphore": true,
        "eth-json-rpc-filters>eth-json-rpc-middleware": true,
        "eth-json-rpc-filters>eth-json-rpc-middleware>pify": true,
        "eth-json-rpc-filters>json-rpc-engine": true,
        "eth-json-rpc-filters>lodash.flatmap": true,
        "eth-query": true,
        "safe-event-emitter": true
      }
    },
    "eth-json-rpc-filters>eth-json-rpc-middleware": {
      "packages": {
        "eth-json-rpc-filters>json-rpc-engine": true
      }
    },
    "eth-json-rpc-infura": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "eth-json-rpc-infura>eth-json-rpc-middleware": true,
        "eth-json-rpc-infura>eth-rpc-errors": true,
        "eth-json-rpc-infura>json-rpc-engine": true,
        "node-fetch": true
      }
    },
    "eth-json-rpc-infura>eth-json-rpc-middleware": {
      "packages": {
        "safe-event-emitter": true
      }
    },
    "eth-json-rpc-infura>eth-rpc-errors": {
      "packages": {
        "eth-rpc-errors>fast-safe-stringify": true
      }
    },
    "eth-json-rpc-infura>json-rpc-engine": {
      "packages": {
        "eth-json-rpc-infura>eth-rpc-errors": true,
        "safe-event-emitter": true
      }
    },
    "eth-json-rpc-middleware": {
      "globals": {
        "URL": true,
        "btoa": true,
        "console.error": true,
        "fetch": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>browser-resolve": true,
        "eth-json-rpc-middleware>eth-sig-util": true,
        "eth-json-rpc-middleware>pify": true,
        "eth-rpc-errors": true,
        "json-rpc-engine": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true,
        "lavamoat>json-stable-stringify": true,
        "vinyl>clone": true
      }
    },
    "eth-json-rpc-middleware>eth-sig-util": {
      "packages": {
        "eth-json-rpc-middleware>eth-sig-util>ethereumjs-abi": true,
        "eth-json-rpc-middleware>eth-sig-util>ethereumjs-util": true
      }
    },
    "eth-json-rpc-middleware>eth-sig-util>ethereumjs-abi": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "eth-json-rpc-middleware>eth-sig-util>ethereumjs-abi>ethereumjs-util": true
      }
    },
    "eth-json-rpc-middleware>eth-sig-util>ethereumjs-abi>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "eth-json-rpc-middleware>eth-sig-util>ethereumjs-util>ethjs-util": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "eth-json-rpc-middleware>eth-sig-util>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "eth-json-rpc-middleware>eth-sig-util>ethereumjs-util>ethjs-util": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "eth-json-rpc-middleware>eth-sig-util>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "eth-keyring-controller": {
      "packages": {
        "browserify>buffer": true,
        "browserify>events": true,
        "eth-keyring-controller>@metamask/bip39": true,
        "eth-keyring-controller>@metamask/eth-hd-keyring": true,
        "eth-keyring-controller>browser-passworder": true,
        "eth-keyring-controller>eth-simple-keyring": true,
        "eth-keyring-controller>obs-store": true,
        "eth-sig-util": true
      }
    },
    "eth-keyring-controller>@metamask/bip39": {
      "packages": {
        "browserify>buffer": true,
        "browserify>crypto-browserify>pbkdf2": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>randombytes": true
      }
    },
    "eth-keyring-controller>@metamask/eth-hd-keyring": {
      "packages": {
        "browserify>buffer": true,
        "eth-keyring-controller>@metamask/bip39": true,
        "eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet": true,
        "eth-keyring-controller>eth-simple-keyring": true,
        "eth-trezor-keyring>@metamask/eth-sig-util": true
      }
    },
    "eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet": {
      "packages": {
        "@truffle/codec>utf8": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify": true,
        "eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet>uuid": true,
        "ethereumjs-util": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-wallet>aes-js": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>randombytes": true,
        "ethers>@ethersproject/json-wallets>scrypt-js": true
      }
    },
    "eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "eth-keyring-controller>browser-passworder": {
      "globals": {
        "btoa": true,
        "crypto": true
      },
      "packages": {
        "eth-keyring-controller>browser-passworder>browserify-unibabel": true
      }
    },
    "eth-keyring-controller>browser-passworder>browserify-unibabel": {
      "globals": {
        "atob": true,
        "btoa": true
      }
    },
    "eth-keyring-controller>eth-simple-keyring": {
      "packages": {
        "browserify>buffer": true,
        "browserify>events": true,
        "eth-keyring-controller>eth-simple-keyring>ethereumjs-wallet": true,
        "eth-sig-util": true,
        "ethereumjs-util": true
      }
    },
    "eth-keyring-controller>eth-simple-keyring>ethereumjs-wallet": {
      "packages": {
        "@truffle/codec>utf8": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify": true,
        "eth-keyring-controller>eth-simple-keyring>ethereumjs-wallet>uuid": true,
        "ethereumjs-util": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-wallet>aes-js": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>randombytes": true,
        "ethers>@ethersproject/json-wallets>scrypt-js": true
      }
    },
    "eth-keyring-controller>eth-simple-keyring>ethereumjs-wallet>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "eth-keyring-controller>obs-store": {
      "packages": {
        "safe-event-emitter": true,
        "watchify>xtend": true
      }
    },
    "eth-lattice-keyring": {
      "globals": {
        "addEventListener": true,
        "browser": true,
        "clearInterval": true,
        "fetch": true,
        "open": true,
        "setInterval": true,
        "txData.type": true
      },
      "packages": {
        "@ethereumjs/common": true,
        "@ethereumjs/tx": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify": true,
        "browserify>events": true,
        "eth-lattice-keyring>bn.js": true,
        "eth-lattice-keyring>gridplus-sdk": true,
        "eth-lattice-keyring>rlp": true,
        "ethereumjs-util": true,
        "ganache>secp256k1": true
      }
    },
    "eth-lattice-keyring>bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "eth-lattice-keyring>gridplus-sdk": {
      "globals": {
        "AggregateError": true,
        "Buffer": true,
        "DO_NOT_EXPORT_CRC": true,
        "FinalizationRegistry": true,
        "HTMLElement": true,
        "TextEncoder": true,
        "URL": true,
        "URLSearchParams": true,
        "WeakRef": true,
        "XMLHttpRequest": true,
        "btoa": true,
        "clearTimeout": true,
        "console": true,
        "crypto": true,
        "define": true,
        "intToBuffer": true,
        "location": true,
        "msCrypto": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>buffer": true,
        "browserify>process": true
      }
    },
    "eth-lattice-keyring>rlp": {
      "globals": {
        "TextEncoder": true
      }
    },
    "eth-method-registry": {
      "packages": {
        "ethjs": true
      }
    },
    "eth-query": {
      "packages": {
        "eth-query>json-rpc-random-id": true,
        "watchify>xtend": true
      }
    },
    "eth-rpc-errors": {
      "packages": {
        "eth-rpc-errors>fast-safe-stringify": true
      }
    },
    "eth-sig-util": {
      "packages": {
        "browserify>buffer": true,
        "eth-sig-util>ethereumjs-util": true,
        "eth-sig-util>tweetnacl": true,
        "eth-sig-util>tweetnacl-util": true,
        "ethereumjs-abi": true
      }
    },
    "eth-sig-util>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "eth-sig-util>ethereumjs-util>ethjs-util": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "eth-sig-util>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "eth-sig-util>tweetnacl": {
      "globals": {
        "crypto": true,
        "msCrypto": true,
        "nacl": "write"
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "eth-sig-util>tweetnacl-util": {
      "globals": {
        "atob": true,
        "btoa": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "eth-trezor-keyring": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "@ethereumjs/tx": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "eth-trezor-keyring>hdkey": true,
        "eth-trezor-keyring>trezor-connect": true,
        "ethereumjs-util": true
      }
    },
    "eth-trezor-keyring>@metamask/eth-sig-util": {
      "packages": {
        "browserify>buffer": true,
        "eth-sig-util>tweetnacl": true,
        "eth-sig-util>tweetnacl-util": true,
        "eth-trezor-keyring>@metamask/eth-sig-util>ethereumjs-util": true,
        "eth-trezor-keyring>@metamask/eth-sig-util>ethjs-util": true,
        "ethereumjs-abi": true
      }
    },
    "eth-trezor-keyring>@metamask/eth-sig-util>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "eth-trezor-keyring>@metamask/eth-sig-util>ethjs-util": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "eth-trezor-keyring>@metamask/eth-sig-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "eth-trezor-keyring>hdkey": {
      "packages": {
        "browserify>assert": true,
        "browserify>crypto-browserify": true,
        "eth-trezor-keyring>hdkey>coinstring": true,
        "eth-trezor-keyring>hdkey>secp256k1": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "eth-trezor-keyring>hdkey>coinstring": {
      "packages": {
        "browserify>buffer": true,
        "eth-trezor-keyring>hdkey>coinstring>bs58": true,
        "ethereumjs-util>create-hash": true
      }
    },
    "eth-trezor-keyring>hdkey>secp256k1": {
      "packages": {
        "bn.js": true,
        "browserify>insert-module-globals>is-buffer": true,
        "eth-trezor-keyring>hdkey>secp256k1>bip66": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "eth-trezor-keyring>hdkey>secp256k1>bip66": {
      "packages": {
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "eth-trezor-keyring>trezor-connect": {
      "globals": {
        "__TREZOR_CONNECT_SRC": true,
        "addEventListener": true,
        "btoa": true,
        "chrome": true,
        "clearInterval": true,
        "clearTimeout": true,
        "console": true,
        "document.body": true,
        "document.createElement": true,
        "document.createTextNode": true,
        "document.getElementById": true,
        "document.querySelectorAll": true,
        "location": true,
        "navigator": true,
        "open": true,
        "removeEventListener": true,
        "setInterval": true,
        "setTimeout": true
      },
      "packages": {
        "@babel/runtime": true,
        "browserify>events": true,
        "eth-trezor-keyring>@metamask/eth-sig-util": true,
        "eth-trezor-keyring>trezor-connect>cross-fetch": true
      }
    },
    "eth-trezor-keyring>trezor-connect>cross-fetch": {
      "globals": {
        "Blob": true,
        "FileReader": true,
        "FormData": true,
        "URLSearchParams.prototype.isPrototypeOf": true,
        "XMLHttpRequest": true
      }
    },
    "ethereumjs-abi": {
      "packages": {
        "bn.js": true,
        "browserify>buffer": true,
        "ethereumjs-abi>ethereumjs-util": true
      }
    },
    "ethereumjs-abi>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "ethereumjs-abi>ethereumjs-util>ethjs-util": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "ethereumjs-abi>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "ethereumjs-util": {
      "packages": {
        "browserify>assert": true,
        "browserify>buffer": true,
        "browserify>insert-module-globals>is-buffer": true,
        "ethereumjs-util>bn.js": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>ethjs-util": true,
        "ethereumjs-util>rlp": true
      }
    },
    "ethereumjs-util>bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "ethereumjs-util>create-hash": {
      "packages": {
        "addons-linter>sha.js": true,
        "ethereumjs-util>create-hash>cipher-base": true,
        "ethereumjs-util>create-hash>md5.js": true,
        "ethereumjs-util>create-hash>ripemd160": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>create-hash>cipher-base": {
      "packages": {
        "browserify>stream-browserify": true,
        "browserify>string_decoder": true,
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>create-hash>md5.js": {
      "packages": {
        "ethereumjs-util>create-hash>md5.js>hash-base": true,
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>create-hash>md5.js>hash-base": {
      "packages": {
        "ethereumjs-util>create-hash>md5.js>hash-base>readable-stream": true,
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>create-hash>md5.js>hash-base>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>create-hash>ripemd160": {
      "packages": {
        "browserify>buffer": true,
        "ethereumjs-util>create-hash>md5.js>hash-base": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>ethereum-cryptography": {
      "packages": {
        "browserify>assert": true,
        "browserify>buffer": true,
        "browserify>crypto-browserify>create-hmac": true,
        "ethereumjs-util>ethereum-cryptography>keccak": true,
        "ethereumjs-util>ethereum-cryptography>secp256k1": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>randombytes": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethers>@ethersproject/sha2>hash.js": true
      }
    },
    "ethereumjs-util>ethereum-cryptography>browserify-aes": {
      "packages": {
        "browserify>buffer": true,
        "browserify>crypto-browserify>browserify-cipher>evp_bytestokey": true,
        "ethereumjs-util>create-hash>cipher-base": true,
        "ethereumjs-util>ethereum-cryptography>browserify-aes>buffer-xor": true,
        "ethereumjs-wallet>safe-buffer": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>ethereum-cryptography>browserify-aes>buffer-xor": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "ethereumjs-util>ethereum-cryptography>keccak": {
      "packages": {
        "browserify>buffer": true,
        "ethereumjs-util>ethereum-cryptography>keccak>readable-stream": true
      }
    },
    "ethereumjs-util>ethereum-cryptography>keccak>readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>buffer": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>string_decoder": true,
        "pumpify>inherits": true
      }
    },
    "ethereumjs-util>ethereum-cryptography>secp256k1": {
      "packages": {
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "ethereumjs-util>rlp": {
      "packages": {
        "browserify>buffer": true,
        "ethereumjs-util>rlp>bn.js": true
      }
    },
    "ethereumjs-util>rlp>bn.js": {
      "globals": {
        "Buffer": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "ethereumjs-wallet": {
      "packages": {
        "@truffle/codec>utf8": true,
        "browserify>crypto-browserify": true,
        "ethereumjs-wallet>aes-js": true,
        "ethereumjs-wallet>bs58check": true,
        "ethereumjs-wallet>ethereumjs-util": true,
        "ethereumjs-wallet>randombytes": true,
        "ethereumjs-wallet>safe-buffer": true,
        "ethereumjs-wallet>scryptsy": true,
        "ethereumjs-wallet>uuid": true
      }
    },
    "ethereumjs-wallet>aes-js": {
      "globals": {
        "define": true
      }
    },
    "ethereumjs-wallet>bs58check": {
      "packages": {
        "ethereumjs-util>create-hash": true,
        "ethereumjs-wallet>bs58check>bs58": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "ethereumjs-wallet>bs58check>bs58": {
      "packages": {
        "ethereumjs-wallet>bs58check>bs58>base-x": true
      }
    },
    "ethereumjs-wallet>bs58check>bs58>base-x": {
      "packages": {
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "ethereumjs-wallet>ethereumjs-util": {
      "packages": {
        "bn.js": true,
        "browserify>assert": true,
        "browserify>buffer": true,
        "ethereumjs-util>create-hash": true,
        "ethereumjs-util>ethereum-cryptography": true,
        "ethereumjs-util>rlp": true,
        "ethereumjs-wallet>ethereumjs-util>ethjs-util": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "ethereumjs-wallet>ethereumjs-util>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "ethereumjs-wallet>randombytes": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      },
      "packages": {
        "browserify>process": true,
        "ethereumjs-wallet>safe-buffer": true
      }
    },
    "ethereumjs-wallet>safe-buffer": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "ethereumjs-wallet>scryptsy": {
      "packages": {
        "browserify>buffer": true,
        "browserify>crypto-browserify>pbkdf2": true
      }
    },
    "ethereumjs-wallet>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "ethers": {
      "packages": {
        "ethers>@ethersproject/abi": true,
        "ethers>@ethersproject/abstract-signer": true,
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/base64": true,
        "ethers>@ethersproject/basex": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/constants": true,
        "ethers>@ethersproject/contracts": true,
        "ethers>@ethersproject/hash": true,
        "ethers>@ethersproject/hdnode": true,
        "ethers>@ethersproject/json-wallets": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/providers": true,
        "ethers>@ethersproject/random": true,
        "ethers>@ethersproject/rlp": true,
        "ethers>@ethersproject/sha2": true,
        "ethers>@ethersproject/signing-key": true,
        "ethers>@ethersproject/solidity": true,
        "ethers>@ethersproject/strings": true,
        "ethers>@ethersproject/transactions": true,
        "ethers>@ethersproject/units": true,
        "ethers>@ethersproject/wallet": true,
        "ethers>@ethersproject/web": true,
        "ethers>@ethersproject/wordlists": true
      }
    },
    "ethers>@ethersproject/abi": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/constants": true,
        "ethers>@ethersproject/hash": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/strings": true
      }
    },
    "ethers>@ethersproject/abstract-provider": {
      "packages": {
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true
      }
    },
    "ethers>@ethersproject/abstract-signer": {
      "packages": {
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true
      }
    },
    "ethers>@ethersproject/address": {
      "packages": {
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/rlp": true
      }
    },
    "ethers>@ethersproject/base64": {
      "globals": {
        "atob": true,
        "btoa": true
      },
      "packages": {
        "ethers>@ethersproject/bytes": true
      }
    },
    "ethers>@ethersproject/basex": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/properties": true
      }
    },
    "ethers>@ethersproject/bignumber": {
      "packages": {
        "bn.js": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/bytes": {
      "packages": {
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/constants": {
      "packages": {
        "ethers>@ethersproject/bignumber": true
      }
    },
    "ethers>@ethersproject/contracts": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "ethers>@ethersproject/abi": true,
        "ethers>@ethersproject/abstract-provider": true,
        "ethers>@ethersproject/abstract-signer": true,
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/transactions": true
      }
    },
    "ethers>@ethersproject/hash": {
      "packages": {
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/strings": true
      }
    },
    "ethers>@ethersproject/hdnode": {
      "packages": {
        "ethers>@ethersproject/basex": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/pbkdf2": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/sha2": true,
        "ethers>@ethersproject/signing-key": true,
        "ethers>@ethersproject/strings": true,
        "ethers>@ethersproject/transactions": true,
        "ethers>@ethersproject/wordlists": true
      }
    },
    "ethers>@ethersproject/json-wallets": {
      "packages": {
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/hdnode": true,
        "ethers>@ethersproject/json-wallets>aes-js": true,
        "ethers>@ethersproject/json-wallets>scrypt-js": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/pbkdf2": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/random": true,
        "ethers>@ethersproject/strings": true,
        "ethers>@ethersproject/transactions": true
      }
    },
    "ethers>@ethersproject/json-wallets>aes-js": {
      "globals": {
        "define": true
      }
    },
    "ethers>@ethersproject/json-wallets>scrypt-js": {
      "globals": {
        "define": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>timers-browserify": true
      }
    },
    "ethers>@ethersproject/keccak256": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/keccak256>js-sha3": true
      }
    },
    "ethers>@ethersproject/keccak256>js-sha3": {
      "globals": {
        "define": true
      },
      "packages": {
        "browserify>process": true
      }
    },
    "ethers>@ethersproject/logger": {
      "globals": {
        "console": true
      }
    },
    "ethers>@ethersproject/networks": {
      "packages": {
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/pbkdf2": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/sha2": true
      }
    },
    "ethers>@ethersproject/properties": {
      "packages": {
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/providers": {
      "globals": {
        "WebSocket": true,
        "clearInterval": true,
        "clearTimeout": true,
        "console.log": true,
        "console.warn": true,
        "name": true,
        "setInterval": true,
        "setTimeout": true
      },
      "packages": {
        "ethers>@ethersproject/abstract-provider": true,
        "ethers>@ethersproject/abstract-signer": true,
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/basex": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/constants": true,
        "ethers>@ethersproject/hash": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/networks": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/providers>bech32": true,
        "ethers>@ethersproject/random": true,
        "ethers>@ethersproject/sha2": true,
        "ethers>@ethersproject/strings": true,
        "ethers>@ethersproject/transactions": true,
        "ethers>@ethersproject/web": true
      }
    },
    "ethers>@ethersproject/random": {
      "globals": {
        "crypto.getRandomValues": true
      },
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/rlp": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/sha2": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/sha2>hash.js": true
      }
    },
    "ethers>@ethersproject/sha2>hash.js": {
      "packages": {
        "ethers>@ethersproject/sha2>hash.js>minimalistic-assert": true,
        "pumpify>inherits": true
      }
    },
    "ethers>@ethersproject/signing-key": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "ethers>@ethersproject/signing-key>elliptic": {
      "packages": {
        "bn.js": true,
        "ethers>@ethersproject/sha2>hash.js": true,
        "ethers>@ethersproject/sha2>hash.js>minimalistic-assert": true,
        "ethers>@ethersproject/signing-key>elliptic>brorand": true,
        "ethers>@ethersproject/signing-key>elliptic>hmac-drbg": true,
        "ethers>@ethersproject/signing-key>elliptic>minimalistic-crypto-utils": true,
        "pumpify>inherits": true
      }
    },
    "ethers>@ethersproject/signing-key>elliptic>brorand": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      },
      "packages": {
        "browserify>browser-resolve": true
      }
    },
    "ethers>@ethersproject/signing-key>elliptic>hmac-drbg": {
      "packages": {
        "ethers>@ethersproject/sha2>hash.js": true,
        "ethers>@ethersproject/sha2>hash.js>minimalistic-assert": true,
        "ethers>@ethersproject/signing-key>elliptic>minimalistic-crypto-utils": true
      }
    },
    "ethers>@ethersproject/solidity": {
      "packages": {
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/sha2": true,
        "ethers>@ethersproject/strings": true
      }
    },
    "ethers>@ethersproject/strings": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/constants": true,
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/transactions": {
      "globals": {
        "console.log": true
      },
      "packages": {
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/constants": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/rlp": true,
        "ethers>@ethersproject/signing-key": true
      }
    },
    "ethers>@ethersproject/units": {
      "packages": {
        "ethers>@ethersproject/bignumber": true,
        "ethers>@ethersproject/logger": true
      }
    },
    "ethers>@ethersproject/wallet": {
      "packages": {
        "ethers>@ethersproject/abstract-provider": true,
        "ethers>@ethersproject/abstract-signer": true,
        "ethers>@ethersproject/address": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/hash": true,
        "ethers>@ethersproject/hdnode": true,
        "ethers>@ethersproject/json-wallets": true,
        "ethers>@ethersproject/keccak256": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/random": true,
        "ethers>@ethersproject/signing-key": true,
        "ethers>@ethersproject/transactions": true
      }
    },
    "ethers>@ethersproject/web": {
      "globals": {
        "clearTimeout": true,
        "fetch": true,
        "setTimeout": true
      },
      "packages": {
        "ethers>@ethersproject/base64": true,
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/strings": true
      }
    },
    "ethers>@ethersproject/wordlists": {
      "packages": {
        "ethers>@ethersproject/bytes": true,
        "ethers>@ethersproject/hash": true,
        "ethers>@ethersproject/logger": true,
        "ethers>@ethersproject/properties": true,
        "ethers>@ethersproject/strings": true
      }
    },
    "ethjs": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      },
      "packages": {
        "browserify>buffer": true,
        "ethjs-contract": true,
        "ethjs-query": true,
        "ethjs>bn.js": true,
        "ethjs>ethjs-abi": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-provider-http": true,
        "ethjs>ethjs-unit": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "ethjs-contract": {
      "packages": {
        "ethjs-contract>ethjs-abi": true,
        "ethjs-query>babel-runtime": true,
        "ethjs>ethjs-filter": true,
        "ethjs>ethjs-util": true,
        "ethjs>js-sha3": true,
        "promise-to-callback": true
      }
    },
    "ethjs-contract>ethjs-abi": {
      "packages": {
        "browserify>buffer": true,
        "ethjs-contract>ethjs-abi>bn.js": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "ethjs-query": {
      "globals": {
        "console": true
      },
      "packages": {
        "ethjs-query>ethjs-format": true,
        "ethjs-query>ethjs-rpc": true,
        "promise-to-callback": true
      }
    },
    "ethjs-query>babel-runtime": {
      "packages": {
        "@babel/runtime": true,
        "@storybook/api>regenerator-runtime": true,
        "ethjs-query>babel-runtime>core-js": true
      }
    },
    "ethjs-query>babel-runtime>core-js": {
      "globals": {
        "PromiseRejectionEvent": true,
        "__e": "write",
        "__g": "write",
        "document.createTextNode": true,
        "postMessage": true,
        "setTimeout": true
      }
    },
    "ethjs-query>ethjs-format": {
      "packages": {
        "ethjs-query>ethjs-format>ethjs-schema": true,
        "ethjs>ethjs-util": true,
        "ethjs>ethjs-util>strip-hex-prefix": true,
        "ethjs>number-to-bn": true
      }
    },
    "ethjs-query>ethjs-rpc": {
      "packages": {
        "promise-to-callback": true
      }
    },
    "ethjs>ethjs-abi": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>bn.js": true,
        "ethjs>js-sha3": true,
        "ethjs>number-to-bn": true
      }
    },
    "ethjs>ethjs-filter": {
      "globals": {
        "clearInterval": true,
        "setInterval": true
      }
    },
    "ethjs>ethjs-provider-http": {
      "packages": {
        "ethjs>ethjs-provider-http>xhr2": true
      }
    },
    "ethjs>ethjs-provider-http>xhr2": {
      "globals": {
        "XMLHttpRequest": true
      }
    },
    "ethjs>ethjs-unit": {
      "packages": {
        "ethjs>ethjs-unit>bn.js": true,
        "ethjs>number-to-bn": true
      }
    },
    "ethjs>ethjs-util": {
      "packages": {
        "browserify>buffer": true,
        "ethjs>ethjs-util>is-hex-prefixed": true,
        "ethjs>ethjs-util>strip-hex-prefix": true
      }
    },
    "ethjs>ethjs-util>strip-hex-prefix": {
      "packages": {
        "ethjs>ethjs-util>is-hex-prefixed": true
      }
    },
    "ethjs>js-sha3": {
      "packages": {
        "browserify>process": true
      }
    },
    "ethjs>number-to-bn": {
      "packages": {
        "ethjs>ethjs-util>strip-hex-prefix": true,
        "ethjs>number-to-bn>bn.js": true
      }
    },
    "extension-port-stream": {
      "packages": {
        "browserify>buffer": true,
        "browserify>stream-browserify": true
      }
    },
    "fast-json-patch": {
      "globals": {
        "addEventListener": true,
        "clearTimeout": true,
        "removeEventListener": true,
        "setTimeout": true
      },
      "packages": {
        "fast-json-patch>fast-deep-equal": true
      }
    },
    "fuse.js": {
      "globals": {
        "console": true,
        "define": true
      }
    },
    "ganache>secp256k1": {
      "packages": {
        "ethers>@ethersproject/signing-key>elliptic": true
      }
    },
    "globalthis>define-properties": {
      "packages": {
        "globalthis>define-properties>has-property-descriptors": true,
        "nock>deep-equal>object-keys": true
      }
    },
    "globalthis>define-properties>has-property-descriptors": {
      "packages": {
        "string.prototype.matchall>get-intrinsic": true
      }
    },
    "json-rpc-engine": {
      "packages": {
        "eth-rpc-errors": true,
        "json-rpc-engine>@metamask/safe-event-emitter": true
      }
    },
    "json-rpc-engine>@metamask/safe-event-emitter": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "browserify>events": true
      }
    },
    "json-rpc-middleware-stream": {
      "packages": {
        "readable-stream": true
      }
    },
    "jsonschema": {
      "packages": {
        "browserify>url": true
      }
    },
    "lavamoat>json-stable-stringify": {
      "packages": {
        "lavamoat>json-stable-stringify>jsonify": true
      }
    },
    "localforage": {
      "globals": {
        "Blob": true,
        "BlobBuilder": true,
        "FileReader": true,
        "IDBKeyRange": true,
        "MSBlobBuilder": true,
        "MozBlobBuilder": true,
        "OIndexedDB": true,
        "WebKitBlobBuilder": true,
        "atob": true,
        "btoa": true,
        "console.error": true,
        "console.info": true,
        "console.warn": true,
        "define": true,
        "fetch": true,
        "indexedDB": true,
        "localStorage": true,
        "mozIndexedDB": true,
        "msIndexedDB": true,
        "navigator.platform": true,
        "navigator.userAgent": true,
        "openDatabase": true,
        "setTimeout": true,
        "webkitIndexedDB": true
      }
    },
    "lodash": {
      "globals": {
        "clearTimeout": true,
        "define": true,
        "setTimeout": true
      }
    },
    "loglevel": {
      "globals": {
        "console": true,
        "define": true,
        "document.cookie": true,
        "localStorage": true,
        "log": "write"
      }
    },
    "luxon": {
      "globals": {
        "Intl": true
      }
    },
    "mockttp>portfinder>async": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "browserify>process": true,
        "browserify>timers-browserify": true,
        "lodash": true
      }
    },
    "nanoid": {
      "globals": {
        "crypto": true,
        "msCrypto": true,
        "navigator": true
      }
    },
    "nock>deep-equal": {
      "packages": {
        "enzyme>is-regex": true,
        "enzyme>object-is": true,
        "nock>deep-equal>is-arguments": true,
        "nock>deep-equal>is-date-object": true,
        "nock>deep-equal>object-keys": true,
        "string.prototype.matchall>regexp.prototype.flags": true
      }
    },
    "nock>deep-equal>is-date-object": {
      "packages": {
        "enzyme>is-regex>has-tostringtag": true
      }
    },
    "node-fetch": {
      "globals": {
        "Headers": true,
        "Request": true,
        "Response": true,
        "fetch": true
      }
    },
    "nonce-tracker": {
      "packages": {
        "await-semaphore": true,
        "browserify>assert": true,
        "ethjs-query": true
      }
    },
    "obj-multiplex": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "end-of-stream": true,
        "pump>once": true,
        "readable-stream": true
      }
    },
    "promise-to-callback": {
      "packages": {
        "promise-to-callback>is-fn": true,
        "promise-to-callback>set-immediate-shim": true
      }
    },
    "promise-to-callback>set-immediate-shim": {
      "globals": {
        "setTimeout.apply": true
      },
      "packages": {
        "browserify>timers-browserify": true
      }
    },
    "prop-types": {
      "globals": {
        "console": true
      },
      "packages": {
        "prop-types>react-is": true,
        "react>object-assign": true
      }
    },
    "prop-types>react-is": {
      "globals": {
        "console": true
      }
    },
    "pubnub": {
      "globals": {
        "ActiveXObject": true,
        "XMLHttpRequest": true,
        "addEventListener": true,
        "btoa": true,
        "clearInterval": true,
        "clearTimeout": true,
        "console": true,
        "define": true,
        "localStorage.getItem": true,
        "localStorage.setItem": true,
        "location": true,
        "navigator": true,
        "setInterval": true,
        "setTimeout": true
      }
    },
    "pubnub>cbor-sync": {
      "globals": {
        "define": true
      },
      "packages": {
        "browserify>buffer": true
      }
    },
    "pump": {
      "packages": {
        "browserify>browser-resolve": true,
        "browserify>process": true,
        "end-of-stream": true,
        "pump>once": true
      }
    },
    "pump>once": {
      "packages": {
        "pump>once>wrappy": true
      }
    },
    "qrcode-generator": {
      "globals": {
        "define": true
      }
    },
    "qrcode.react": {
      "globals": {
        "Path2D": true,
        "devicePixelRatio": true
      },
      "packages": {
        "prop-types": true,
        "qrcode.react>qr.js": true,
        "react": true
      }
    },
    "react": {
      "globals": {
        "console": true
      },
      "packages": {
        "prop-types": true,
        "react>object-assign": true
      }
    },
    "react-devtools": {
      "packages": {
        "react-devtools>react-devtools-core": true
      }
    },
    "react-devtools>react-devtools-core": {
      "globals": {
        "WebSocket": true,
        "setTimeout": true
      }
    },
    "react-dnd": {
      "globals": {
        "console.error": true
      },
      "packages": {
        "lodash": true,
        "prop-types": true,
        "react": true,
        "react-dnd>disposables": true,
        "react-dnd>dnd-core": true,
        "react-dnd>hoist-non-react-statics": true,
        "react-dnd>invariant": true,
        "react-dnd>shallowequal": true
      }
    },
    "react-dnd-html5-backend": {
      "globals": {
        "Image": true,
        "addEventListener": true,
        "clearTimeout": true,
        "console.warn": true,
        "devicePixelRatio": true,
        "document": true,
        "navigator.userAgent": true,
        "removeEventListener": true,
        "safari": true,
        "setTimeout": true
      }
    },
    "react-dnd>dnd-core": {
      "packages": {
        "lodash": true,
        "react-dnd>dnd-core>asap": true,
        "react-dnd>invariant": true,
        "redux": true
      }
    },
    "react-dnd>dnd-core>asap": {
      "globals": {
        "clearInterval": true,
        "clearTimeout": true,
        "document.createTextNode": true,
        "setInterval": true,
        "setTimeout": true
      }
    },
    "react-dom": {
      "globals": {
        "HTMLIFrameElement": true,
        "MSApp": true,
        "__REACT_DEVTOOLS_GLOBAL_HOOK__": true,
        "addEventListener": true,
        "clearTimeout": true,
        "clipboardData": true,
        "console": true,
        "dispatchEvent": true,
        "document": true,
        "event": "write",
        "jest": true,
        "location.protocol": true,
        "navigator.userAgent.indexOf": true,
        "performance": true,
        "removeEventListener": true,
        "self": true,
        "setTimeout": true,
        "top": true,
        "trustedTypes": true
      },
      "packages": {
        "prop-types": true,
        "react": true,
        "react-dom>scheduler": true,
        "react>object-assign": true
      }
    },
    "react-dom>scheduler": {
      "globals": {
        "MessageChannel": true,
        "cancelAnimationFrame": true,
        "clearTimeout": true,
        "console": true,
        "navigator": true,
        "performance": true,
        "requestAnimationFrame": true,
        "setTimeout": true
      }
    },
    "react-idle-timer": {
      "globals": {
        "clearTimeout": true,
        "document": true,
        "setTimeout": true
      },
      "packages": {
        "prop-types": true,
        "react": true
      }
    },
    "react-inspector": {
      "globals": {
        "Node.CDATA_SECTION_NODE": true,
        "Node.COMMENT_NODE": true,
        "Node.DOCUMENT_FRAGMENT_NODE": true,
        "Node.DOCUMENT_NODE": true,
        "Node.DOCUMENT_TYPE_NODE": true,
        "Node.ELEMENT_NODE": true,
        "Node.PROCESSING_INSTRUCTION_NODE": true,
        "Node.TEXT_NODE": true
      },
      "packages": {
        "ethjs-query>babel-runtime": true,
        "prop-types": true,
        "react": true,
        "react-inspector>is-dom": true
      }
    },
    "react-inspector>is-dom": {
      "globals": {
        "Node": true
      },
      "packages": {
        "proxyquire>fill-keys>is-object": true,
        "react-inspector>is-dom>is-window": true
      }
    },
    "react-popper": {
      "globals": {
        "document": true
      },
      "packages": {
        "@popperjs/core": true,
        "react": true,
        "react-popper>react-fast-compare": true,
        "react-popper>warning": true
      }
    },
    "react-popper>react-fast-compare": {
      "globals": {
        "Element": true,
        "console.warn": true
      }
    },
    "react-popper>warning": {
      "globals": {
        "console": true
      }
    },
    "react-redux": {
      "globals": {
        "console": true,
        "document": true
      },
      "packages": {
        "@babel/runtime": true,
        "prop-types": true,
        "prop-types>react-is": true,
        "react": true,
        "react-dom": true,
        "react-redux>hoist-non-react-statics": true,
        "redux": true
      }
    },
    "react-redux>hoist-non-react-statics": {
      "packages": {
        "prop-types>react-is": true
      }
    },
    "react-responsive-carousel": {
      "globals": {
        "HTMLElement": true,
        "clearTimeout": true,
        "console.warn": true,
        "document": true,
        "getComputedStyle": true,
        "setTimeout": true
      },
      "packages": {
        "classnames": true,
        "react": true,
        "react-dom": true,
        "react-responsive-carousel>react-easy-swipe": true
      }
    },
    "react-responsive-carousel>react-easy-swipe": {
      "globals": {
        "addEventListener": true,
        "define": true,
        "document.addEventListener": true,
        "document.removeEventListener": true
      },
      "packages": {
        "prop-types": true,
        "react": true
      }
    },
    "react-router-dom": {
      "packages": {
        "prop-types": true,
        "react": true,
        "react-router-dom>history": true,
        "react-router-dom>react-router": true,
        "react-router-dom>tiny-invariant": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "react-router-dom>history": {
      "globals": {
        "addEventListener": true,
        "confirm": true,
        "document": true,
        "history": true,
        "location": true,
        "navigator.userAgent": true,
        "removeEventListener": true
      },
      "packages": {
        "react-router-dom>history>resolve-pathname": true,
        "react-router-dom>history>value-equal": true,
        "react-router-dom>tiny-invariant": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "react-router-dom>react-router": {
      "packages": {
        "prop-types": true,
        "prop-types>react-is": true,
        "react": true,
        "react-redux>hoist-non-react-statics": true,
        "react-router-dom>react-router>history": true,
        "react-router-dom>react-router>mini-create-react-context": true,
        "react-router-dom>tiny-invariant": true,
        "react-router-dom>tiny-warning": true,
        "sinon>nise>path-to-regexp": true
      }
    },
    "react-router-dom>react-router>history": {
      "globals": {
        "addEventListener": true,
        "confirm": true,
        "document": true,
        "history": true,
        "location": true,
        "navigator.userAgent": true,
        "removeEventListener": true
      },
      "packages": {
        "react-router-dom>history>resolve-pathname": true,
        "react-router-dom>history>value-equal": true,
        "react-router-dom>tiny-invariant": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "react-router-dom>react-router>mini-create-react-context": {
      "packages": {
        "@babel/runtime": true,
        "@storybook/api>@reach/router>create-react-context>gud": true,
        "prop-types": true,
        "react": true,
        "react-router-dom>tiny-warning": true
      }
    },
    "react-router-dom>tiny-warning": {
      "globals": {
        "console": true
      }
    },
    "react-simple-file-input": {
      "globals": {
        "File": true,
        "FileReader": true,
        "console.warn": true
      },
      "packages": {
        "prop-types": true,
        "react": true
      }
    },
    "react-tippy": {
      "globals": {
        "Element": true,
        "MSStream": true,
        "MutationObserver": true,
        "addEventListener": true,
        "clearTimeout": true,
        "console.error": true,
        "console.warn": true,
        "define": true,
        "document": true,
        "getComputedStyle": true,
        "innerHeight": true,
        "innerWidth": true,
        "navigator.maxTouchPoints": true,
        "navigator.msMaxTouchPoints": true,
        "navigator.userAgent": true,
        "performance": true,
        "requestAnimationFrame": true,
        "setTimeout": true
      },
      "packages": {
        "react": true,
        "react-dom": true,
        "react-tippy>popper.js": true
      }
    },
    "react-tippy>popper.js": {
      "globals": {
        "MSInputMethodContext": true,
        "Node.DOCUMENT_POSITION_FOLLOWING": true,
        "cancelAnimationFrame": true,
        "console.warn": true,
        "define": true,
        "devicePixelRatio": true,
        "document": true,
        "getComputedStyle": true,
        "innerHeight": true,
        "innerWidth": true,
        "navigator.userAgent": true,
        "requestAnimationFrame": true,
        "setTimeout": true
      }
    },
    "react-toggle-button": {
      "globals": {
        "clearTimeout": true,
        "console.warn": true,
        "define": true,
        "performance": true,
        "setTimeout": true
      },
      "packages": {
        "react": true
      }
    },
    "react-transition-group": {
      "globals": {
        "clearTimeout": true,
        "setTimeout": true
      },
      "packages": {
        "prop-types": true,
        "react": true,
        "react-dom": true,
        "react-transition-group>chain-function": true,
        "react-transition-group>dom-helpers": true,
        "react-transition-group>warning": true
      }
    },
    "react-transition-group>dom-helpers": {
      "globals": {
        "document": true,
        "setTimeout": true
      },
      "packages": {
        "@babel/runtime": true
      }
    },
    "react-transition-group>warning": {
      "globals": {
        "console": true
      }
    },
    "readable-stream": {
      "packages": {
        "@storybook/api>util-deprecate": true,
        "browserify>browser-resolve": true,
        "browserify>events": true,
        "browserify>process": true,
        "browserify>timers-browserify": true,
        "pumpify>inherits": true,
        "readable-stream>core-util-is": true,
        "readable-stream>isarray": true,
        "readable-stream>process-nextick-args": true,
        "readable-stream>safe-buffer": true,
        "readable-stream>string_decoder": true
      }
    },
    "readable-stream>core-util-is": {
      "packages": {
        "browserify>insert-module-globals>is-buffer": true
      }
    },
    "readable-stream>process-nextick-args": {
      "packages": {
        "browserify>process": true
      }
    },
    "readable-stream>safe-buffer": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "readable-stream>string_decoder": {
      "packages": {
        "readable-stream>safe-buffer": true
      }
    },
    "redux": {
      "globals": {
        "console": true
      },
      "packages": {
        "@babel/runtime": true
      }
    },
    "safe-event-emitter": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "browserify>util": true,
        "safe-event-emitter>events": true
      }
    },
    "safe-event-emitter>events": {
      "globals": {
        "console": true
      }
    },
    "semver": {
      "globals": {
        "console.error": true
      },
      "packages": {
        "browserify>process": true,
        "semver>lru-cache": true
      }
    },
    "semver>lru-cache": {
      "packages": {
        "semver>lru-cache>yallist": true
      }
    },
    "sinon>nise>path-to-regexp": {
      "packages": {
        "sinon>nise>path-to-regexp>isarray": true
      }
    },
    "source-map-explorer>btoa": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "string.prototype.matchall>call-bind": {
      "packages": {
        "mocha>object.assign>function-bind": true,
        "string.prototype.matchall>get-intrinsic": true
      }
    },
    "string.prototype.matchall>get-intrinsic": {
      "globals": {
        "AggregateError": true,
        "FinalizationRegistry": true,
        "WeakRef": true
      },
      "packages": {
        "enzyme>has": true,
        "mocha>object.assign>function-bind": true,
        "string.prototype.matchall>has-symbols": true
      }
    },
    "string.prototype.matchall>regexp.prototype.flags": {
      "packages": {
        "enzyme>function.prototype.name>functions-have-names": true,
        "globalthis>define-properties": true,
        "string.prototype.matchall>call-bind": true
      }
    },
    "terser>source-map-support>buffer-from": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "textarea-caret": {
      "globals": {
        "document.body.appendChild": true,
        "document.body.removeChild": true,
        "document.createElement": true,
        "document.querySelector": true,
        "getCaretCoordinates": "write",
        "getComputedStyle": true,
        "mozInnerScreenX": true
      }
    },
    "uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "vinyl>clone": {
      "packages": {
        "browserify>buffer": true
      }
    },
    "vinyl>cloneable-readable>process-nextick-args": {
      "packages": {
        "browserify>process": true
      }
    },
    "web3": {
      "globals": {
        "Web3": "write",
        "XMLHttpRequest": true,
        "clearTimeout": true,
        "console.error": true,
        "setTimeout": true
      },
      "packages": {
        "browserify>buffer": true,
        "web3>bignumber.js": true,
        "web3>crypto-js": true,
        "web3>utf8": true,
        "web3>xhr2-cookies": true
      }
    },
    "web3-stream-provider": {
      "globals": {
        "setTimeout": true
      },
      "packages": {
        "browserify>util": true,
        "readable-stream": true,
        "web3-stream-provider>uuid": true
      }
    },
    "web3-stream-provider>uuid": {
      "globals": {
        "crypto": true,
        "msCrypto": true
      }
    },
    "web3>bignumber.js": {
      "globals": {
        "define": true
      },
      "packages": {
        "browserify>crypto-browserify": true
      }
    },
    "web3>crypto-js": {
      "globals": {
        "define": true
      }
    },
    "web3>utf8": {
      "globals": {
        "define": true
      }
    },
    "web3>xhr2-cookies": {
      "globals": {
        "console.warn": true
      },
      "packages": {
        "browserify>buffer": true,
        "browserify>https-browserify": true,
        "browserify>os-browserify": true,
        "browserify>process": true,
        "browserify>stream-http": true,
        "browserify>url": true,
        "web3>xhr2-cookies>cookiejar": true
      }
    },
    "web3>xhr2-cookies>cookiejar": {
      "globals": {
        "console.warn": true
      }
    },
    "webextension-polyfill": {
      "globals": {
        "browser": true,
        "chrome": true,
        "console.error": true,
        "console.warn": true,
        "define": true
      }
    }
  }
}