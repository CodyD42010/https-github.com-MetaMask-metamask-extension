{"version":3,"file":"ens.js","sourceRoot":"","sources":["../../src/providers/ens.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,sCAA8D;AAO9D,oCAAoC;AAOpC,MAAM,EAAE,GAAG,KAAK,CAAC;AACjB,MAAM,KAAK,GAAG,6BAA6B,CAAC;AAE5C,MAAM,GAAG,GAAG,IAAA,2BAAkB,EAAC,sBAAa,EAAE,KAAK,CAAC,CAAC;AAErD,MAAa,eAAe;IAK1B,YAAY,EACV,SAAS,EACT,aAAa,GAId;QAVD,6CAA0B;QAE1B,iDAAsC;QASpC,uBAAA,IAAI,8BAAc,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAA,CAAC;QAC5C,uBAAA,IAAI,kCAAkB,aAAa,MAAA,CAAC;IACtC,CAAC;IAED,WAAW;QACT,OAAO;YACL,SAAS,EAAE,EAAE,CAAC,gBAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YAChD,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;SAC9B,CAAC;IACJ,CAAC;IAEK,gBAAgB,CACpB,OAA4B;;YAE5B,IAAI,CAAC,uBAAA,IAAI,kCAAW,MAAf,IAAI,CAAa,EAAE;gBACtB,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAEpC,OAAO;oBACL,OAAO,EAAE;wBACP,CAAC,EAAE,CAAC,EAAE;4BACJ,aAAa,EAAE,EAAE;yBAClB;qBACF;iBACF,CAAC;aACH;YAED,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;YAE9C,GAAG,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAE7C,IAAI;gBACF,MAAM,YAAY,GAAG,MAAM,uBAAA,IAAI,sCAAe,MAAnB,IAAI,EAAgB,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC/D,MAAM,aAAa,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEzD,GAAG,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;gBAEzC,OAAO;oBACL,OAAO,EAAE;wBACP,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,EAAE;qBACxB;iBACF,CAAC;aACH;YAAC,OAAO,KAAK,EAAE;gBACd,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBAC7B,MAAM,KAAK,CAAC;aACb;QACH,CAAC;KAAA;CACF;AA1DD,0CA0DC","sourcesContent":["import { projectLogger, createModuleLogger } from '../logger';\nimport type {\n  NameProvider,\n  NameProviderMetadata,\n  NameProviderRequest,\n  NameProviderResult,\n} from '../types';\nimport { NameType } from '../types';\n\nexport type ReverseLookupCallback = (\n  address: string,\n  chainId: string,\n) => Promise<string>;\n\nconst ID = 'ens';\nconst LABEL = 'Ethereum Name Service (ENS)';\n\nconst log = createModuleLogger(projectLogger, 'ens');\n\nexport class ENSNameProvider implements NameProvider {\n  #isEnabled: () => boolean;\n\n  #reverseLookup: ReverseLookupCallback;\n\n  constructor({\n    isEnabled,\n    reverseLookup,\n  }: {\n    isEnabled?: () => boolean;\n    reverseLookup: ReverseLookupCallback;\n  }) {\n    this.#isEnabled = isEnabled || (() => true);\n    this.#reverseLookup = reverseLookup;\n  }\n\n  getMetadata(): NameProviderMetadata {\n    return {\n      sourceIds: { [NameType.ETHEREUM_ADDRESS]: [ID] },\n      sourceLabels: { [ID]: LABEL },\n    };\n  }\n\n  async getProposedNames(\n    request: NameProviderRequest,\n  ): Promise<NameProviderResult> {\n    if (!this.#isEnabled()) {\n      log('Skipping request as disabled');\n\n      return {\n        results: {\n          [ID]: {\n            proposedNames: [],\n          },\n        },\n      };\n    }\n\n    const { value, variation: chainId } = request;\n\n    log('Invoking callback', { value, chainId });\n\n    try {\n      const proposedName = await this.#reverseLookup(value, chainId);\n      const proposedNames = proposedName ? [proposedName] : [];\n\n      log('New proposed names', proposedNames);\n\n      return {\n        results: {\n          [ID]: { proposedNames },\n        },\n      };\n    } catch (error) {\n      log('Request failed', error);\n      throw error;\n    }\n  }\n}\n"]}