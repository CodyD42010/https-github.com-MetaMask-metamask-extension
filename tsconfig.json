{
  "compilerOptions": {
    "allowJs": true,
    // ensures single-file compilers, like babel, webpack+swc, etc work
    "isolatedModules": true,
    // makes typechecking faster (also see `tsBuildInfoFile` setting)
    "incremental": true,
    "jsx": "react",
    // todo: make two tsconfigs, one for node (development and test) and one for
    // browser (app, ui, shared?) and ensure the code is split up into the right
    // directories that make sense for their environment.
    // I think this would eliminate a lot of eslint overrides complexity
    // In the meantime, we need DOM libs and should target the ES version in
    // "@tsconfig/node20/tsconfig.json" (`libs` here overwrites extends's `libs`)
    "lib": ["DOM", "es2023"],
    // we only use tsc for type checking (yarn lint:tsc)
    "noEmit": true,
    // matches webpack's `symlinks: false`
    "preserveSymlinks": true,
    "resolveJsonModule": true,
    // sets output file location for the `incremental` setting
    "tsBuildInfoFile": ".cache/typescript/tsconfig.tsbuildinfo",
    "useUnknownInCatchVariables": true
  },
  "exclude": [
    "**/*.test.ts", // its pretty important to
    "**/*.test.tsx", // use accurate types in
    "**/*.stories.tsx", // tests and we don't
    "**/*.stories.ts" // even come close.
  ],
  // this should match our node version in .nvmrc
  "extends": "@tsconfig/node20/tsconfig.json",
  "include": ["app", "development", "shared", "types", "ui", "offscreen"]
}
