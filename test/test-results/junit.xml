<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="2697" failures="0" errors="0" time="79.745">
  <testsuite name="Message Manager" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="3.574" tests="7">
    <testcase classname="Message Manager #getMsgList when new should return empty array" name="Message Manager #getMsgList when new should return empty array" time="0.002">
    </testcase>
    <testcase classname="Message Manager #addMsg adds a Msg returned in getMsgList" name="Message Manager #addMsg adds a Msg returned in getMsgList" time="0.001">
    </testcase>
    <testcase classname="Message Manager #setMsgStatusApproved sets the Msg status to approved" name="Message Manager #setMsgStatusApproved sets the Msg status to approved" time="0.001">
    </testcase>
    <testcase classname="Message Manager #rejectMsg sets the Msg status to rejected" name="Message Manager #rejectMsg sets the Msg status to rejected" time="0.001">
    </testcase>
    <testcase classname="Message Manager #_updateMsg replaces the Msg with the same id" name="Message Manager #_updateMsg replaces the Msg with the same id" time="0">
    </testcase>
    <testcase classname="Message Manager #getUnapprovedMsgs returns unapproved Msgs in a hash" name="Message Manager #getUnapprovedMsgs returns unapproved Msgs in a hash" time="0.004">
    </testcase>
    <testcase classname="Message Manager #getMsg returns a Msg with the requested id" name="Message Manager #getMsg returns a Msg with the requested id" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TransactionList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="3.604" tests="1">
    <testcase classname="TransactionList renders TransactionList component and shows You have no transactions text" name="TransactionList renders TransactionList component and shows You have no transactions text" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="TransactionListItem" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="3.709" tests="3">
    <testcase classname="TransactionListItem when account has insufficient balance to cover gas should indicate account has insufficient funds to cover gas price for cancellation of pending transaction" name="TransactionListItem when account has insufficient balance to cover gas should indicate account has insufficient funds to cover gas price for cancellation of pending transaction" time="0.053">
    </testcase>
    <testcase classname="TransactionListItem when account has insufficient balance to cover gas should not disable &quot;cancel&quot; button when user has sufficient funds" name="TransactionListItem when account has insufficient balance to cover gas should not disable &quot;cancel&quot; button when user has sufficient funds" time="0.009">
    </testcase>
    <testcase classname="TransactionListItem when account has insufficient balance to cover gas should open the edit gas popover when cancel is clicked" name="TransactionListItem when account has insufficient balance to cover gas should open the edit gas popover when cancel is clicked" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="Actions" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="4.242" tests="67">
    <testcase classname="Actions #tryUnlockMetamask calls submitPassword" name="Actions #tryUnlockMetamask calls submitPassword" time="0.014">
    </testcase>
    <testcase classname="Actions #tryUnlockMetamask errors on submitPassword will fail" name="Actions #tryUnlockMetamask errors on submitPassword will fail" time="0.026">
    </testcase>
    <testcase classname="Actions #createNewVaultAndRestore calls createNewVaultAndRestore" name="Actions #createNewVaultAndRestore calls createNewVaultAndRestore" time="0.017">
    </testcase>
    <testcase classname="Actions #createNewVaultAndRestore calls the expected actions" name="Actions #createNewVaultAndRestore calls the expected actions" time="0.008">
    </testcase>
    <testcase classname="Actions #createNewVaultAndRestore errors when callback in createNewVaultAndRestore throws" name="Actions #createNewVaultAndRestore errors when callback in createNewVaultAndRestore throws" time="0.011">
    </testcase>
    <testcase classname="Actions #requestRevealSeedWords calls verifyPassword in background" name="Actions #requestRevealSeedWords calls verifyPassword in background" time="0.006">
    </testcase>
    <testcase classname="Actions #requestRevealSeedWords displays warning error message then callback in background errors" name="Actions #requestRevealSeedWords displays warning error message then callback in background errors" time="0.011">
    </testcase>
    <testcase classname="Actions #removeAccount calls removeAccount in background and expect actions to show account" name="Actions #removeAccount calls removeAccount in background and expect actions to show account" time="0.007">
    </testcase>
    <testcase classname="Actions #removeAccount displays warning error message when removeAccount callback errors" name="Actions #removeAccount displays warning error message when removeAccount callback errors" time="0.02">
    </testcase>
    <testcase classname="Actions #resetAccount resets account" name="Actions #resetAccount resets account" time="0.017">
    </testcase>
    <testcase classname="Actions #resetAccount throws if resetAccount throws" name="Actions #resetAccount throws if resetAccount throws" time="0.009">
    </testcase>
    <testcase classname="Actions #importNewAccount calls importAccountWithStrategies in background" name="Actions #importNewAccount calls importAccountWithStrategies in background" time="0.011">
    </testcase>
    <testcase classname="Actions #importNewAccount displays warning error message when importAccount in background callback errors" name="Actions #importNewAccount displays warning error message when importAccount in background callback errors" time="0.007">
    </testcase>
    <testcase classname="Actions #addNewAccount adds a new account" name="Actions #addNewAccount adds a new account" time="0.007">
    </testcase>
    <testcase classname="Actions #addNewAccount displays warning error message when addNewAccount in background callback errors" name="Actions #addNewAccount displays warning error message when addNewAccount in background callback errors" time="0.01">
    </testcase>
    <testcase classname="Actions #checkHardwareStatus calls checkHardwareStatus in background" name="Actions #checkHardwareStatus calls checkHardwareStatus in background" time="0.006">
    </testcase>
    <testcase classname="Actions #checkHardwareStatus shows loading indicator and displays error" name="Actions #checkHardwareStatus shows loading indicator and displays error" time="0.007">
    </testcase>
    <testcase classname="Actions #forgetDevice calls forgetDevice in background" name="Actions #forgetDevice calls forgetDevice in background" time="0.006">
    </testcase>
    <testcase classname="Actions #forgetDevice shows loading indicator and displays error" name="Actions #forgetDevice shows loading indicator and displays error" time="0.011">
    </testcase>
    <testcase classname="Actions #connectHardware calls connectHardware in background" name="Actions #connectHardware calls connectHardware in background" time="0.007">
    </testcase>
    <testcase classname="Actions #connectHardware shows loading indicator and displays error" name="Actions #connectHardware shows loading indicator and displays error" time="0.006">
    </testcase>
    <testcase classname="Actions #unlockHardwareWalletAccount calls unlockHardwareWalletAccount in background" name="Actions #unlockHardwareWalletAccount calls unlockHardwareWalletAccount in background" time="0.005">
    </testcase>
    <testcase classname="Actions #unlockHardwareWalletAccount shows loading indicator and displays error" name="Actions #unlockHardwareWalletAccount shows loading indicator and displays error" time="0.013">
    </testcase>
    <testcase classname="Actions #setCurrentCurrency calls setCurrentCurrency" name="Actions #setCurrentCurrency calls setCurrentCurrency" time="0.014">
    </testcase>
    <testcase classname="Actions #setCurrentCurrency throws if setCurrentCurrency throws" name="Actions #setCurrentCurrency throws if setCurrentCurrency throws" time="0.007">
    </testcase>
    <testcase classname="Actions #signMsg calls signMsg in background" name="Actions #signMsg calls signMsg in background" time="0.014">
    </testcase>
    <testcase classname="Actions #signMsg errors when signMessage in background throws" name="Actions #signMsg errors when signMessage in background throws" time="0.046">
    </testcase>
    <testcase classname="Actions #signPersonalMsg calls signPersonalMessage" name="Actions #signPersonalMsg calls signPersonalMessage" time="0.008">
    </testcase>
    <testcase classname="Actions #signPersonalMsg throws if signPersonalMessage throws" name="Actions #signPersonalMsg throws if signPersonalMessage throws" time="0.008">
    </testcase>
    <testcase classname="Actions #signTypedMsg calls signTypedMsg in background with no error" name="Actions #signTypedMsg calls signTypedMsg in background with no error" time="0.006">
    </testcase>
    <testcase classname="Actions #signTypedMsg returns expected actions with error" name="Actions #signTypedMsg returns expected actions with error" time="0.007">
    </testcase>
    <testcase classname="Actions #updateTransaction updates transaction" name="Actions #updateTransaction updates transaction" time="0.005">
    </testcase>
    <testcase classname="Actions #updateTransaction rejects with error message" name="Actions #updateTransaction rejects with error message" time="0.006">
    </testcase>
    <testcase classname="Actions #lockMetamask calls setLocked" name="Actions #lockMetamask calls setLocked" time="0.006">
    </testcase>
    <testcase classname="Actions #lockMetamask returns display warning error with value when setLocked in background callback errors" name="Actions #lockMetamask returns display warning error with value when setLocked in background callback errors" time="0.005">
    </testcase>
    <testcase classname="Actions #setSelectedAddress calls setSelectedAddress in background" name="Actions #setSelectedAddress calls setSelectedAddress in background" time="0.009">
    </testcase>
    <testcase classname="Actions #setSelectedAddress errors when setSelectedAddress throws" name="Actions #setSelectedAddress errors when setSelectedAddress throws" time="0.005">
    </testcase>
    <testcase classname="Actions #showAccountDetail #showAccountDetail" name="Actions #showAccountDetail #showAccountDetail" time="0.008">
    </testcase>
    <testcase classname="Actions #showAccountDetail displays warning if setSelectedAddress throws" name="Actions #showAccountDetail displays warning if setSelectedAddress throws" time="0.018">
    </testcase>
    <testcase classname="Actions #addToken calls addToken in background" name="Actions #addToken calls addToken in background" time="0.007">
    </testcase>
    <testcase classname="Actions #addToken expected actions" name="Actions #addToken expected actions" time="0.007">
    </testcase>
    <testcase classname="Actions #ignoreTokens calls ignoreTokens in background" name="Actions #ignoreTokens calls ignoreTokens in background" time="0.011">
    </testcase>
    <testcase classname="Actions #ignoreTokens should display warning when ignoreTokens in background fails" name="Actions #ignoreTokens should display warning when ignoreTokens in background fails" time="0.009">
    </testcase>
    <testcase classname="Actions #setProviderType calls setProviderType" name="Actions #setProviderType calls setProviderType" time="0.006">
    </testcase>
    <testcase classname="Actions #setProviderType displays warning when setProviderType throws" name="Actions #setProviderType displays warning when setProviderType throws" time="0.011">
    </testcase>
    <testcase classname="Actions #setRpcTarget calls setRpcTarget" name="Actions #setRpcTarget calls setRpcTarget" time="0.007">
    </testcase>
    <testcase classname="Actions #setRpcTarget displays warning when setRpcTarget throws" name="Actions #setRpcTarget displays warning when setRpcTarget throws" time="0.006">
    </testcase>
    <testcase classname="Actions #addToAddressBook calls setAddressBook" name="Actions #addToAddressBook calls setAddressBook" time="0.007">
    </testcase>
    <testcase classname="Actions #exportAccount returns expected actions for successful action" name="Actions #exportAccount returns expected actions for successful action" time="0.015">
    </testcase>
    <testcase classname="Actions #exportAccount returns action errors when first func callback errors" name="Actions #exportAccount returns action errors when first func callback errors" time="0.006">
    </testcase>
    <testcase classname="Actions #exportAccount returns action errors when second func callback errors" name="Actions #exportAccount returns action errors when second func callback errors" time="0.007">
    </testcase>
    <testcase classname="Actions #setAccountLabel calls setAccountLabel" name="Actions #setAccountLabel calls setAccountLabel" time="0.007">
    </testcase>
    <testcase classname="Actions #setAccountLabel returns action errors when func callback errors" name="Actions #setAccountLabel returns action errors when func callback errors" time="0.018">
    </testcase>
    <testcase classname="Actions #setFeatureFlag calls setFeatureFlag in the background" name="Actions #setFeatureFlag calls setFeatureFlag in the background" time="0.006">
    </testcase>
    <testcase classname="Actions #setFeatureFlag errors when setFeatureFlag in background throws" name="Actions #setFeatureFlag errors when setFeatureFlag in background throws" time="0.008">
    </testcase>
    <testcase classname="Actions #setCompletedOnboarding completes onboarding" name="Actions #setCompletedOnboarding completes onboarding" time="0.007">
    </testcase>
    <testcase classname="Actions #setCompletedOnboarding errors when setCompletedOnboarding in background throws" name="Actions #setCompletedOnboarding errors when setCompletedOnboarding in background throws" time="0.011">
    </testcase>
    <testcase classname="Actions #setUseBlockie calls setUseBlockie in background" name="Actions #setUseBlockie calls setUseBlockie in background" time="0.006">
    </testcase>
    <testcase classname="Actions #setUseBlockie errors when setUseBlockie in background throws" name="Actions #setUseBlockie errors when setUseBlockie in background throws" time="0.006">
    </testcase>
    <testcase classname="Actions #updateCurrentLocale calls expected actions" name="Actions #updateCurrentLocale calls expected actions" time="0.008">
    </testcase>
    <testcase classname="Actions #updateCurrentLocale errors when setCurrentLocale throws" name="Actions #updateCurrentLocale errors when setCurrentLocale throws" time="0.009">
    </testcase>
    <testcase classname="Actions #markPasswordForgotten calls markPasswordForgotten" name="Actions #markPasswordForgotten calls markPasswordForgotten" time="0.007">
    </testcase>
    <testcase classname="Actions #markPasswordForgotten errors when markPasswordForgotten throws" name="Actions #markPasswordForgotten errors when markPasswordForgotten throws" time="0.008">
    </testcase>
    <testcase classname="Actions #unMarkPasswordForgotten calls unMarkPasswordForgotten" name="Actions #unMarkPasswordForgotten calls unMarkPasswordForgotten" time="0.006">
    </testcase>
    <testcase classname="Actions #displayWarning sets appState.warning to provided value" name="Actions #displayWarning sets appState.warning to provided value" time="0.008">
    </testcase>
    <testcase classname="Actions #cancelTx creates COMPLETED_TX with the cancelled transaction ID" name="Actions #cancelTx creates COMPLETED_TX with the cancelled transaction ID" time="0.009">
    </testcase>
    <testcase classname="Actions #cancelMsgs creates COMPLETED_TX with the cancelled messages IDs" name="Actions #cancelMsgs creates COMPLETED_TX with the cancelled messages IDs" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="MetaMetricsOptIn" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:46" time="1.202" tests="1">
    <testcase classname="MetaMetricsOptIn opt out of MetaMetrics" name="MetaMetricsOptIn opt out of MetaMetrics" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="UpdateNicknamePopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:46" time="1.29" tests="1">
    <testcase classname="UpdateNicknamePopover renders UpdateNicknamePopover component and shows This is a memo text" name="UpdateNicknamePopover renders UpdateNicknamePopover component and shows This is a memo text" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="SeedPhraseVerifier" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="5.696" tests="7">
    <testcase classname="SeedPhraseVerifier verifyAccounts should be able to verify created account with seed words" name="SeedPhraseVerifier verifyAccounts should be able to verify created account with seed words" time="0.773">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should be able to verify created account (upper case) with seed words" name="SeedPhraseVerifier verifyAccounts should be able to verify created account (upper case) with seed words" time="0.544">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should be able to verify created account (lower case) with seed words" name="SeedPhraseVerifier verifyAccounts should be able to verify created account (lower case) with seed words" time="0.545">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should return error with good but different seed words" name="SeedPhraseVerifier verifyAccounts should return error with good but different seed words" time="0.559">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should return error with undefined existing accounts" name="SeedPhraseVerifier verifyAccounts should return error with undefined existing accounts" time="0.327">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should return error with empty accounts array" name="SeedPhraseVerifier verifyAccounts should return error with empty accounts array" time="0.336">
    </testcase>
    <testcase classname="SeedPhraseVerifier verifyAccounts should be able to verify more than one created account with seed words" name="SeedPhraseVerifier verifyAccounts should be able to verify more than one created account with seed words" time="0.828">
    </testcase>
  </testsuite>
  <testsuite name="PermissionController specifications" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:46" time="1.157" tests="17">
    <testcase classname="PermissionController specifications caveat specifications getCaveatSpecifications returns the expected specifications object" name="PermissionController specifications caveat specifications getCaveatSpecifications returns the expected specifications object" time="0.002">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns the first array member included in the caveat value" name="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns the first array member included in the caveat value" time="0.001">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns an empty array if no array members are included in the caveat value" name="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns an empty array if no array members are included in the caveat value" time="0">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns an empty array if the method result is an empty array" name="PermissionController specifications caveat specifications restrictReturnedAccounts decorator returns an empty array if the method result is an empty array" time="0.001">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects invalid array values" name="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects invalid array values" time="0.004">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects falsy or non-string addresses" name="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects falsy or non-string addresses" time="0.002">
    </testcase>
    <testcase classname="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects addresses that have no corresponding identity" name="PermissionController specifications caveat specifications restrictReturnedAccounts validator rejects addresses that have no corresponding identity" time="0">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications getPermissionSpecifications returns the expected specifications object" name="PermissionController specifications permission specifications getPermissionSpecifications returns the expected specifications object" time="0">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts factory constructs a valid eth_accounts permission" name="PermissionController specifications permission specifications eth_accounts factory constructs a valid eth_accounts permission" time="0.003">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts factory throws an error if no approvedAccounts are specified" name="PermissionController specifications permission specifications eth_accounts factory throws an error if no approvedAccounts are specified" time="0.002">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts factory throws an error if any caveats are specified directly" name="PermissionController specifications permission specifications eth_accounts factory throws an error if any caveats are specified directly" time="0">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts methodImplementation returns the keyring accounts in lastSelected order" name="PermissionController specifications permission specifications eth_accounts methodImplementation returns the keyring accounts in lastSelected order" time="0.007">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts methodImplementation throws if a keyring account is missing an address (case 1)" name="PermissionController specifications permission specifications eth_accounts methodImplementation throws if a keyring account is missing an address (case 1)" time="0.001">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts methodImplementation throws if a keyring account is missing an address (case 2)" name="PermissionController specifications permission specifications eth_accounts methodImplementation throws if a keyring account is missing an address (case 2)" time="0">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts validator accepts valid permissions" name="PermissionController specifications permission specifications eth_accounts validator accepts valid permissions" time="0">
    </testcase>
    <testcase classname="PermissionController specifications permission specifications eth_accounts validator rejects invalid caveats" name="PermissionController specifications permission specifications eth_accounts validator rejects invalid caveats" time="0.001">
    </testcase>
    <testcase classname="PermissionController specifications unrestricted methods defines the unrestricted methods" name="PermissionController specifications unrestricted methods defines the unrestricted methods" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Transaction.utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="5.723" tests="18">
    <testcase classname="Transaction.utils parseStandardTokenTransactionData should return token data" name="Transaction.utils parseStandardTokenTransactionData should return token data" time="0.01">
    </testcase>
    <testcase classname="Transaction.utils parseStandardTokenTransactionData should not throw errors when called without arguments" name="Transaction.utils parseStandardTokenTransactionData should not throw errors when called without arguments" time="0.001">
    </testcase>
    <testcase classname="Transaction.utils isEIP1559Transaction should return true if both maxFeePerGas and maxPriorityFeePerGas are hex strings" name="Transaction.utils isEIP1559Transaction should return true if both maxFeePerGas and maxPriorityFeePerGas are hex strings" time="0">
    </testcase>
    <testcase classname="Transaction.utils isEIP1559Transaction should return false if either maxFeePerGas and maxPriorityFeePerGas are non-hex strings" name="Transaction.utils isEIP1559Transaction should return false if either maxFeePerGas and maxPriorityFeePerGas are non-hex strings" time="0">
    </testcase>
    <testcase classname="Transaction.utils isEIP1559Transaction should return false if either maxFeePerGas or maxPriorityFeePerGas are not supplied" name="Transaction.utils isEIP1559Transaction should return false if either maxFeePerGas or maxPriorityFeePerGas are not supplied" time="0.001">
    </testcase>
    <testcase classname="Transaction.utils isLegacyTransaction should return true if no gas related fields are supplied" name="Transaction.utils isLegacyTransaction should return true if no gas related fields are supplied" time="0">
    </testcase>
    <testcase classname="Transaction.utils isLegacyTransaction should return true if gasPrice is solely provided" name="Transaction.utils isLegacyTransaction should return true if gasPrice is solely provided" time="0">
    </testcase>
    <testcase classname="Transaction.utils isLegacyTransaction should return false if gasPrice is not a hex string" name="Transaction.utils isLegacyTransaction should return false if gasPrice is not a hex string" time="0">
    </testcase>
    <testcase classname="Transaction.utils isLegacyTransaction should return false if either maxFeePerGas or maxPriorityFeePerGas are supplied" name="Transaction.utils isLegacyTransaction should return false if either maxFeePerGas or maxPriorityFeePerGas are supplied" time="0">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a simple send type when to is truthy and is not a contract address" name="Transaction.utils determineTransactionType should return a simple send type when to is truthy and is not a contract address" time="0.386">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a token transfer type when the recipient is a contract and data is for the respective method call" name="Transaction.utils determineTransactionType should return a token transfer type when the recipient is a contract and data is for the respective method call" time="0.385">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should NOT return a token transfer type when the recipient is not a contract but the data matches the respective method call" name="Transaction.utils determineTransactionType should NOT return a token transfer type when the recipient is not a contract but the data matches the respective method call" time="0.417">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a token approve type when when the recipient is a contract and data is for the respective method call" name="Transaction.utils determineTransactionType should return a token approve type when when the recipient is a contract and data is for the respective method call" time="0.471">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a contract deployment type when to is falsy and there is data" name="Transaction.utils determineTransactionType should return a contract deployment type when to is falsy and there is data" time="0.001">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a simple send type with a 0x getCodeResponse when there is data and but the to address is not a contract address" name="Transaction.utils determineTransactionType should return a simple send type with a 0x getCodeResponse when there is data and but the to address is not a contract address" time="0.201">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a simple send type with a null getCodeResponse when to is truthy and there is data and but getCode returns an error" name="Transaction.utils determineTransactionType should return a simple send type with a null getCodeResponse when to is truthy and there is data and but getCode returns an error" time="0.415">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a contract interaction type with the correct getCodeResponse when to is truthy and there is data and it is not a token transaction" name="Transaction.utils determineTransactionType should return a contract interaction type with the correct getCodeResponse when to is truthy and there is data and it is not a token transaction" time="0.373">
    </testcase>
    <testcase classname="Transaction.utils determineTransactionType should return a contract interaction type with the correct getCodeResponse when to is a contract address and data is falsy" name="Transaction.utils determineTransactionType should return a contract interaction type with the correct getCodeResponse when to is a contract address and data is falsy" time="0.403">
    </testcase>
  </testsuite>
  <testsuite name="createInfuraClient" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:46" time="2.354" tests="254">
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_accounts attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_accounts attempts to pass the request off to Infura" time="0.016">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not hit Infura more than once for identical requests" time="0.011">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `null`" time="0.01">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_blockNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not hit Infura more than once for identical requests" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.016">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `null`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.013">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.011">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.012">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not hit Infura more than once for identical requests" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `null`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `undefined`" time="0.011">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_call given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_chainId does not hit Infura, instead returning the chain id that maps to the Infura network, as a hex string" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_chainId does not hit Infura, instead returning the chain id that maps to the Infura network, as a hex string" time="0">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_coinbase attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_coinbase attempts to pass the request off to Infura" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `undefined`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_estimateGas does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_feeHistory attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_feeHistory attempts to pass the request off to Infura" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `null`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.012">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.01">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `null`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `undefined`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBalance given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not hit Infura more than once for identical requests" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.012">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `null`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_gasPrice does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.014">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `undefined`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `null`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.011">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.01">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `null`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `undefined`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockByNumber given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not hit Infura more than once for identical requests" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `null`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getBlockTransactionCountByNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not hit Infura more than once for identical requests" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not hit Infura more than once for identical requests" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getCode given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterChanges attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterChanges attempts to pass the request off to Infura" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not hit Infura more than once for identical requests" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getFilterLogs does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getLogs attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getLogs attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not hit Infura more than once for identical requests" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `null`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getStorageAt given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockHashAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `undefined`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByBlockNumberAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not hit Infura more than once for identical requests and it has a valid blockHash" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not hit Infura more than once for identical requests and it has a valid blockHash" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `null`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `undefined`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was null" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was null" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was undefined" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was undefined" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionByHash does not reuse the result of a previous request if result.blockHash was &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.021">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `null`" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `undefined`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given no block tag does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not hit Infura more than once for identical requests" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;latest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; reuses the result of a previous request even if the latest block number was updated since" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;earliest&quot; treats &quot;0x00&quot; as a synonym for &quot;earliest&quot;" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number reuses the result of a previous request even if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number reuses the result of a previous request even if the latest block number was updated since" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `null`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `undefined`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was made with different arguments than this one" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block number does not reuse the result of a previous request if it was made with different arguments than this one" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionCount given a block tag of &quot;pending&quot; hits Infura on all calls and does not cache anything" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not hit Infura more than once for identical requests and it has a valid blockHash" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not hit Infura more than once for identical requests and it has a valid blockHash" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was null" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was null" time="0.006">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was undefined" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was undefined" time="0.009">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getTransactionReceipt does not reuse the result of a previous request if result.blockHash was &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not hit Infura more than once for identical requests" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `null`" time="0.014">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockHashAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `null`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleByBlockNumberAndIndex does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockHash does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not hit Infura more than once for identical requests" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `null`" time="0.004">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `undefined`" time="0.008">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getUncleCountByBlockNumber does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getWork attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_getWork attempts to pass the request off to Infura" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_hashrate attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_hashrate attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_mining attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_mining attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newBlockFilter attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newBlockFilter attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newFilter attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newFilter attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newPendingTransactionFilter attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_newPendingTransactionFilter attempts to pass the request off to Infura" time="0.007">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not hit Infura more than once for identical requests" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `undefined`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_protocolVersion does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sendRawTransaction attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sendRawTransaction attempts to pass the request off to Infura" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sendTransaction attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sendTransaction attempts to pass the request off to Infura" time="0">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sign attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_sign attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_submitWork attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_submitWork attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_syncing attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_syncing attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_uninstallFilter attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura and listed in the JSON-RPC spec eth_uninstallFilter attempts to pass the request off to Infura" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec eth_subscribe attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec eth_subscribe attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec eth_unsubscribe attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec eth_unsubscribe attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_listening attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_listening attempts to pass the request off to Infura" time="0.001">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_peerCount attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_peerCount attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_version does not hit Infura, instead returning the chain id that maps to the Infura network, as a decimal string" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec net_version does not hit Infura, instead returning the chain id that maps to the Infura network, as a decimal string" time="0">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec parity_nextNonce attempts to pass the request off to Infura" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec parity_nextNonce attempts to pass the request off to Infura" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not hit Infura more than once for identical requests" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not hit Infura more than once for identical requests" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion hits Infura and does not reuse the result of a previous request if the latest block number was updated since" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion hits Infura and does not reuse the result of a previous request if the latest block number was updated since" time="0.005">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `null`" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `null`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `undefined`" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `undefined`" time="0.003">
    </testcase>
    <testcase classname="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `&lt;nil&gt;`" name="createInfuraClient RPC methods supported by Infura but not listed in the JSON-RPC spec web3_clientVersion does not reuse the result of a previous request if it was `&lt;nil&gt;`" time="0.002">
    </testcase>
    <testcase classname="createInfuraClient attempts to pass the request off to Infura" name="createInfuraClient attempts to pass the request off to Infura" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Welcome" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:47" time="1.182" tests="2">
    <testcase classname="Welcome routes to the metametrics screen when participateInMetaMetrics is not initialized" name="Welcome routes to the metametrics screen when participateInMetaMetrics is not initialized" time="0.041">
    </testcase>
    <testcase classname="Welcome routes to select action when participateInMetaMetrics is initialized" name="Welcome routes to select action when participateInMetaMetrics is initialized" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasControls Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:47" time="1.144" tests="3">
    <testcase classname="AdvancedGasControls Component should render correctly" name="AdvancedGasControls Component should render correctly" time="0.031">
    </testcase>
    <testcase classname="AdvancedGasControls Component should not render maxFee and maxPriorityFee inputs if supportsEIP1559 is false" name="AdvancedGasControls Component should not render maxFee and maxPriorityFee inputs if supportsEIP1559 is false" time="0.007">
    </testcase>
    <testcase classname="AdvancedGasControls Component should render maxFee and maxPriorityFee inputs if supportsEIP1559 is true" name="AdvancedGasControls Component should render maxFee and maxPriorityFee inputs if supportsEIP1559 is true" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="TransactionAlerts" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:48" time="1.654" tests="19">
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true informs the user that a simulation of the transaction failed" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true informs the user that a simulation of the transaction failed" time="0.021">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has not acknowledged the failure offers the user an option to bypass the warning" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has not acknowledged the failure offers the user an option to bypass the warning" time="0.008">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has not acknowledged the failure calls setUserAcknowledgedGasMissing if the user bypasses the warning" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has not acknowledged the failure calls setUserAcknowledgedGasMissing if the user bypasses the warning" time="0.006">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has already acknowledged the failure does not offer the user an option to bypass the warning" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is true if the user has already acknowledged the failure does not offer the user an option to bypass the warning" time="0.004">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is falsy does not inform the user that a simulation of the transaction failed" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if hasSimulationError from useGasFeeContext is falsy does not inform the user that a simulation of the transaction failed" time="0.006">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is 1 informs the user that they have a pending transaction" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is 1 informs the user that they have a pending transaction" time="0.01">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is more than 1 informs the user that they have pending transactions" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is more than 1 informs the user that they have pending transactions" time="0.005">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is 0 does not inform the user that they have pending transactions" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if the length of pendingTransactions is 0 does not inform the user that they have pending transactions" time="0.003">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if balanceError from useGasFeeContext is true informs the user that they have insufficient funds" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if balanceError from useGasFeeContext is true informs the user that they have insufficient funds" time="0.005">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if balanceError from useGasFeeContext is falsy does not inform the user that they have insufficient funds" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if balanceError from useGasFeeContext is falsy does not inform the user that they have insufficient funds" time="0.002">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if estimateUsed from useGasFeeContext is &quot;low&quot; informs the user that the current transaction is queued" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if estimateUsed from useGasFeeContext is &quot;low&quot; informs the user that the current transaction is queued" time="0.005">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if estimateUsed from useGasFeeContext is not &quot;low&quot; does not inform the user that the current transaction is queued" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if estimateUsed from useGasFeeContext is not &quot;low&quot; does not inform the user that the current transaction is queued" time="0.006">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if isNetworkBusy from useGasFeeContext is truthy informs the user that the network is busy" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if isNetworkBusy from useGasFeeContext is truthy informs the user that the network is busy" time="0.002">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if isNetworkBusy from useGasFeeContext is falsy does not inform the user that the network is busy" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is truthy if isNetworkBusy from useGasFeeContext is falsy does not inform the user that the network is busy" time="0.002">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if hasSimulationError from useGasFeeContext is true does not inform the user that a simulation of the transaction failed" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if hasSimulationError from useGasFeeContext is true does not inform the user that a simulation of the transaction failed" time="0.001">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if the length of pendingTransactions is at least 1 informs the user that they have a pending transaction" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if the length of pendingTransactions is at least 1 informs the user that they have a pending transaction" time="0.003">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if balanceError from useGasFeeContext is true informs the user that they have insufficient funds" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if balanceError from useGasFeeContext is true informs the user that they have insufficient funds" time="0.002">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if estimateUsed from useGasFeeContext is &quot;low&quot; informs the user that the current transaction is queued" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if estimateUsed from useGasFeeContext is &quot;low&quot; informs the user that the current transaction is queued" time="0.001">
    </testcase>
    <testcase classname="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if isNetworkBusy from useGasFeeContext is truthy does not inform the user that the network is busy" name="TransactionAlerts when supportsEIP1559V2 from useGasFeeContext is falsy if isNetworkBusy from useGasFeeContext is truthy does not inform the user that the network is busy" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Gas timing" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:48" time="1.241" tests="4">
    <testcase classname="Gas timing renders nothing when gas is loading" name="Gas timing renders nothing when gas is loading" time="0.006">
    </testcase>
    <testcase classname="Gas timing renders &quot;very likely&quot; when high estimate is chosen" name="Gas timing renders &quot;very likely&quot; when high estimate is chosen" time="0.003">
    </testcase>
    <testcase classname="Gas timing renders &quot;likely&quot; when medium estimate is chosen" name="Gas timing renders &quot;likely&quot; when medium estimate is chosen" time="0.001">
    </testcase>
    <testcase classname="Gas timing renders &quot;maybe&quot; when low estimate is chosen" name="Gas timing renders &quot;maybe&quot; when low estimate is chosen" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CancelSpeedupPopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:48" time="1.668" tests="6">
    <testcase classname="CancelSpeedupPopover should have ❌Cancel in header if editGasMode is cancel" name="CancelSpeedupPopover should have ❌Cancel in header if editGasMode is cancel" time="0.062">
    </testcase>
    <testcase classname="CancelSpeedupPopover should have 🚀Speed up in header if editGasMode is speedup" name="CancelSpeedupPopover should have 🚀Speed up in header if editGasMode is speedup" time="0.03">
    </testcase>
    <testcase classname="CancelSpeedupPopover information tooltip should contain the correct text if editGasMode is cancel" name="CancelSpeedupPopover information tooltip should contain the correct text if editGasMode is cancel" time="0.023">
    </testcase>
    <testcase classname="CancelSpeedupPopover information tooltip should contain the correct text if editGasMode is speedup" name="CancelSpeedupPopover information tooltip should contain the correct text if editGasMode is speedup" time="0.017">
    </testcase>
    <testcase classname="CancelSpeedupPopover should show correct gas values, increased by 10%, when initial initial gas value is above estimated medium" name="CancelSpeedupPopover should show correct gas values, increased by 10%, when initial initial gas value is above estimated medium" time="0.023">
    </testcase>
    <testcase classname="CancelSpeedupPopover should show correct gas values, set to the estimated medium, when initial initial gas value is below estimated medium" name="CancelSpeedupPopover should show correct gas values, set to the estimated medium, when initial initial gas value is below estimated medium" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="TransactionListItemDetails Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:48" time="2.445" tests="4">
    <testcase classname="TransactionListItemDetails Component should render properly" name="TransactionListItemDetails Component should render properly" time="0.02">
    </testcase>
    <testcase classname="TransactionListItemDetails Component should render a retry button" name="TransactionListItemDetails Component should render a retry button" time="0.005">
    </testcase>
    <testcase classname="TransactionListItemDetails Component should disable the Copy Tx ID and View In Etherscan buttons when tx hash is missing" name="TransactionListItemDetails Component should disable the Copy Tx ID and View In Etherscan buttons when tx hash is missing" time="0.003">
    </testcase>
    <testcase classname="TransactionListItemDetails Component should render functional Copy Tx ID and View In Etherscan buttons when tx hash exists" name="TransactionListItemDetails Component should render functional Copy Tx ID and View In Etherscan buttons when tx hash exists" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasFeePopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:49" time="2.443" tests="4">
    <testcase classname="AdvancedGasFeePopover should renders save button enabled by default" name="AdvancedGasFeePopover should renders save button enabled by default" time="0.136">
    </testcase>
    <testcase classname="AdvancedGasFeePopover should disable save button if priority fee 0 is entered" name="AdvancedGasFeePopover should disable save button if priority fee 0 is entered" time="0.046">
    </testcase>
    <testcase classname="AdvancedGasFeePopover should disable save button if priority fee entered is greater than base fee" name="AdvancedGasFeePopover should disable save button if priority fee entered is greater than base fee" time="0.046">
    </testcase>
    <testcase classname="AdvancedGasFeePopover should disable save button if gas limit beyond range is entered" name="AdvancedGasFeePopover should disable save button if gas limit beyond range is entered" time="0.126">
    </testcase>
  </testsuite>
  <testsuite name="Onboarding Flow" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:50" time="1.71" tests="15">
    <testcase classname="Onboarding Flow should route to the default route when completedOnboarding and seedPhraseBackedUp is true" name="Onboarding Flow should route to the default route when completedOnboarding and seedPhraseBackedUp is true" time="0.016">
    </testcase>
    <testcase classname="Onboarding Flow Create Password should render create password" name="Onboarding Flow Create Password should render create password" time="0.018">
    </testcase>
    <testcase classname="Onboarding Flow Create Password should call createNewVaultAndGetSeedPhrase when creating a new wallet password" name="Onboarding Flow Create Password should call createNewVaultAndGetSeedPhrase when creating a new wallet password" time="0.025">
    </testcase>
    <testcase classname="Onboarding Flow should render secure your wallet component" name="Onboarding Flow should render secure your wallet component" time="0.018">
    </testcase>
    <testcase classname="Onboarding Flow should render review recovery phrase" name="Onboarding Flow should render review recovery phrase" time="0.01">
    </testcase>
    <testcase classname="Onboarding Flow should render confirm recovery phrase" name="Onboarding Flow should render confirm recovery phrase" time="0.009">
    </testcase>
    <testcase classname="Onboarding Flow should render import seed phrase" name="Onboarding Flow should render import seed phrase" time="0.046">
    </testcase>
    <testcase classname="Onboarding Flow Unlock Screen should render unlock page" name="Onboarding Flow Unlock Screen should render unlock page" time="0.055">
    </testcase>
    <testcase classname="Onboarding Flow Unlock Screen should" name="Onboarding Flow Unlock Screen should" time="0.06">
    </testcase>
    <testcase classname="Onboarding Flow should render privacy settings" name="Onboarding Flow should render privacy settings" time="0.014">
    </testcase>
    <testcase classname="Onboarding Flow should render onboarding creation/completion successful" name="Onboarding Flow should render onboarding creation/completion successful" time="0.005">
    </testcase>
    <testcase classname="Onboarding Flow should render onboarding welcome screen" name="Onboarding Flow should render onboarding welcome screen" time="0.043">
    </testcase>
    <testcase classname="Onboarding Flow should render onboarding pin extension screen" name="Onboarding Flow should render onboarding pin extension screen" time="0.018">
    </testcase>
    <testcase classname="Onboarding Flow should render onboarding metametrics screen" name="Onboarding Flow should render onboarding metametrics screen" time="0.005">
    </testcase>
    <testcase classname="Onboarding Flow should render onboarding experimental screen" name="Onboarding Flow should render onboarding experimental screen" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="GasDetailsItem" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:50" time="1.342" tests="6">
    <testcase classname="GasDetailsItem should render label" name="GasDetailsItem should render label" time="0.063">
    </testcase>
    <testcase classname="GasDetailsItem should show warning icon if estimates are high" name="GasDetailsItem should show warning icon if estimates are high" time="0.019">
    </testcase>
    <testcase classname="GasDetailsItem should not show warning icon if estimates are not high" name="GasDetailsItem should not show warning icon if estimates are not high" time="0.015">
    </testcase>
    <testcase classname="GasDetailsItem should return null if there is simulationError and user has not acknowledged gasMissing warning" name="GasDetailsItem should return null if there is simulationError and user has not acknowledged gasMissing warning" time="0.003">
    </testcase>
    <testcase classname="GasDetailsItem should not return null even if there is simulationError if user acknowledged gasMissing warning" name="GasDetailsItem should not return null even if there is simulationError if user acknowledged gasMissing warning" time="0.015">
    </testcase>
    <testcase classname="GasDetailsItem should render gas fee details" name="GasDetailsItem should render gas fee details" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="NetworkForm Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:49" time="3.075" tests="6">
    <testcase classname="NetworkForm Component should render add new network form correctly" name="NetworkForm Component should render add new network form correctly" time="0.334">
    </testcase>
    <testcase classname="NetworkForm Component should render network form correctly" name="NetworkForm Component should render network form correctly" time="0.031">
    </testcase>
    <testcase classname="NetworkForm Component should validate RPC URL field correctly" name="NetworkForm Component should validate RPC URL field correctly" time="0.128">
    </testcase>
    <testcase classname="NetworkForm Component should validate chain id field correctly" name="NetworkForm Component should validate chain id field correctly" time="0.226">
    </testcase>
    <testcase classname="NetworkForm Component should validate currency symbol field correctly" name="NetworkForm Component should validate currency symbol field correctly" time="0.191">
    </testcase>
    <testcase classname="NetworkForm Component should validate block explorer URL field correctly" name="NetworkForm Component should validate block explorer URL field correctly" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="ActionableMessage" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:50" time="2.071" tests="3">
    <testcase classname="ActionableMessage renders the component with initial props" name="ActionableMessage renders the component with initial props" time="0.022">
    </testcase>
    <testcase classname="ActionableMessage renders button for primaryActionV2 prop" name="ActionableMessage renders button for primaryActionV2 prop" time="0.047">
    </testcase>
    <testcase classname="ActionableMessage renders primaryActionV2.onClick is callen when primaryActionV2 button is clicked" name="ActionableMessage renders primaryActionV2.onClick is callen when primaryActionV2 button is clicked" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Name of the group" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:50" time="2.499" tests="6">
    <testcase classname="Name of the group should match snapshot" name="Name of the group should match snapshot" time="0.066">
    </testcase>
    <testcase classname="Name of the group should back button" name="Name of the group should back button" time="0.022">
    </testcase>
    <testcase classname="Name of the group should initialize with a disabled create button" name="Name of the group should initialize with a disabled create button" time="0.044">
    </testcase>
    <testcase classname="Name of the group should" name="Name of the group should" time="0.123">
    </testcase>
    <testcase classname="Name of the group should error when the password and the confirm password are not the same" name="Name of the group should error when the password and the confirm password are not the same" time="0.044">
    </testcase>
    <testcase classname="Name of the group should disable the create button if the terms are not checked but passwords are correct" name="Name of the group should disable the create button if the terms are not checked but passwords are correct" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="Send Page" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:51" time="1.66" tests="9">
    <testcase classname="Send Page Send Flow Initialization should initialize the ENS slice on render" name="Send Page Send Flow Initialization should initialize the ENS slice on render" time="0.022">
    </testcase>
    <testcase classname="Send Page Send Flow Initialization should showQrScanner when location.search is ?scan=true" name="Send Page Send Flow Initialization should showQrScanner when location.search is ?scan=true" time="0.006">
    </testcase>
    <testcase classname="Send Page Send Flow should render the header with Send to displayed" name="Send Page Send Flow should render the header with Send to displayed" time="0.006">
    </testcase>
    <testcase classname="Send Page Send Flow should render the EnsInput field" name="Send Page Send Flow should render the EnsInput field" time="0.017">
    </testcase>
    <testcase classname="Send Page Send Flow should not render the footer" name="Send Page Send Flow should not render the footer" time="0.006">
    </testcase>
    <testcase classname="Send Page Send Flow should render correctly even when a draftTransaction does not exist" name="Send Page Send Flow should render correctly even when a draftTransaction does not exist" time="0.006">
    </testcase>
    <testcase classname="Send Page Send and Edit Flow (draft) should render the header with Send displayed" name="Send Page Send and Edit Flow (draft) should render the header with Send displayed" time="0.071">
    </testcase>
    <testcase classname="Send Page Send and Edit Flow (draft) should render the EnsInput field" name="Send Page Send and Edit Flow (draft) should render the EnsInput field" time="0.003">
    </testcase>
    <testcase classname="Send Page Send and Edit Flow (draft) should render the footer" name="Send Page Send and Edit Flow (draft) should render the footer" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="TransactionActivityLog container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:52" time="1.07" tests="2">
    <testcase classname="TransactionActivityLog container mapStateToProps() should return the correct props" name="TransactionActivityLog container mapStateToProps() should return the correct props" time="0.006">
    </testcase>
    <testcase classname="TransactionActivityLog container mapStateToProps() should return the correct props when on a custom network" name="TransactionActivityLog container mapStateToProps() should return the correct props when on a custom network" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Send Slice" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:52" time="1.247" tests="102">
    <testcase classname="Send Slice Reducers addNewDraft should add new draft transaction and set currentTransactionUUID" name="Send Slice Reducers addNewDraft should add new draft transaction and set currentTransactionUUID" time="0.003">
    </testcase>
    <testcase classname="Send Slice Reducers addHistoryEntry should append a history item to the current draft transaction, including timestamp" name="Send Slice Reducers addHistoryEntry should append a history item to the current draft transaction, including timestamp" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers calculateGasTotal should set gasTotal to maxFeePerGax * gasLimit for FEE_MARKET transaction" name="Send Slice Reducers calculateGasTotal should set gasTotal to maxFeePerGax * gasLimit for FEE_MARKET transaction" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers calculateGasTotal should set gasTotal to gasPrice * gasLimit for non FEE_MARKET transaction" name="Send Slice Reducers calculateGasTotal should set gasTotal to gasPrice * gasLimit for non FEE_MARKET transaction" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers calculateGasTotal should call updateAmountToMax if amount mode is max" name="Send Slice Reducers calculateGasTotal should call updateAmountToMax if amount mode is max" time="0.002">
    </testcase>
    <testcase classname="Send Slice Reducers resetSendState should set the state back to a blank slate matching the initialState object" name="Send Slice Reducers resetSendState should set the state back to a blank slate matching the initialState object" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers updateSendAmount should" name="Send Slice Reducers updateSendAmount should" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateAmountToMax should calculate the max amount based off of the asset balance and gas total then updates send amount value" name="Send Slice Reducers updateAmountToMax should calculate the max amount based off of the asset balance and gas total then updates send amount value" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers updateGasFees should work with FEE_MARKET gas fees" name="Send Slice Reducers updateGasFees should work with FEE_MARKET gas fees" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateGasFees should work with LEGACY gas fees" name="Send Slice Reducers updateGasFees should work with LEGACY gas fees" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateUserInputHexData should update the state with the provided data" name="Send Slice Reducers updateUserInputHexData should update the state with the provided data" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateGasLimit should" name="Send Slice Reducers updateGasLimit should" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers updateGasLimit should recalculate gasTotal" name="Send Slice Reducers updateGasLimit should recalculate gasTotal" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateAmountMode should change to INPUT amount mode" name="Send Slice Reducers updateAmountMode should change to INPUT amount mode" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers updateAmountMode should change to MAX amount mode" name="Send Slice Reducers updateAmountMode should change to MAX amount mode" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers updateAmountMode should" name="Send Slice Reducers updateAmountMode should" time="0.006">
    </testcase>
    <testcase classname="Send Slice Reducers updateAsset should update asset type and balance from respective action payload" name="Send Slice Reducers updateAsset should update asset type and balance from respective action payload" time="0.018">
    </testcase>
    <testcase classname="Send Slice Reducers updateAsset should nullify old contract address error when asset types is not TOKEN" name="Send Slice Reducers updateAsset should nullify old contract address error when asset types is not TOKEN" time="0.002">
    </testcase>
    <testcase classname="Send Slice Reducers updateAsset should update asset type and details to TOKEN payload" name="Send Slice Reducers updateAsset should update asset type and details to TOKEN payload" time="0.008">
    </testcase>
    <testcase classname="Send Slice Reducers updateRecipient should" name="Send Slice Reducers updateRecipient should" time="0.015">
    </testcase>
    <testcase classname="Send Slice Reducers useDefaultGas should" name="Send Slice Reducers useDefaultGas should" time="0.002">
    </testcase>
    <testcase classname="Send Slice Reducers useCustomGas should" name="Send Slice Reducers useCustomGas should" time="0.002">
    </testcase>
    <testcase classname="Send Slice Reducers updateRecipientUserInput should update recipient user input with payload" name="Send Slice Reducers updateRecipientUserInput should update recipient user input with payload" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should set recipient error and warning to null when user input is" name="Send Slice Reducers validateRecipientUserInput should set recipient error and warning to null when user input is" time="0.004">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should error with an invalid address error when user input is not a valid hex string" name="Send Slice Reducers validateRecipientUserInput should error with an invalid address error when user input is not a valid hex string" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should error with an invalid network error when user input is not a valid hex string on a non default network" name="Send Slice Reducers validateRecipientUserInput should error with an invalid network error when user input is not a valid hex string on a non default network" time="0.01">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should error with invalid address recipient when the user inputs the burn address" name="Send Slice Reducers validateRecipientUserInput should error with invalid address recipient when the user inputs the burn address" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should error with same address recipient as a token" name="Send Slice Reducers validateRecipientUserInput should error with same address recipient as a token" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should set a warning when sending to a token address in the token address list" name="Send Slice Reducers validateRecipientUserInput should set a warning when sending to a token address in the token address list" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should set a warning when sending to a token address in the token list" name="Send Slice Reducers validateRecipientUserInput should set a warning when sending to a token address in the token list" time="0.002">
    </testcase>
    <testcase classname="Send Slice Reducers validateRecipientUserInput should set a warning when sending to an address that is probably a token contract" name="Send Slice Reducers validateRecipientUserInput should set a warning when sending to an address that is probably a token contract" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers updateRecipientSearchMode should" name="Send Slice Reducers updateRecipientSearchMode should" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateAmountField should error with insufficient funds when amount asset value plust gas is higher than asset balance" name="Send Slice Reducers validateAmountField should error with insufficient funds when amount asset value plust gas is higher than asset balance" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateAmountField should error with insufficient tokens when amount value of tokens is higher than asset balance of token" name="Send Slice Reducers validateAmountField should error with insufficient tokens when amount value of tokens is higher than asset balance of token" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateAmountField should error negative value amount" name="Send Slice Reducers validateAmountField should error negative value amount" time="0.014">
    </testcase>
    <testcase classname="Send Slice Reducers validateAmountField should not error for positive value amount" name="Send Slice Reducers validateAmountField should not error for positive value amount" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers validateGasField should error when total amount of gas is higher than account balance" name="Send Slice Reducers validateGasField should error when total amount of gas is higher than account balance" time="0">
    </testcase>
    <testcase classname="Send Slice Reducers validateSendState should set `INVALID` send state status when amount error is present" name="Send Slice Reducers validateSendState should set `INVALID` send state status when amount error is present" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateSendState should set `INVALID` send state status when gas error is present" name="Send Slice Reducers validateSendState should set `INVALID` send state status when gas error is present" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateSendState should set `INVALID` send state status when asset type is `TOKEN` without token details present" name="Send Slice Reducers validateSendState should set `INVALID` send state status when asset type is `TOKEN` without token details present" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateSendState should set `INVALID` send state status when gasLimit is under the minimumGasLimit" name="Send Slice Reducers validateSendState should set `INVALID` send state status when gasLimit is under the minimumGasLimit" time="0.001">
    </testcase>
    <testcase classname="Send Slice Reducers validateSendState should set `VALID` send state status when conditionals have not been met" name="Send Slice Reducers validateSendState should set `VALID` send state status when conditionals have not been met" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers QR Code Detected should set the recipient address to the scanned address value if they are not equal" name="Send Slice extraReducers/externalReducers QR Code Detected should set the recipient address to the scanned address value if they are not equal" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers QR Code Detected should not set the recipient address to invalid scanned address and errors" name="Send Slice extraReducers/externalReducers QR Code Detected should not set the recipient address to invalid scanned address and errors" time="0.001">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Selected Address Changed should update selected account address and balance on non-edit stages" name="Send Slice extraReducers/externalReducers Selected Address Changed should update selected account address and balance on non-edit stages" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Selected Address Changed should gracefully handle missing account in payload" name="Send Slice extraReducers/externalReducers Selected Address Changed should gracefully handle missing account in payload" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Account Changed should correctly update the fromAccount in an edit" name="Send Slice extraReducers/externalReducers Account Changed should correctly update the fromAccount in an edit" time="0.001">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Account Changed should gracefully handle missing account param in payload" name="Send Slice extraReducers/externalReducers Account Changed should gracefully handle missing account param in payload" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Account Changed should not edit account balance if action payload address is not the same as state&apos;s address" name="Send Slice extraReducers/externalReducers Account Changed should not edit account balance if action payload address is not the same as state&apos;s address" time="0">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Initialize Pending Send State should dispatch async action thunk first with pending, then finally fulfilling from minimal state" name="Send Slice extraReducers/externalReducers Initialize Pending Send State should dispatch async action thunk first with pending, then finally fulfilling from minimal state" time="0.002">
    </testcase>
    <testcase classname="Send Slice extraReducers/externalReducers Set Basic Gas Estimate Data should recalculate gas based off of average basic estimate data" name="Send Slice extraReducers/externalReducers Set Basic Gas Estimate Data should recalculate gas based off of average basic estimate data" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators updateGasPrice should update gas price and update draft transaction with validated state" name="Send Slice Action Creators updateGasPrice should update gas price and update draft transaction with validated state" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAmount should create an action to update send amount" name="Send Slice Action Creators UpdateSendAmount should create an action to update send amount" time="0.066">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAmount should create an action to update send amount mode to `INPUT` when mode is `MAX`" name="Send Slice Action Creators UpdateSendAmount should create an action to update send amount mode to `INPUT` when mode is `MAX`" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAmount should create an action computeEstimateGasLimit and change states from pending to fulfilled with token asset types" name="Send Slice Action Creators UpdateSendAmount should create an action computeEstimateGasLimit and change states from pending to fulfilled with token asset types" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAsset should create actions for updateSendAsset" name="Send Slice Action Creators UpdateSendAsset should create actions for updateSendAsset" time="0.004">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAsset should create actions for updateSendAsset with tokens" name="Send Slice Action Creators UpdateSendAsset should create actions for updateSendAsset with tokens" time="0.002">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendAsset should show ConvertTokenToNFT modal and throw &quot;invalidAssetType&quot; error when token passed in props is an ERC721 or ERC1155" name="Send Slice Action Creators UpdateSendAsset should show ConvertTokenToNFT modal and throw &quot;invalidAssetType&quot; error when token passed in props is an ERC721 or ERC1155" time="0.005">
    </testcase>
    <testcase classname="Send Slice Action Creators updateRecipientUserInput should create actions for updateRecipientUserInput and checks debounce for validation" name="Send Slice Action Creators updateRecipientUserInput should create actions for updateRecipientUserInput and checks debounce for validation" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators useContactListForRecipientSearch should create action to change send recipient search to contact list" name="Send Slice Action Creators useContactListForRecipientSearch should create action to change send recipient search to contact list" time="0.002">
    </testcase>
    <testcase classname="Send Slice Action Creators UseMyAccountsForRecipientSearch should create action to change send recipient search to derived accounts" name="Send Slice Action Creators UseMyAccountsForRecipientSearch should create action to change send recipient search to derived accounts" time="0">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateRecipient should create actions to update recipient and recalculate gas limit if the asset type is not set" name="Send Slice Action Creators UpdateRecipient should create actions to update recipient and recalculate gas limit if the asset type is not set" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateRecipient should update recipient nickname if the passed address exists in the addressBook state but no nickname param is provided" name="Send Slice Action Creators UpdateRecipient should update recipient nickname if the passed address exists in the addressBook state but no nickname param is provided" time="0.004">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateRecipient should create actions to reset recipient input and ens, calculate gas and then validate input" name="Send Slice Action Creators UpdateRecipient should create actions to reset recipient input and ens, calculate gas and then validate input" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators ResetRecipientInput should create actions to reset recipient input and ens then validates input" name="Send Slice Action Creators ResetRecipientInput should create actions to reset recipient input and ens then validates input" time="0.002">
    </testcase>
    <testcase classname="Send Slice Action Creators UpdateSendHexData should create action to update hexData" name="Send Slice Action Creators UpdateSendHexData should create action to update hexData" time="0">
    </testcase>
    <testcase classname="Send Slice Action Creators ToggleSendMaxMode should create actions to toggle update max mode when send amount mode is not max" name="Send Slice Action Creators ToggleSendMaxMode should create actions to toggle update max mode when send amount mode is not max" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators ToggleSendMaxMode should create actions to toggle off max mode when send amount mode is max" name="Send Slice Action Creators ToggleSendMaxMode should create actions to toggle off max mode when send amount mode is max" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators SignTransaction should show confirm tx page when no other conditions for signing have been met" name="Send Slice Action Creators SignTransaction should show confirm tx page when no other conditions for signing have been met" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators SignTransaction with token transfers should pass the correct transaction parameters to addUnapprovedTransactionAndRouteToConfirmationPage" name="Send Slice Action Creators SignTransaction with token transfers should pass the correct transaction parameters to addUnapprovedTransactionAndRouteToConfirmationPage" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators SignTransaction should create actions for updateTransaction rejecting" name="Send Slice Action Creators SignTransaction should create actions for updateTransaction rejecting" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators editExistingTransaction should set up the appropriate state for editing a native asset transaction" name="Send Slice Action Creators editExistingTransaction should set up the appropriate state for editing a native asset transaction" time="0.001">
    </testcase>
    <testcase classname="Send Slice Action Creators editExistingTransaction should set up the appropriate state for editing a collectible asset transaction" name="Send Slice Action Creators editExistingTransaction should set up the appropriate state for editing a collectible asset transaction" time="0.011">
    </testcase>
    <testcase classname="Send Slice Action Creators should set up the appropriate state for editing a token asset transaction" name="Send Slice Action Creators should set up the appropriate state for editing a token asset transaction" time="0.013">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors has a selector that gets gasLimit" name="Send Slice selectors gas selectors has a selector that gets gasLimit" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors has a selector that gets gasPrice" name="Send Slice selectors gas selectors has a selector that gets gasPrice" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors has a selector that gets gasTotal" name="Send Slice selectors gas selectors has a selector that gets gasTotal" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors has a selector to determine if gas fee is in error" name="Send Slice selectors gas selectors has a selector to determine if gas fee is in error" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors has a selector that gets minimumGasLimit" name="Send Slice selectors gas selectors has a selector that gets minimumGasLimit" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns BASIC when on mainnet and advanced inline gas is false" name="Send Slice selectors gas selectors getGasInputMode selector returns BASIC when on mainnet and advanced inline gas is false" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns BASIC when on localhost and advanced inline gas is false and IN_TEST is set" name="Send Slice selectors gas selectors getGasInputMode selector returns BASIC when on localhost and advanced inline gas is false and IN_TEST is set" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is true" name="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is true" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is false but eth_gasPrice estimate is used" name="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is false but eth_gasPrice estimate is used" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is false but eth_gasPrice estimate is used even IN_TEST" name="Send Slice selectors gas selectors getGasInputMode selector returns INLINE when on mainnet and advanced inline gas is false but eth_gasPrice estimate is used even IN_TEST" time="0">
    </testcase>
    <testcase classname="Send Slice selectors gas selectors getGasInputMode selector returns CUSTOM if gasIsSetInModal is true" name="Send Slice selectors gas selectors getGasInputMode selector returns CUSTOM if gasIsSetInModal is true" time="0">
    </testcase>
    <testcase classname="Send Slice selectors asset selectors has a selector to get the asset" name="Send Slice selectors asset selectors has a selector to get the asset" time="0">
    </testcase>
    <testcase classname="Send Slice selectors asset selectors has a selector to get the asset address" name="Send Slice selectors asset selectors has a selector to get the asset address" time="0">
    </testcase>
    <testcase classname="Send Slice selectors asset selectors has a selector that determines if asset is sendable based on ERC721 status" name="Send Slice selectors asset selectors has a selector that determines if asset is sendable based on ERC721 status" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get send amount" name="Send Slice selectors amount selectors has a selector to get send amount" time="0">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get if there is an insufficient funds error" name="Send Slice selectors amount selectors has a selector to get if there is an insufficient funds error" time="0">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get max mode state" name="Send Slice selectors amount selectors has a selector to get max mode state" time="0">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get the draft transaction ID" name="Send Slice selectors amount selectors has a selector to get the draft transaction ID" time="0">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get the user entered hex data" name="Send Slice selectors amount selectors has a selector to get the user entered hex data" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors amount selectors has a selector to get if there is an amount error" name="Send Slice selectors amount selectors has a selector to get if there is an amount error" time="0">
    </testcase>
    <testcase classname="Send Slice selectors recipient selectors has a selector to get recipient address" name="Send Slice selectors recipient selectors has a selector to get recipient address" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors recipient selectors has a selector to check if using the my accounts option for recipient selection" name="Send Slice selectors recipient selectors has a selector to check if using the my accounts option for recipient selection" time="0">
    </testcase>
    <testcase classname="Send Slice selectors recipient selectors has a selector to get recipient user input in input field" name="Send Slice selectors recipient selectors has a selector to get recipient user input in input field" time="0">
    </testcase>
    <testcase classname="Send Slice selectors recipient selectors has a selector to get recipient state" name="Send Slice selectors recipient selectors has a selector to get recipient state" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors send validity selectors has a selector to get send errors" name="Send Slice selectors send validity selectors has a selector to get send errors" time="0">
    </testcase>
    <testcase classname="Send Slice selectors send validity selectors has a selector to get send state initialization status" name="Send Slice selectors send validity selectors has a selector to get send state initialization status" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors send validity selectors has a selector to get send state validity" name="Send Slice selectors send validity selectors has a selector to get send state validity" time="0.001">
    </testcase>
    <testcase classname="Send Slice selectors send validity selectors has a selector to get send stage" name="Send Slice selectors send validity selectors has a selector to get send stage" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Token Cell" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:52" time="1.191" tests="5">
    <testcase classname="Token Cell renders Identicon with props from token cell" name="Token Cell renders Identicon with props from token cell" time="0.03">
    </testcase>
    <testcase classname="Token Cell renders token balance" name="Token Cell renders token balance" time="0.006">
    </testcase>
    <testcase classname="Token Cell renders token symbol" name="Token Cell renders token symbol" time="0.005">
    </testcase>
    <testcase classname="Token Cell renders converted fiat amount" name="Token Cell renders converted fiat amount" time="0.004">
    </testcase>
    <testcase classname="Token Cell calls onClick when clicked" name="Token Cell calls onClick when clicked" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Remove Account" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:53" time="1.152" tests="3">
    <testcase classname="Confirm Remove Account nevermind" name="Confirm Remove Account nevermind" time="0.045">
    </testcase>
    <testcase classname="Confirm Remove Account remove" name="Confirm Remove Account remove" time="0.009">
    </testcase>
    <testcase classname="Confirm Remove Account closes" name="Confirm Remove Account closes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="EditGasFeePopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:52" time="2.469" tests="12">
    <testcase classname="EditGasFeePopover should renders low / medium / high options" name="EditGasFeePopover should renders low / medium / high options" time="0.086">
    </testcase>
    <testcase classname="EditGasFeePopover should show time estimates" name="EditGasFeePopover should show time estimates" time="0.033">
    </testcase>
    <testcase classname="EditGasFeePopover should show gas fee estimates" name="EditGasFeePopover should show gas fee estimates" time="0.022">
    </testcase>
    <testcase classname="EditGasFeePopover should not show insufficient balance message if transaction value is less than balance" name="EditGasFeePopover should not show insufficient balance message if transaction value is less than balance" time="0.019">
    </testcase>
    <testcase classname="EditGasFeePopover should show insufficient balance message if transaction value is more than balance" name="EditGasFeePopover should show insufficient balance message if transaction value is more than balance" time="0.019">
    </testcase>
    <testcase classname="EditGasFeePopover should not show low, aggressive and dapp-suggested options for swap" name="EditGasFeePopover should not show low, aggressive and dapp-suggested options for swap" time="0.024">
    </testcase>
    <testcase classname="EditGasFeePopover should not show time estimates for swaps" name="EditGasFeePopover should not show time estimates for swaps" time="0.016">
    </testcase>
    <testcase classname="EditGasFeePopover should show correct header for edit gas mode" name="EditGasFeePopover should show correct header for edit gas mode" time="0.051">
    </testcase>
    <testcase classname="EditGasFeePopover should not show low option for cancel mode" name="EditGasFeePopover should not show low option for cancel mode" time="0.014">
    </testcase>
    <testcase classname="EditGasFeePopover should not show low option for speedup mode" name="EditGasFeePopover should not show low option for speedup mode" time="0.017">
    </testcase>
    <testcase classname="EditGasFeePopover should show tenPercentIncreased option for cancel gas mode" name="EditGasFeePopover should show tenPercentIncreased option for cancel gas mode" time="0.028">
    </testcase>
    <testcase classname="EditGasFeePopover should show tenPercentIncreased option for speedup gas mode" name="EditGasFeePopover should show tenPercentIncreased option for speedup gas mode" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="NetworksTab Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:53" time="1.296" tests="2">
    <testcase classname="NetworksTab Component should render networks tab content correctly" name="NetworksTab Component should render networks tab content correctly" time="0.046">
    </testcase>
    <testcase classname="NetworksTab Component should render add network form correctly" name="NetworksTab Component should render add network form correctly" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="SettingsPage" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:52" time="2.415" tests="2">
    <testcase classname="SettingsPage should render title correctly" name="SettingsPage should render title correctly" time="0.008">
    </testcase>
    <testcase classname="SettingsPage should render search correctly" name="SettingsPage should render search correctly" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="ViewQuote" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:53" time="1.276" tests="2">
    <testcase classname="ViewQuote renders the component with initial props" name="ViewQuote renders the component with initial props" time="0.093">
    </testcase>
    <testcase classname="ViewQuote renders the component with EIP-1559 enabled" name="ViewQuote renders the component with EIP-1559 enabled" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="createRPCMethodTrackingMiddleware" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:53" time="1.985" tests="8">
    <testcase classname="createRPCMethodTrackingMiddleware before participateInMetaMetrics is set should not track an event for a signature request" name="createRPCMethodTrackingMiddleware before participateInMetaMetrics is set should not track an event for a signature request" time="0.001">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to false should not track an event for a signature request" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to false should not track an event for a signature request" time="0">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should immediately track a Signature Requested event" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should immediately track a Signature Requested event" time="0.001">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Signature Approved event if the user approves" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Signature Approved event if the user approves" time="0.001">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Signature Rejected event if the user approves" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Signature Rejected event if the user approves" time="0">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Permissions Approved event if the user approves" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should track a Permissions Approved event if the user approves" time="0">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should never track blocked methods such as metamask_getProviderState" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should never track blocked methods such as metamask_getProviderState" time="0">
    </testcase>
    <testcase classname="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should only track events when not rate limited" name="createRPCMethodTrackingMiddleware participateInMetaMetrics is set to true should only track events when not rate limited" time="1.205">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasFeeGasLimit" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:54" time="1.232" tests="4">
    <testcase classname="AdvancedGasFeeGasLimit should show GasLimit from transaction" name="AdvancedGasFeeGasLimit should show GasLimit from transaction" time="0.024">
    </testcase>
    <testcase classname="AdvancedGasFeeGasLimit should show input when edit link is clicked" name="AdvancedGasFeeGasLimit should show input when edit link is clicked" time="0.021">
    </testcase>
    <testcase classname="AdvancedGasFeeGasLimit should show error if gas limit is not in range" name="AdvancedGasFeeGasLimit should show error if gas limit is not in range" time="0.015">
    </testcase>
    <testcase classname="AdvancedGasFeeGasLimit should validate gas limit against minimumGasLimit it is passed to context" name="AdvancedGasFeeGasLimit should validate gas limit against minimumGasLimit it is passed to context" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasFeeDefaults" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:54" time="1.437" tests="6">
    <testcase classname="AdvancedGasFeeDefaults should renders correct message when the default is not set" name="AdvancedGasFeeDefaults should renders correct message when the default is not set" time="0.047">
    </testcase>
    <testcase classname="AdvancedGasFeeDefaults should renders correct message when the default values are set" name="AdvancedGasFeeDefaults should renders correct message when the default values are set" time="0.016">
    </testcase>
    <testcase classname="AdvancedGasFeeDefaults should renders correct message when the default values are set and the maxBaseFee values are updated" name="AdvancedGasFeeDefaults should renders correct message when the default values are set and the maxBaseFee values are updated" time="0.042">
    </testcase>
    <testcase classname="AdvancedGasFeeDefaults should renders correct message when the default values are set and the priorityFee values are updated" name="AdvancedGasFeeDefaults should renders correct message when the default values are set and the priorityFee values are updated" time="0.032">
    </testcase>
    <testcase classname="AdvancedGasFeeDefaults should call action setAdvancedGasFee when checkbox or label text is clicked" name="AdvancedGasFeeDefaults should call action setAdvancedGasFee when checkbox or label text is clicked" time="0.022">
    </testcase>
    <testcase classname="AdvancedGasFeeDefaults should not render option to set default gas options in a swaps transaction" name="AdvancedGasFeeDefaults should not render option to set default gas options in a swaps transaction" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="AccountListItem Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:55" time="1.173" tests="6">
    <testcase classname="AccountListItem Component render should match snapshot" name="AccountListItem Component render should match snapshot" time="0.019">
    </testcase>
    <testcase classname="AccountListItem Component render should call handleClick with the expected props when the root div is clicked" name="AccountListItem Component render should call handleClick with the expected props when the root div is clicked" time="0.007">
    </testcase>
    <testcase classname="AccountListItem Component render should show the account name if it exists" name="AccountListItem Component render should show the account name if it exists" time="0.005">
    </testcase>
    <testcase classname="AccountListItem Component render should show the account address if there is no name" name="AccountListItem Component render should show the account address if there is no name" time="0.005">
    </testcase>
    <testcase classname="AccountListItem Component render should not render an icon if none is passed" name="AccountListItem Component render should not render an icon if none is passed" time="0.006">
    </testcase>
    <testcase classname="AccountListItem Component render should render the account address as a checksumAddress if displayAddress is true and name is provided" name="AccountListItem Component render should render the account address as a checksumAddress if displayAddress is true and name is provided" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="migrations" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:54" time="1.516" tests="5">
    <testcase classname="migrations liveMigrations require list should include all migrations" name="migrations liveMigrations require list should include all migrations" time="0.006">
    </testcase>
    <testcase classname="migrations liveMigrations require list should have tests for all migrations" name="migrations liveMigrations require list should have tests for all migrations" time="0.005">
    </testcase>
    <testcase classname="migrations Migrator migratedData version should be version 3" name="migrations Migrator migratedData version should be version 3" time="0.001">
    </testcase>
    <testcase classname="migrations Migrator should match the last version in live migrations" name="migrations Migrator should match the last version in live migrations" time="0.012">
    </testcase>
    <testcase classname="migrations Migrator should emit an error" name="migrations Migrator should emit an error" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="BaseFeeInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:55" time="1.371" tests="8">
    <testcase classname="BaseFeeInput should renders advancedGasFee.baseFee value if current estimate used is not custom" name="BaseFeeInput should renders advancedGasFee.baseFee value if current estimate used is not custom" time="0.058">
    </testcase>
    <testcase classname="BaseFeeInput should not use advancedGasFee.baseFee value for swaps" name="BaseFeeInput should not use advancedGasFee.baseFee value for swaps" time="0.011">
    </testcase>
    <testcase classname="BaseFeeInput should renders baseFee values from transaction if current estimate used is custom" name="BaseFeeInput should renders baseFee values from transaction if current estimate used is custom" time="0.012">
    </testcase>
    <testcase classname="BaseFeeInput should show current value of estimatedBaseFee in users primary currency in right side of input box" name="BaseFeeInput should show current value of estimatedBaseFee in users primary currency in right side of input box" time="0.014">
    </testcase>
    <testcase classname="BaseFeeInput should show current value of estimatedBaseFee in subtext" name="BaseFeeInput should show current value of estimatedBaseFee in subtext" time="0.013">
    </testcase>
    <testcase classname="BaseFeeInput should show 12hr range value in subtext" name="BaseFeeInput should show 12hr range value in subtext" time="0.011">
    </testcase>
    <testcase classname="BaseFeeInput should show error if base fee is less than suggested low value" name="BaseFeeInput should show error if base fee is less than suggested low value" time="0.031">
    </testcase>
    <testcase classname="BaseFeeInput should show error if base if is more than suggested high value" name="BaseFeeInput should show error if base if is more than suggested high value" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Personal Message Manager" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:54" time="2.64" tests="10">
    <testcase classname="Personal Message Manager #getMsgList when new should return empty array" name="Personal Message Manager #getMsgList when new should return empty array" time="0.006">
    </testcase>
    <testcase classname="Personal Message Manager #addMsg adds a Msg returned in getMsgList" name="Personal Message Manager #addMsg adds a Msg returned in getMsgList" time="0">
    </testcase>
    <testcase classname="Personal Message Manager #setMsgStatusApproved sets the Msg status to approved" name="Personal Message Manager #setMsgStatusApproved sets the Msg status to approved" time="0.001">
    </testcase>
    <testcase classname="Personal Message Manager #rejectMsg sets the Msg status to rejected" name="Personal Message Manager #rejectMsg sets the Msg status to rejected" time="0">
    </testcase>
    <testcase classname="Personal Message Manager #_updateMsg replaces the Msg with the same id" name="Personal Message Manager #_updateMsg replaces the Msg with the same id" time="0">
    </testcase>
    <testcase classname="Personal Message Manager #getUnapprovedMsgs returns unapproved Msgs in a hash" name="Personal Message Manager #getUnapprovedMsgs returns unapproved Msgs in a hash" time="0.001">
    </testcase>
    <testcase classname="Personal Message Manager #getMsg returns a Msg with the requested id" name="Personal Message Manager #getMsg returns a Msg with the requested id" time="0">
    </testcase>
    <testcase classname="Personal Message Manager #normalizeMsgData converts text to a utf8 hex string" name="Personal Message Manager #normalizeMsgData converts text to a utf8 hex string" time="0">
    </testcase>
    <testcase classname="Personal Message Manager #normalizeMsgData tolerates a hex prefix" name="Personal Message Manager #normalizeMsgData tolerates a hex prefix" time="0.001">
    </testcase>
    <testcase classname="Personal Message Manager #normalizeMsgData tolerates normal hex" name="Personal Message Manager #normalizeMsgData tolerates normal hex" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Typed Message Manager" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:56" time="1.951" tests="8">
    <testcase classname="Typed Message Manager supports version 1 of signedTypedData" name="Typed Message Manager supports version 1 of signedTypedData" time="0.005">
    </testcase>
    <testcase classname="Typed Message Manager has params address" name="Typed Message Manager has params address" time="0.001">
    </testcase>
    <testcase classname="Typed Message Manager adds to unapproved messages and sets status to unapproved" name="Typed Message Manager adds to unapproved messages and sets status to unapproved" time="0">
    </testcase>
    <testcase classname="Typed Message Manager validates params" name="Typed Message Manager validates params" time="0.001">
    </testcase>
    <testcase classname="Typed Message Manager gets unapproved by id" name="Typed Message Manager gets unapproved by id" time="0">
    </testcase>
    <testcase classname="Typed Message Manager approves messages" name="Typed Message Manager approves messages" time="0">
    </testcase>
    <testcase classname="Typed Message Manager sets msg status to signed and adds a raw sig to message details" name="Typed Message Manager sets msg status to signed and adds a raw sig to message details" time="0.001">
    </testcase>
    <testcase classname="Typed Message Manager rejects message" name="Typed Message Manager rejects message" time="0">
    </testcase>
  </testsuite>
  <testsuite name="StatusSlider" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:56" time="2.139" tests="11">
    <testcase classname="StatusSlider should show &quot;Not busy&quot; when networkCongestion is less than 0.33" name="StatusSlider should show &quot;Not busy&quot; when networkCongestion is less than 0.33" time="0.032">
    </testcase>
    <testcase classname="StatusSlider should show &quot;Stable&quot; when networkCongestion is 0.33" name="StatusSlider should show &quot;Stable&quot; when networkCongestion is 0.33" time="0.005">
    </testcase>
    <testcase classname="StatusSlider should show &quot;Stable&quot; when networkCongestion is between 0.33 and 0.66" name="StatusSlider should show &quot;Stable&quot; when networkCongestion is between 0.33 and 0.66" time="0.006">
    </testcase>
    <testcase classname="StatusSlider should show &quot;Busy&quot; when networkCongestion is 0.66" name="StatusSlider should show &quot;Busy&quot; when networkCongestion is 0.66" time="0.006">
    </testcase>
    <testcase classname="StatusSlider should show &quot;Busy&quot; when networkCongestion is greater than 0.66" name="StatusSlider should show &quot;Busy&quot; when networkCongestion is greater than 0.66" time="0.006">
    </testcase>
    <testcase classname="StatusSlider should show &quot;Stable&quot; if networkCongestion is not available yet" name="StatusSlider should show &quot;Stable&quot; if networkCongestion is not available yet" time="0.011">
    </testcase>
    <testcase classname="StatusSlider should position the arrow based on converting networkCongestion to a percentage rounded to the nearest 10" name="StatusSlider should position the arrow based on converting networkCongestion to a percentage rounded to the nearest 10" time="0.02">
    </testcase>
    <testcase classname="StatusSlider should position the arrow in the middle if networkCongestion has not been set yet" name="StatusSlider should position the arrow in the middle if networkCongestion has not been set yet" time="0.009">
    </testcase>
    <testcase classname="StatusSlider should color the arrow and label based on converting networkCongestion to a percentage rounded to the nearest 10" name="StatusSlider should color the arrow and label based on converting networkCongestion to a percentage rounded to the nearest 10" time="0.015">
    </testcase>
    <testcase classname="StatusSlider should color the arrow and label for the end position if networkCongestion rounds to 100%" name="StatusSlider should color the arrow and label for the end position if networkCongestion rounds to 100%" time="0.008">
    </testcase>
    <testcase classname="StatusSlider should color the arrow and label for the middle position if networkCongestion has not been set yet" name="StatusSlider should color the arrow and label for the middle position if networkCongestion has not been set yet" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="SendFooter Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:57" time="1.134" tests="11">
    <testcase classname="SendFooter Component onCancel should call resetSendState" name="SendFooter Component onCancel should call resetSendState" time="0.009">
    </testcase>
    <testcase classname="SendFooter Component onCancel should call cancelTx" name="SendFooter Component onCancel should call cancelTx" time="0.001">
    </testcase>
    <testcase classname="SendFooter Component onCancel should call history.push" name="SendFooter Component onCancel should call history.push" time="0">
    </testcase>
    <testcase classname="SendFooter Component onCancel should call history.push with DEFAULT_ROUTE in  edit stage" name="SendFooter Component onCancel should call history.push with DEFAULT_ROUTE in  edit stage" time="0.001">
    </testcase>
    <testcase classname="SendFooter Component onSubmit should call addToAddressBookIfNew with the correct params" name="SendFooter Component onSubmit should call addToAddressBookIfNew with the correct params" time="0.001">
    </testcase>
    <testcase classname="SendFooter Component onSubmit should call props.sign whe submitting" name="SendFooter Component onSubmit should call props.sign whe submitting" time="0.001">
    </testcase>
    <testcase classname="SendFooter Component onSubmit should call history.push" name="SendFooter Component onSubmit should call history.push" time="0.002">
    </testcase>
    <testcase classname="SendFooter Component render should render a PageContainerFooter component" name="SendFooter Component render should render a PageContainerFooter component" time="0.008">
    </testcase>
    <testcase classname="SendFooter Component render should pass the correct props to PageContainerFooter" name="SendFooter Component render should pass the correct props to PageContainerFooter" time="0.004">
    </testcase>
    <testcase classname="SendFooter Component Cancel Button has a cancel button in footer" name="SendFooter Component Cancel Button has a cancel button in footer" time="0.019">
    </testcase>
    <testcase classname="SendFooter Component Cancel Button has label changed to Reject in editing stage" name="SendFooter Component Cancel Button has label changed to Reject in editing stage" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Reject Transactions Model" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:56" time="2.007" tests="2">
    <testcase classname="Reject Transactions Model hides modal when cancel button is clicked" name="Reject Transactions Model hides modal when cancel button is clicked" time="0.022">
    </testcase>
    <testcase classname="Reject Transactions Model onSubmit is called and hides modal when reject all clicked" name="Reject Transactions Model onSubmit is called and hides modal when reject all clicked" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="TokenOverview" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:56" time="2.15" tests="2">
    <testcase classname="TokenOverview TokenOverview should not show a modal when token passed in props is not an ERC721" name="TokenOverview TokenOverview should not show a modal when token passed in props is not an ERC721" time="0.036">
    </testcase>
    <testcase classname="TokenOverview TokenOverview should show ConvertTokenToNFT modal when token passed in props is an ERC721" name="TokenOverview TokenOverview should show ConvertTokenToNFT modal when token passed in props is an ERC721" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="SwapSuccessIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:58" time="1.223" tests="1">
    <testcase classname="SwapSuccessIcon renders the component" name="SwapSuccessIcon renders the component" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="MainQuoteSummary" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:58" time="1.158" tests="1">
    <testcase classname="MainQuoteSummary renders the component with initial props" name="MainQuoteSummary renders the component with initial props" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmApproveContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:57" time="2.472" tests="1">
    <testcase classname="ConfirmApproveContent Component should render Confirm approve page correctly" name="ConfirmApproveContent Component should render Confirm approve page correctly" time="0.112">
    </testcase>
  </testsuite>
  <testsuite name="End of Flow Screen" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:58" time="1.181" tests="2">
    <testcase classname="End of Flow Screen should render" name="End of Flow Screen should render" time="0.021">
    </testcase>
    <testcase classname="End of Flow Screen should navigate to the default route on click" name="End of Flow Screen should navigate to the default route on click" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="TransactionDetail" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:59" time="1.111" tests="2">
    <testcase classname="TransactionDetail should render edit link with text low if low gas estimates are selected" name="TransactionDetail should render edit link with text low if low gas estimates are selected" time="0.029">
    </testcase>
    <testcase classname="TransactionDetail should render edit link with text edit for legacy transactions" name="TransactionDetail should render edit link with text edit for legacy transactions" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="AddRecipient Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:58" time="2.069" tests="8">
    <testcase classname="AddRecipient Component render should render a component" name="AddRecipient Component render should render a component" time="0.005">
    </testcase>
    <testcase classname="AddRecipient Component render should render no content if there are no recents, transfers, and contacts" name="AddRecipient Component render should render no content if there are no recents, transfers, and contacts" time="0.004">
    </testcase>
    <testcase classname="AddRecipient Component render should render transfer" name="AddRecipient Component render should render transfer" time="0.005">
    </testcase>
    <testcase classname="AddRecipient Component render should render ContactList" name="AddRecipient Component render should render ContactList" time="0.001">
    </testcase>
    <testcase classname="AddRecipient Component render should render contacts" name="AddRecipient Component render should render contacts" time="0.002">
    </testcase>
    <testcase classname="AddRecipient Component render should render error when query has no results" name="AddRecipient Component render should render error when query has no results" time="0.012">
    </testcase>
    <testcase classname="AddRecipient Component render should render error when query has ens does not resolve" name="AddRecipient Component render should render error when query has ens does not resolve" time="0.003">
    </testcase>
    <testcase classname="AddRecipient Component render should render error when ens resolved but ens error exists" name="AddRecipient Component render should render error when ens resolved but ens error exists" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Ducks - Swaps" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:59" time="1.04" tests="24">
    <testcase classname="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are enabled and can use new API" name="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are enabled and can use new API" time="0.011">
    </testcase>
    <testcase classname="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled for API v2 and enabled for API v1" name="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled for API v2 and enabled for API v1" time="0.005">
    </testcase>
    <testcase classname="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled for API v1 and v2" name="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled for API v1 and v2" time="0.006">
    </testcase>
    <testcase classname="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled if the /featureFlags API call throws an error" name="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags checks that Swaps for ETH are disabled if the /featureFlags API call throws an error" time="0.004">
    </testcase>
    <testcase classname="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags only calls the API once and returns response from cache for the second call" name="Ducks - Swaps fetchSwapsLivenessAndFeatureFlags only calls the API once and returns response from cache for the second call" time="0.012">
    </testcase>
    <testcase classname="Ducks - Swaps getCustomSwapsGas returns &quot;customMaxGas&quot;" name="Ducks - Swaps getCustomSwapsGas returns &quot;customMaxGas&quot;" time="0.002">
    </testcase>
    <testcase classname="Ducks - Swaps getCustomMaxFeePerGas returns &quot;customMaxFeePerGas&quot;" name="Ducks - Swaps getCustomMaxFeePerGas returns &quot;customMaxFeePerGas&quot;" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getCustomMaxPriorityFeePerGas returns &quot;customMaxPriorityFeePerGas&quot;" name="Ducks - Swaps getCustomMaxPriorityFeePerGas returns &quot;customMaxPriorityFeePerGas&quot;" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSwapsFeatureIsLive returns true for &quot;swapsFeatureIsLive&quot;" name="Ducks - Swaps getSwapsFeatureIsLive returns true for &quot;swapsFeatureIsLive&quot;" time="0.002">
    </testcase>
    <testcase classname="Ducks - Swaps getSwapsFeatureIsLive returns false for &quot;swapsFeatureIsLive&quot;" name="Ducks - Swaps getSwapsFeatureIsLive returns false for &quot;swapsFeatureIsLive&quot;" time="0">
    </testcase>
    <testcase classname="Ducks - Swaps getUsedQuote returns selected quote" name="Ducks - Swaps getUsedQuote returns selected quote" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getUsedQuote returns best quote" name="Ducks - Swaps getUsedQuote returns best quote" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns true if feature flag is enabled, not a HW and is Ethereum network" name="Ducks - Swaps getSmartTransactionsEnabled returns true if feature flag is enabled, not a HW and is Ethereum network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is disabled, not a HW and is Ethereum network" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is disabled, not a HW and is Ethereum network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW, STX liveness is false and is Ethereum network" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW, STX liveness is false and is Ethereum network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, is a HW and is Ethereum network" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, is a HW and is Ethereum network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW and is Polygon network" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW and is Polygon network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW and is BSC network" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is enabled, not a HW and is BSC network" time="0">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns true if feature flag is enabled, not a HW and is Goerli network" name="Ducks - Swaps getSmartTransactionsEnabled returns true if feature flag is enabled, not a HW and is Goerli network" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is missing" name="Ducks - Swaps getSmartTransactionsEnabled returns false if feature flag is missing" time="0">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionsOptInStatus returns STX opt in status" name="Ducks - Swaps getSmartTransactionsOptInStatus returns STX opt in status" time="0">
    </testcase>
    <testcase classname="Ducks - Swaps getCurrentSmartTransactions returns current smart transactions" name="Ducks - Swaps getCurrentSmartTransactions returns current smart transactions" time="0">
    </testcase>
    <testcase classname="Ducks - Swaps getPendingSmartTransactions returns pending smart transactions" name="Ducks - Swaps getPendingSmartTransactions returns pending smart transactions" time="0.001">
    </testcase>
    <testcase classname="Ducks - Swaps getSmartTransactionFees returns unsigned transactions and estimates" name="Ducks - Swaps getSmartTransactionFees returns unsigned transactions and estimates" time="0">
    </testcase>
  </testsuite>
  <testsuite name="SmartTransactionStatus" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:59" time="1.103" tests="1">
    <testcase classname="SmartTransactionStatus renders the component with initial props" name="SmartTransactionStatus renders the component with initial props" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasFeeInputSubtext" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:58" time="2.242" tests="11">
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render the latest fee if given a fee" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render the latest fee if given a fee" time="0.022">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render the latest fee range if given a fee range" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render the latest fee range if given a fee range" time="0.006">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;up&quot; as the trend" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;up&quot; as the trend" time="0.006">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;down&quot; as the trend" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;down&quot; as the trend" time="0.005">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;level&quot; as the trend" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should render a fee trend arrow image if given &quot;level&quot; as the trend" time="0.004">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should not render a fee trend arrow image if given an invalid trend" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should not render a fee trend arrow image if given an invalid trend" time="0.003">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should not render a fee trend arrow image if given a nullish trend" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is non-nullish should not render a fee trend arrow image if given a nullish trend" time="0.003">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;latest&quot; is nullish should not render the container for the latest fee" name="AdvancedGasFeeInputSubtext when &quot;latest&quot; is nullish should not render the container for the latest fee" time="0.002">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;historical&quot; is not nullish should render the historical fee if given a fee" name="AdvancedGasFeeInputSubtext when &quot;historical&quot; is not nullish should render the historical fee if given a fee" time="0.007">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;historical&quot; is not nullish should render the historical fee range if given a fee range" name="AdvancedGasFeeInputSubtext when &quot;historical&quot; is not nullish should render the historical fee range if given a fee range" time="0.006">
    </testcase>
    <testcase classname="AdvancedGasFeeInputSubtext when &quot;historical&quot; is nullish should not render the container for the historical fee" name="AdvancedGasFeeInputSubtext when &quot;historical&quot; is nullish should not render the container for the historical fee" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TransactionActivityLog Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:00" time="1.072" tests="3">
    <testcase classname="TransactionActivityLog Component should render properly" name="TransactionActivityLog Component should render properly" time="0.019">
    </testcase>
    <testcase classname="TransactionActivityLog Component should render inline retry and cancel buttons for earliest pending transaction" name="TransactionActivityLog Component should render inline retry and cancel buttons for earliest pending transaction" time="0.004">
    </testcase>
    <testcase classname="TransactionActivityLog Component should not render inline retry and cancel buttons for newer pending transactions" name="TransactionActivityLog Component should not render inline retry and cancel buttons for newer pending transactions" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Identicon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:00" time="0.919" tests="3">
    <testcase classname="Identicon renders empty identicon with no props" name="Identicon renders empty identicon with no props" time="0.026">
    </testcase>
    <testcase classname="Identicon renders custom image and add className props" name="Identicon renders custom image and add className props" time="0.004">
    </testcase>
    <testcase classname="Identicon renders div with address prop" name="Identicon renders div with address prop" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="SuccessIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:00" time="1.091" tests="1">
    <testcase classname="SuccessIcon renders the SuccessIcon component" name="SuccessIcon renders the SuccessIcon component" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="SelectQuotePopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:00" time="1.275" tests="1">
    <testcase classname="SelectQuotePopover renders the component with initial props" name="SelectQuotePopover renders the component with initial props" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="UnknownIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:01" time="1.065" tests="1">
    <testcase classname="UnknownIcon renders the UnknownIcon component" name="UnknownIcon renders the UnknownIcon component" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="TimerIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:01" time="1.079" tests="1">
    <testcase classname="TimerIcon renders the TimerIcon component" name="TimerIcon renders the TimerIcon component" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="useMaxFeePerGasInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:01" time="1.195" tests="8">
    <testcase classname="useMaxFeePerGasInput returns maxFeePerGas values from transaction if transaction.userFeeLevel is custom" name="useMaxFeePerGasInput returns maxFeePerGas values from transaction if transaction.userFeeLevel is custom" time="0.013">
    </testcase>
    <testcase classname="useMaxFeePerGasInput returns gasPrice values from transaction if transaction.userFeeLevel is custom and maxFeePerGas is not provided" name="useMaxFeePerGasInput returns gasPrice values from transaction if transaction.userFeeLevel is custom and maxFeePerGas is not provided" time="0.001">
    </testcase>
    <testcase classname="useMaxFeePerGasInput does not returns maxFeePerGas values from transaction if transaction.userFeeLevel is not custom" name="useMaxFeePerGasInput does not returns maxFeePerGas values from transaction if transaction.userFeeLevel is not custom" time="0.003">
    </testcase>
    <testcase classname="useMaxFeePerGasInput if no maxFeePerGas is provided by user or in transaction it returns value from fee market estimate" name="useMaxFeePerGasInput if no maxFeePerGas is provided by user or in transaction it returns value from fee market estimate" time="0.003">
    </testcase>
    <testcase classname="useMaxFeePerGasInput maxFeePerGasFiat is maximum amount that the transaction can cost" name="useMaxFeePerGasInput maxFeePerGasFiat is maximum amount that the transaction can cost" time="0.002">
    </testcase>
    <testcase classname="useMaxFeePerGasInput does not  return fiat values if showFiat is false" name="useMaxFeePerGasInput does not  return fiat values if showFiat is false" time="0.001">
    </testcase>
    <testcase classname="useMaxFeePerGasInput returns 0 if EIP1559 is not supported and legacy gas estimates have been provided" name="useMaxFeePerGasInput returns 0 if EIP1559 is not supported and legacy gas estimates have been provided" time="0.002">
    </testcase>
    <testcase classname="useMaxFeePerGasInput returns maxFeePerGas set by user if setMaxFeePerGas is called" name="useMaxFeePerGasInput returns maxFeePerGas set by user if setMaxFeePerGas is called" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="MetaMask Reducers" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:02" time="1.029" tests="25">
    <testcase classname="MetaMask Reducers init state" name="MetaMask Reducers init state" time="0.001">
    </testcase>
    <testcase classname="MetaMask Reducers locks MetaMask" name="MetaMask Reducers locks MetaMask" time="0.001">
    </testcase>
    <testcase classname="MetaMask Reducers sets rpc target" name="MetaMask Reducers sets rpc target" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers sets provider type" name="MetaMask Reducers sets provider type" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers shows account detail" name="MetaMask Reducers shows account detail" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers sets account label" name="MetaMask Reducers sets account label" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers toggles account menu" name="MetaMask Reducers toggles account menu" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers updates value of tx by id" name="MetaMask Reducers updates value of tx by id" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers sets blockies" name="MetaMask Reducers sets blockies" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers updates an arbitrary feature flag" name="MetaMask Reducers updates an arbitrary feature flag" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers close welcome screen" name="MetaMask Reducers close welcome screen" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers sets current locale" name="MetaMask Reducers sets current locale" time="0.001">
    </testcase>
    <testcase classname="MetaMask Reducers sets pending tokens" name="MetaMask Reducers sets pending tokens" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers clears pending tokens" name="MetaMask Reducers clears pending tokens" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors getBlockGasLimit should return the current block gas limit" name="MetaMask Reducers metamask state selectors getBlockGasLimit should return the current block gas limit" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors getConversionRate() should return the eth conversion rate" name="MetaMask Reducers metamask state selectors getConversionRate() should return the eth conversion rate" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors getNativeCurrency() should return the ticker symbol of the selected network" name="MetaMask Reducers metamask state selectors getNativeCurrency() should return the ticker symbol of the selected network" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors getSendHexDataFeatureFlagState() should return the sendHexData feature flag state" name="MetaMask Reducers metamask state selectors getSendHexDataFeatureFlagState() should return the sendHexData feature flag state" time="0.001">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors getSendToAccounts() should return an array including all the users accounts and the address book" name="MetaMask Reducers metamask state selectors getSendToAccounts() should return an array including all the users accounts and the address book" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers metamask state selectors should return the unapproved txs" name="MetaMask Reducers metamask state selectors should return the unapproved txs" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers isNotEIP1559Network() should return true if network does not supports EIP-1559" name="MetaMask Reducers isNotEIP1559Network() should return true if network does not supports EIP-1559" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers isNotEIP1559Network() should return false if networkDetails.EIPS.1559 is not false" name="MetaMask Reducers isNotEIP1559Network() should return false if networkDetails.EIPS.1559 is not false" time="0.002">
    </testcase>
    <testcase classname="MetaMask Reducers getIsNetworkBusy should return true if state.metamask.gasFeeEstimates.networkCongestion is over the &quot;busy&quot; threshold" name="MetaMask Reducers getIsNetworkBusy should return true if state.metamask.gasFeeEstimates.networkCongestion is over the &quot;busy&quot; threshold" time="0.001">
    </testcase>
    <testcase classname="MetaMask Reducers getIsNetworkBusy should return true if state.metamask.gasFeeEstimates.networkCongestion is right at the &quot;busy&quot; threshold" name="MetaMask Reducers getIsNetworkBusy should return true if state.metamask.gasFeeEstimates.networkCongestion is right at the &quot;busy&quot; threshold" time="0">
    </testcase>
    <testcase classname="MetaMask Reducers getIsNetworkBusy should return false if state.metamask.gasFeeEstimates.networkCongestion is not over the &quot;busy&quot; threshold" name="MetaMask Reducers getIsNetworkBusy should return false if state.metamask.gasFeeEstimates.networkCongestion is not over the &quot;busy&quot; threshold" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TimerIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:02" time="1.064" tests="1">
    <testcase classname="TimerIcon renders the TimerIcon component" name="TimerIcon renders the TimerIcon component" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Restore vault Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:01" time="1.502" tests="1">
    <testcase classname="Restore vault Component clicks imports seed button" name="Restore vault Component clicks imports seed button" time="0.19">
    </testcase>
  </testsuite>
  <testsuite name="send-amount-row container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:02" time="1.079" tests="1">
    <testcase classname="send-amount-row container mapDispatchToProps() updateSendAmount() should dispatch an action" name="send-amount-row container mapDispatchToProps() updateSendAmount() should dispatch an action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AvatarToken" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:02" time="1.462" tests="5">
    <testcase classname="AvatarToken should render correctly" name="AvatarToken should render correctly" time="0.02">
    </testcase>
    <testcase classname="AvatarToken should render image Avatar" name="AvatarToken should render image Avatar" time="0.022">
    </testcase>
    <testcase classname="AvatarToken should render the first letter of the tokenName prop if no tokenImageUrl is provided" name="AvatarToken should render the first letter of the tokenName prop if no tokenImageUrl is provided" time="0.004">
    </testcase>
    <testcase classname="AvatarToken should render halo effect if showHalo is true and image url is there" name="AvatarToken should render halo effect if showHalo is true and image url is there" time="0.003">
    </testcase>
    <testcase classname="AvatarToken should render the first letter of the tokenName prop when showHalo is true and no image url is provided" name="AvatarToken should render the first letter of the tokenName prop when showHalo is true and no image url is provided" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="useGasEstimates" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:02" time="2.044" tests="7">
    <testcase classname="useGasEstimates EIP-1559 scenario uses new EIP-1559 gas fields to calculate minimum values" name="useGasEstimates EIP-1559 scenario uses new EIP-1559 gas fields to calculate minimum values" time="0.011">
    </testcase>
    <testcase classname="useGasEstimates EIP-1559 scenario uses new EIP-1559 gas fields to calculate maximum values" name="useGasEstimates EIP-1559 scenario uses new EIP-1559 gas fields to calculate maximum values" time="0.003">
    </testcase>
    <testcase classname="useGasEstimates EIP-1559 scenario does not  return fiat values if showFiat is false" name="useGasEstimates EIP-1559 scenario does not  return fiat values if showFiat is false" time="0.003">
    </testcase>
    <testcase classname="useGasEstimates EIP-1559 scenario uses gasFeeEstimates.estimatedBaseFee prop to calculate estimatedBaseFee" name="useGasEstimates EIP-1559 scenario uses gasFeeEstimates.estimatedBaseFee prop to calculate estimatedBaseFee" time="0.003">
    </testcase>
    <testcase classname="useGasEstimates legacy scenario uses legacy gas fields to calculate minimum values" name="useGasEstimates legacy scenario uses legacy gas fields to calculate minimum values" time="0.005">
    </testcase>
    <testcase classname="useGasEstimates legacy scenario uses legacy gas fields to calculate maximum values" name="useGasEstimates legacy scenario uses legacy gas fields to calculate maximum values" time="0.005">
    </testcase>
    <testcase classname="useGasEstimates legacy scenario estimatedBaseFee is undefined" name="useGasEstimates legacy scenario estimatedBaseFee is undefined" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Settings Tab" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:03" time="1.217" tests="6">
    <testcase classname="Settings Tab selects currency" name="Settings Tab selects currency" time="0.068">
    </testcase>
    <testcase classname="Settings Tab selects locale" name="Settings Tab selects locale" time="0.02">
    </testcase>
    <testcase classname="Settings Tab sets fiat primary currency" name="Settings Tab sets fiat primary currency" time="0.019">
    </testcase>
    <testcase classname="Settings Tab clicks jazzicon" name="Settings Tab clicks jazzicon" time="0.022">
    </testcase>
    <testcase classname="Settings Tab clicks blockies icon" name="Settings Tab clicks blockies icon" time="0.012">
    </testcase>
    <testcase classname="Settings Tab toggles hiding zero balance" name="Settings Tab toggles hiding zero balance" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Import Token" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:03" time="1.577" tests="7">
    <testcase classname="Import Token Import Token add custom token button is disabled when no fields are populated" name="Import Token Import Token add custom token button is disabled when no fields are populated" time="0.071">
    </testcase>
    <testcase classname="Import Token Import Token edits token address" name="Import Token Import Token edits token address" time="0.067">
    </testcase>
    <testcase classname="Import Token Import Token edits token symbol" name="Import Token Import Token edits token symbol" time="0.025">
    </testcase>
    <testcase classname="Import Token Import Token edits token decimal precision" name="Import Token Import Token edits token decimal precision" time="0.026">
    </testcase>
    <testcase classname="Import Token Import Token adds custom tokens successfully" name="Import Token Import Token adds custom tokens successfully" time="0.056">
    </testcase>
    <testcase classname="Import Token Import Token cancels out of import token flow" name="Import Token Import Token cancels out of import token flow" time="0.085">
    </testcase>
    <testcase classname="Import Token Import Token sets and error when a token is an NFT" name="Import Token Import Token sets and error when a token is an NFT" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Text" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:03" time="1.43" tests="10">
    <testcase classname="Text should render the Text without crashing" name="Text should render the Text without crashing" time="0.028">
    </testcase>
    <testcase classname="Text should render the Text with correct html elements" name="Text should render the Text with correct html elements" time="0.024">
    </testcase>
    <testcase classname="Text should render the Text with proper variant class name" name="Text should render the Text with proper variant class name" time="0.009">
    </testcase>
    <testcase classname="Text should render the Text with proper font weight class name" name="Text should render the Text with proper font weight class name" time="0.002">
    </testcase>
    <testcase classname="Text should render the Text with proper text color class name" name="Text should render the Text with proper text color class name" time="0.006">
    </testcase>
    <testcase classname="Text should render the Text with proper font style class name" name="Text should render the Text with proper font style class name" time="0.003">
    </testcase>
    <testcase classname="Text should render the Text with proper text align class name" name="Text should render the Text with proper text align class name" time="0.003">
    </testcase>
    <testcase classname="Text should render the Text with proper overflow wrap class name" name="Text should render the Text with proper overflow wrap class name" time="0.003">
    </testcase>
    <testcase classname="Text should render the Text with proper ellipsis class name" name="Text should render the Text with proper ellipsis class name" time="0.006">
    </testcase>
    <testcase classname="Text should render the Text with proper text transform class name" name="Text should render the Text with proper text transform class name" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="custom-gas selectors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:04" time="1.232" tests="16">
    <testcase classname="custom-gas selectors getCustomGasPrice() should return gas.customData.price" name="custom-gas selectors getCustomGasPrice() should return gas.customData.price" time="0.001">
    </testcase>
    <testcase classname="custom-gas selectors isCustomGasPriceSafe() should return true for gas.customData.price 0x77359400" name="custom-gas selectors isCustomGasPriceSafe() should return true for gas.customData.price 0x77359400" time="0.001">
    </testcase>
    <testcase classname="custom-gas selectors isCustomGasPriceSafe() should return true for gas.customData.price null" name="custom-gas selectors isCustomGasPriceSafe() should return true for gas.customData.price null" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomGasPriceSafe() should return true gas.customData.price undefined" name="custom-gas selectors isCustomGasPriceSafe() should return true gas.customData.price undefined" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomGasPriceSafe() should return false gas.basicEstimates.safeLow undefined" name="custom-gas selectors isCustomGasPriceSafe() should return false gas.basicEstimates.safeLow undefined" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false for gas.customData.price null" name="custom-gas selectors isCustomPriceExcessive() should return false for gas.customData.price null" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.fast undefined" name="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.fast undefined" time="0.001">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x205d0bae00 (139)" name="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x205d0bae00 (139)" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x1bf08eb000 (120)" name="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x1bf08eb000 (120)" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x28bed01600 (175)" name="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x28bed01600 (175)" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return true gas.basicEstimates.price 0x30e4f9b400 (210)" name="custom-gas selectors isCustomPriceExcessive() should return true gas.basicEstimates.price 0x30e4f9b400 (210)" time="0.001">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x28bed01600 (175) (checkSend=true)" name="custom-gas selectors isCustomPriceExcessive() should return false gas.basicEstimates.price 0x28bed01600 (175) (checkSend=true)" time="0">
    </testcase>
    <testcase classname="custom-gas selectors isCustomPriceExcessive() should return true gas.basicEstimates.price 0x30e4f9b400 (210) (checkSend=true)" name="custom-gas selectors isCustomPriceExcessive() should return true gas.basicEstimates.price 0x30e4f9b400 (210) (checkSend=true)" time="0">
    </testcase>
    <testcase classname="custom-gas selectors getCustomGasLimit() should return gas.customData.limit" name="custom-gas selectors getCustomGasLimit() should return gas.customData.limit" time="0">
    </testcase>
    <testcase classname="custom-gas selectors getRenderableBasicEstimateData() should return renderable data about basic estimates" name="custom-gas selectors getRenderableBasicEstimateData() should return renderable data about basic estimates" time="0.004">
    </testcase>
    <testcase classname="custom-gas selectors getRenderableEstimateDataForSmallButtonsFromGWEI() should return renderable data about basic estimates appropriate for buttons with less info" name="custom-gas selectors getRenderableEstimateDataForSmallButtonsFromGWEI() should return renderable data about basic estimates appropriate for buttons with less info" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Import Token Link" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:03" time="1.925" tests="4">
    <testcase classname="Import Token Link should match snapshot for rinkeby chainId" name="Import Token Link should match snapshot for rinkeby chainId" time="0.02">
    </testcase>
    <testcase classname="Import Token Link should match snapshot for mainnet chainId" name="Import Token Link should match snapshot for mainnet chainId" time="0.004">
    </testcase>
    <testcase classname="Import Token Link should detectNewTokens when clicking refresh" name="Import Token Link should detectNewTokens when clicking refresh" time="0.01">
    </testcase>
    <testcase classname="Import Token Link should push import token route" name="Import Token Link should push import token route" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="migration #37" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:04" time="1.232" tests="3">
    <testcase classname="migration #37 should update the version metadata" name="migration #37 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #37 should transform old state to new format" name="migration #37 should transform old state to new format" time="0.001">
    </testcase>
    <testcase classname="migration #37 ens validation test" name="migration #37 ens validation test" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Alert" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:05" time="0.753" tests="1">
    <testcase classname="Alert renders nothing with no visible boolean in state" name="Alert renders nothing with no visible boolean in state" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="DetectedTokenAggregators" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:05" time="1.275" tests="1">
    <testcase classname="DetectedTokenAggregators should render the detected token aggregators" name="DetectedTokenAggregators should render the detected token aggregators" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="selectors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:05" time="1.054" tests="5">
    <testcase classname="selectors getConnectedSubjectsForSelectedAddress should return the list of connected subjects when there is 1 connected account" name="selectors getConnectedSubjectsForSelectedAddress should return the list of connected subjects when there is 1 connected account" time="0.001">
    </testcase>
    <testcase classname="selectors getConnectedSubjectsForSelectedAddress should return the list of connected subjects when there are 2 connected accounts" name="selectors getConnectedSubjectsForSelectedAddress should return the list of connected subjects when there are 2 connected accounts" time="0.001">
    </testcase>
    <testcase classname="selectors getConnectedAccountsForActiveTab should return connected accounts sorted by last selected, then by keyring controller order" name="selectors getConnectedAccountsForActiveTab should return connected accounts sorted by last selected, then by keyring controller order" time="0">
    </testcase>
    <testcase classname="selectors getLastConnectedInfo retrieves the last connected info" name="selectors getLastConnectedInfo retrieves the last connected info" time="0.001">
    </testcase>
    <testcase classname="selectors getPermissionsForActiveTab should return a list of permissions strings" name="selectors getPermissionsForActiveTab should return a list of permissions strings" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Signature Request Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:05" time="1.633" tests="2">
    <testcase classname="Signature Request Component render should render a div message parsed" name="Signature Request Component render should render a div message parsed" time="0.017">
    </testcase>
    <testcase classname="Signature Request Component render should render a div message parsed without typeless data" name="Signature Request Component render should render a div message parsed without typeless data" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="add-recipient container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:06" time="1.119" tests="2">
    <testcase classname="add-recipient container mapStateToProps() should map the correct properties to props" name="add-recipient container mapStateToProps() should map the correct properties to props" time="0.001">
    </testcase>
    <testcase classname="add-recipient container mapDispatchToProps() updateRecipient() should dispatch an action" name="add-recipient container mapDispatchToProps() updateRecipient() should dispatch an action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Swap" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:04" time="2.932" tests="1">
    <testcase classname="Swap renders the component with initial props" name="Swap renders the component with initial props" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="Unconnected Account Alert" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:05" time="2.345" tests="3">
    <testcase classname="Unconnected Account Alert checks that checkbox is checked" name="Unconnected Account Alert checks that checkbox is checked" time="0.094">
    </testcase>
    <testcase classname="Unconnected Account Alert clicks dismiss button and calls dismissAlert action" name="Unconnected Account Alert clicks dismiss button and calls dismissAlert action" time="0.016">
    </testcase>
    <testcase classname="Unconnected Account Alert clicks Dont Show checkbox and dismiss to call disable alert request action" name="Unconnected Account Alert clicks Dont Show checkbox and dismiss to call disable alert request action" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Privacy Settings Onboarding View" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:06" time="1.096" tests="1">
    <testcase classname="Privacy Settings Onboarding View should update preferences" name="Privacy Settings Onboarding View should update preferences" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="TransactionBreakdown" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:06" time="1.159" tests="2">
    <testcase classname="TransactionBreakdown with a typical non-EIP-1559 transaction renders properly" name="TransactionBreakdown with a typical non-EIP-1559 transaction renders properly" time="0.037">
    </testcase>
    <testcase classname="TransactionBreakdown with a typical EIP-1559 transaction renders properly" name="TransactionBreakdown with a typical EIP-1559 transaction renders properly" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="FeeCard" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:06" time="1.102" tests="3">
    <testcase classname="FeeCard renders the component with initial props" name="FeeCard renders the component with initial props" time="0.047">
    </testcase>
    <testcase classname="FeeCard renders the component with EIP-1559 enabled" name="FeeCard renders the component with EIP-1559 enabled" time="0.016">
    </testcase>
    <testcase classname="FeeCard renders the component with smart transactions enabled and user opted in" name="FeeCard renders the component with smart transactions enabled and user opted in" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="AccountList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:07" time="1.23" tests="3">
    <testcase classname="AccountList renders AccountList component and shows New account text" name="AccountList renders AccountList component and shows New account text" time="0.055">
    </testcase>
    <testcase classname="AccountList renders AccountList component and shows Account 1 text" name="AccountList renders AccountList component and shows Account 1 text" time="0.007">
    </testcase>
    <testcase classname="AccountList renders AccountList component and shows ETH text" name="AccountList renders AccountList component and shows ETH text" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="useUserPreferencedCurrency" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:07" time="1.065" tests="14">
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is PRIMARY should return currency as ETH" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is PRIMARY should return currency as ETH" time="0.003">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is PRIMARY should return decimals as 8" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is PRIMARY should return decimals as 8" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as usd" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as usd" time="0.001">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is SECONDARY should return currency as not modified by user preferences" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is SECONDARY should return currency as not modified by user preferences" time="0.001">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is SECONDARY should return decimals as 4" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is true and type is SECONDARY should return decimals as 4" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is SECONDARY should return currency as ETH" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is SECONDARY should return currency as ETH" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is SECONDARY should return decimals as 3" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is SECONDARY should return decimals as 3" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is false, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as ETH" name="useUserPreferencedCurrency when showFiat is false, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as ETH" time="0.002">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is false, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 8" name="useUserPreferencedCurrency when showFiat is false, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 8" time="0">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as not modified by user preferences" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as not modified by user preferences" time="0.001">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" time="0.001">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as not modified by user preferences" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return currency as not modified by user preferences" time="0.001">
    </testcase>
    <testcase classname="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" name="useUserPreferencedCurrency when showFiat is true, useNativeCurrencyAsPrimary is false and type is PRIMARY should return decimals as 2" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Confusable component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:07" time="1.017" tests="4">
    <testcase classname="Confusable component should detect zero-width unicode" name="Confusable component should detect zero-width unicode" time="0.018">
    </testcase>
    <testcase classname="Confusable component should detect homoglyphic unicode points" name="Confusable component should detect homoglyphic unicode points" time="0.005">
    </testcase>
    <testcase classname="Confusable component should detect multiple homoglyphic unicode points" name="Confusable component should detect multiple homoglyphic unicode points" time="0.002">
    </testcase>
    <testcase classname="Confusable component should not detect emoji" name="Confusable component should not detect emoji" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Page Container Container Test" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:07" time="1.704" tests="9">
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render a confirm page container component" name="Confirm Page Container Container Test Render and simulate button clicks should render a confirm page container component" time="0.072">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render navigation" name="Confirm Page Container Container Test Render and simulate button clicks should render navigation" time="0.031">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render header" name="Confirm Page Container Container Test Render and simulate button clicks should render header" time="0.027">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render sender to recipient in header" name="Confirm Page Container Container Test Render and simulate button clicks should render sender to recipient in header" time="0.035">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render recipient as address" name="Confirm Page Container Container Test Render and simulate button clicks should render recipient as address" time="0.018">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should render add address to address book dialog" name="Confirm Page Container Container Test Render and simulate button clicks should render add address to address book dialog" time="0.032">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should simulate click reject button" name="Confirm Page Container Container Test Render and simulate button clicks should simulate click reject button" time="0.024">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Render and simulate button clicks should simulate click submit button" name="Confirm Page Container Container Test Render and simulate button clicks should simulate click submit button" time="0.023">
    </testcase>
    <testcase classname="Confirm Page Container Container Test Contact/AddressBook name should appear in recipient header should not show add to address dialog if recipient is in contact list and should display contact name" name="Confirm Page Container Container Test Contact/AddressBook name should appear in recipient header should not show add to address dialog if recipient is in contact list and should display contact name" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="UserPreferencedCurrencyInput container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:08" time="0.995" tests="1">
    <testcase classname="UserPreferencedCurrencyInput container mapStateToProps() should return the correct props" name="UserPreferencedCurrencyInput container mapStateToProps() should return the correct props" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="UserPreferencedTokenInput container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:08" time="1.921" tests="1">
    <testcase classname="UserPreferencedTokenInput container mapStateToProps() should return the correct props" name="UserPreferencedTokenInput container mapStateToProps() should return the correct props" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="util" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:09" time="0.924" tests="86">
    <testcase classname="util #parseBalance should render 0.01 eth correctly" name="util #parseBalance should render 0.01 eth correctly" time="0.002">
    </testcase>
    <testcase classname="util #parseBalance should render 12.023 eth correctly" name="util #parseBalance should render 12.023 eth correctly" time="0">
    </testcase>
    <testcase classname="util #parseBalance should render 0.0000000342422 eth correctly" name="util #parseBalance should render 0.0000000342422 eth correctly" time="0.001">
    </testcase>
    <testcase classname="util #parseBalance should render 0 eth correctly" name="util #parseBalance should render 0 eth correctly" time="0">
    </testcase>
    <testcase classname="util #addressSummary should add case-sensitive checksum" name="util #addressSummary should add case-sensitive checksum" time="0.002">
    </testcase>
    <testcase classname="util #addressSummary should accept arguments for firstseg, lastseg, and keepPrefix" name="util #addressSummary should accept arguments for firstseg, lastseg, and keepPrefix" time="0.001">
    </testcase>
    <testcase classname="util isValidDomainName should return true when given a valid domain name" name="util isValidDomainName should return true when given a valid domain name" time="0.004">
    </testcase>
    <testcase classname="util isValidDomainName should return true when given a valid subdomain" name="util isValidDomainName should return true when given a valid subdomain" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return true when given a single-character domain" name="util isValidDomainName should return true when given a single-character domain" time="0.001">
    </testcase>
    <testcase classname="util isValidDomainName should return true when given a unicode TLD" name="util isValidDomainName should return true when given a unicode TLD" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a domain with unacceptable ASCII characters" name="util isValidDomainName should return false when given a domain with unacceptable ASCII characters" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a TLD that starts with a dash" name="util isValidDomainName should return false when given a TLD that starts with a dash" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a TLD that ends with a dash" name="util isValidDomainName should return false when given a TLD that ends with a dash" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a domain name with a chunk that starts with a dash" name="util isValidDomainName should return false when given a domain name with a chunk that starts with a dash" time="0.001">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a domain name with a chunk that ends with a dash" name="util isValidDomainName should return false when given a domain name with a chunk that ends with a dash" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a bare TLD" name="util isValidDomainName should return false when given a bare TLD" time="0.001">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a domain that starts with a period" name="util isValidDomainName should return false when given a domain that starts with a period" time="0.001">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a subdomain that starts with a period" name="util isValidDomainName should return false when given a subdomain that starts with a period" time="0.002">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a domain that ends with a period" name="util isValidDomainName should return false when given a domain that ends with a period" time="0">
    </testcase>
    <testcase classname="util isValidDomainName should return false when given a 1-character TLD" name="util isValidDomainName should return false when given a 1-character TLD" time="0.003">
    </testcase>
    <testcase classname="util isOriginContractAddress should return true when the send address is the same as the selected tokens contract address" name="util isOriginContractAddress should return true when the send address is the same as the selected tokens contract address" time="0">
    </testcase>
    <testcase classname="util isOriginContractAddress should return true when the send address is the same as the selected tokens contract address, capitalized input" name="util isOriginContractAddress should return true when the send address is the same as the selected tokens contract address, capitalized input" time="0">
    </testcase>
    <testcase classname="util isOriginContractAddress should return false when the recipient address differs" name="util isOriginContractAddress should return false when the recipient address differs" time="0">
    </testcase>
    <testcase classname="util #numericBalance should return a BN 0 if given nothing" name="util #numericBalance should return a BN 0 if given nothing" time="0">
    </testcase>
    <testcase classname="util #numericBalance should work with hex prefix" name="util #numericBalance should work with hex prefix" time="0">
    </testcase>
    <testcase classname="util #numericBalance should work with no hex prefix" name="util #numericBalance should work with no hex prefix" time="0.001">
    </testcase>
    <testcase classname="util #formatBalance should return None when given nothing" name="util #formatBalance should return None when given nothing" time="0">
    </testcase>
    <testcase classname="util #formatBalance should return 1.0000 ETH" name="util #formatBalance should return 1.0000 ETH" time="0">
    </testcase>
    <testcase classname="util #formatBalance should return 0.500 ETH" name="util #formatBalance should return 0.500 ETH" time="0">
    </testcase>
    <testcase classname="util #formatBalance should display specified decimal points" name="util #formatBalance should display specified decimal points" time="0">
    </testcase>
    <testcase classname="util #formatBalance should default to 3 decimal points" name="util #formatBalance should default to 3 decimal points" time="0">
    </testcase>
    <testcase classname="util #formatBalance should show 2 significant digits for tiny balances" name="util #formatBalance should show 2 significant digits for tiny balances" time="0">
    </testcase>
    <testcase classname="util #formatBalance should not parse the balance and return value with 2 decimal points with ETH at the end" name="util #formatBalance should not parse the balance and return value with 2 decimal points with ETH at the end" time="0">
    </testcase>
    <testcase classname="util normalizing values #getRandomFileName should only return a string containing alphanumeric characters" name="util normalizing values #getRandomFileName should only return a string containing alphanumeric characters" time="0">
    </testcase>
    <testcase classname="util normalizing values #getRandomFileName should return a string that is between 6 and 12 characters in length" name="util normalizing values #getRandomFileName should return a string that is between 6 and 12 characters in length" time="0.007">
    </testcase>
    <testcase classname="util checkExistingAddresses should return true when a lowercase address matches an uppercase address in the passed list" name="util checkExistingAddresses should return true when a lowercase address matches an uppercase address in the passed list" time="0">
    </testcase>
    <testcase classname="util checkExistingAddresses should return true when an uppercase address matches a lowercase address in the passed list" name="util checkExistingAddresses should return true when an uppercase address matches a lowercase address in the passed list" time="0">
    </testcase>
    <testcase classname="util checkExistingAddresses should return true when a lowercase address matches a lowercase address in the passed list" name="util checkExistingAddresses should return true when a lowercase address matches a lowercase address in the passed list" time="0">
    </testcase>
    <testcase classname="util checkExistingAddresses should return true when an uppercase address matches an uppercase address in the passed list" name="util checkExistingAddresses should return true when an uppercase address matches an uppercase address in the passed list" time="0">
    </testcase>
    <testcase classname="util checkExistingAddresses should return false when the passed address is not in the passed list" name="util checkExistingAddresses should return false when the passed address is not in the passed list" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0 and precision 9" time="0.001">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0.0 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0.0 and precision 9" time="0.001">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0.000000000000 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 0 when passed number 0.000000000000 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1 and precision undefined" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1 and precision undefined" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.0 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.0 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.000000000 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.000000000 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 000000001 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 000000001 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 000000001.0 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 000000001.0 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 100000000 when passed number 100000000 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 100000000 when passed number 100000000 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 100000000 when passed number 100000000.00001 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 100000000 when passed number 100000000.00001 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.00001 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.00001 and precision 9" time="0.001">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.00001000 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.00001000 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.000010001 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 100.00001 when passed number 100.000010001 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 10.010101 when passed number 10.010101 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 10.010101 when passed number 10.010101 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.1 when passed number 0.1 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.1 when passed number 0.1 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.1 when passed number 0.10 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.1 when passed number 0.10 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.101 when passed number 0.1010 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.101 when passed number 0.1010 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.01001 when passed number 0.01001 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.01001 when passed number 0.01001 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.01001 when passed number 0.010010 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.01001 when passed number 0.010010 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.010011 when passed number 0.010011 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 0.010011 when passed number 0.010011 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.0101 when passed number 1.01005 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 1.0101 when passed number 1.01005 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.000049 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 1 when passed number 1.000049 and precision 5" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.0001 when passed number 1.00005 and precision 5" name="util toPrecisionWithoutTrailingZeros should return 1.0001 when passed number 1.00005 and precision 5" time="0.001">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 0.0000123456789 when passed number 0.0000123456789 and precision 9" name="util toPrecisionWithoutTrailingZeros should return 0.0000123456789 when passed number 0.0000123456789 and precision 9" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.000012346 when passed number 1.0000123456789 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1.000012346 when passed number 1.0000123456789 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 10000 when passed number 10000.0000012345679 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 10000 when passed number 10000.0000012345679 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1e+12 when passed number 1000000000000 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1e+12 when passed number 1000000000000 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.00005e+12 when passed number 1000050000000 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1.00005e+12 when passed number 1000050000000 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1e+20 when passed number 100000000000000000000 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1e+20 when passed number 100000000000000000000 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.00005e+20 when passed number 100005000000000000000 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1.00005e+20 when passed number 100005000000000000000 and precision 10" time="0">
    </testcase>
    <testcase classname="util toPrecisionWithoutTrailingZeros should return 1.00005e+20 when passed number 100005000000000000000.0 and precision 10" name="util toPrecisionWithoutTrailingZeros should return 1.00005e+20 when passed number 100005000000000000000.0 and precision 10" time="0">
    </testcase>
    <testcase classname="util addHexPrefixToObjectValues() should return a new object with the same properties with a 0x prefix" name="util addHexPrefixToObjectValues() should return a new object with the same properties with a 0x prefix" time="0.001">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return empty string if milliseconds passed is undefined" name="util toHumanReadableTime() should return empty string if milliseconds passed is undefined" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return rounded value for time" name="util toHumanReadableTime() should return rounded value for time" time="0.001">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in seconds for milliseconds passed is &lt; 9000" name="util toHumanReadableTime() should return value in seconds for milliseconds passed is &lt; 9000" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in seconds for milliseconds passed is &gt; 6000 and &lt;= 9000" name="util toHumanReadableTime() should return value in seconds for milliseconds passed is &gt; 6000 and &lt;= 9000" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in minutes for milliseconds passed is &gt; 90000" name="util toHumanReadableTime() should return value in minutes for milliseconds passed is &gt; 90000" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in minutes for milliseconds passed is &gt; 90000 and &lt;= 5400000" name="util toHumanReadableTime() should return value in minutes for milliseconds passed is &gt; 90000 and &lt;= 5400000" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in hours for milliseconds passed is &gt; 5400000" name="util toHumanReadableTime() should return value in hours for milliseconds passed is &gt; 5400000" time="0">
    </testcase>
    <testcase classname="util toHumanReadableTime() should return value in hours for milliseconds passed very high above 5400000" name="util toHumanReadableTime() should return value in hours for milliseconds passed very high above 5400000" time="0">
    </testcase>
    <testcase classname="util sanitizeMessage should throw an error if types is undefined" name="util sanitizeMessage should throw an error if types is undefined" time="0.02">
    </testcase>
    <testcase classname="util sanitizeMessage should throw an error if base type is not defined" name="util sanitizeMessage should throw an error if base type is not defined" time="0">
    </testcase>
    <testcase classname="util sanitizeMessage should return parsed message if types is defined" name="util sanitizeMessage should return parsed message if types is defined" time="0.018">
    </testcase>
    <testcase classname="util sanitizeMessage should return ignore message data with unknown types" name="util sanitizeMessage should return ignore message data with unknown types" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmAddSuggestedToken Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:08" time="2.328" tests="6">
    <testcase classname="ConfirmAddSuggestedToken Component should render" name="ConfirmAddSuggestedToken Component should render" time="0.075">
    </testcase>
    <testcase classname="ConfirmAddSuggestedToken Component should render the list of suggested tokens" name="ConfirmAddSuggestedToken Component should render the list of suggested tokens" time="0.035">
    </testcase>
    <testcase classname="ConfirmAddSuggestedToken Component should dispatch acceptWatchAsset when clicking the &quot;Add token&quot; button" name="ConfirmAddSuggestedToken Component should dispatch acceptWatchAsset when clicking the &quot;Add token&quot; button" time="0.056">
    </testcase>
    <testcase classname="ConfirmAddSuggestedToken Component should dispatch rejectWatchAsset when clicking the &quot;Cancel&quot; button" name="ConfirmAddSuggestedToken Component should dispatch rejectWatchAsset when clicking the &quot;Cancel&quot; button" time="0.011">
    </testcase>
    <testcase classname="ConfirmAddSuggestedToken Component when the suggested token address matches an existing token address should show &quot;already listed&quot; warning" name="ConfirmAddSuggestedToken Component when the suggested token address matches an existing token address should show &quot;already listed&quot; warning" time="0.026">
    </testcase>
    <testcase classname="ConfirmAddSuggestedToken Component when the suggested token symbol matches an existing token symbol and has a different address should show &quot;reuses a symbol&quot; warning" name="ConfirmAddSuggestedToken Component when the suggested token symbol matches an existing token symbol and has a different address should show &quot;reuses a symbol&quot; warning" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ErrorMessage Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:10" time="0.743" tests="2">
    <testcase classname="ErrorMessage Component should render a message from props.errorMessage" name="ErrorMessage Component should render a message from props.errorMessage" time="0.008">
    </testcase>
    <testcase classname="ErrorMessage Component should render a message translated from props.errorKey" name="ErrorMessage Component should render a message translated from props.errorKey" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Page Container Content" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:09" time="1.18" tests="4">
    <testcase classname="Confirm Page Container Content render ConfirmPageContainer component with another error" name="Confirm Page Container Content render ConfirmPageContainer component with another error" time="0.048">
    </testcase>
    <testcase classname="Confirm Page Container Content render ConfirmPageContainer component with no errors" name="Confirm Page Container Content render ConfirmPageContainer component with no errors" time="0.007">
    </testcase>
    <testcase classname="Confirm Page Container Content render contract address name from addressBook in title for contract" name="Confirm Page Container Content render contract address name from addressBook in title for contract" time="0.024">
    </testcase>
    <testcase classname="Confirm Page Container Content render simple title without address name for simple send" name="Confirm Page Container Content render simple title without address name for simple send" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="useTokenData" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:09" time="1.678" tests="4">
    <testcase classname="useTokenData should return properly decoded data with _value 15000" name="useTokenData should return properly decoded data with _value 15000" time="0.018">
    </testcase>
    <testcase classname="useTokenData should return properly decoded data with _value 25000" name="useTokenData should return properly decoded data with _value 25000" time="0.003">
    </testcase>
    <testcase classname="useTokenData should return properly decoded data with _value 10000" name="useTokenData should return properly decoded data with _value 10000" time="0.002">
    </testcase>
    <testcase classname="useTokenData should return null when no data provided" name="useTokenData should return null when no data provided" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="UserPreferencedCurrencyInput Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:10" time="0.997" tests="2">
    <testcase classname="UserPreferencedCurrencyInput Component rendering should render properly" name="UserPreferencedCurrencyInput Component rendering should render properly" time="0.008">
    </testcase>
    <testcase classname="UserPreferencedCurrencyInput Component rendering should render showFiat for TokenInput based on preferences.useNativeCurrencyAsPrimaryCurrency" name="UserPreferencedCurrencyInput Component rendering should render showFiat for TokenInput based on preferences.useNativeCurrencyAsPrimaryCurrency" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="TokenDetailsPage" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:09" time="2.293" tests="14">
    <testcase classname="TokenDetailsPage should render title &quot;Token details&quot; in token details page" name="TokenDetailsPage should render title &quot;Token details&quot; in token details page" time="0.058">
    </testcase>
    <testcase classname="TokenDetailsPage should close token details page when close button is clicked" name="TokenDetailsPage should close token details page when close button is clicked" time="0.012">
    </testcase>
    <testcase classname="TokenDetailsPage should render an icon image" name="TokenDetailsPage should render an icon image" time="0.001">
    </testcase>
    <testcase classname="TokenDetailsPage should render token contract address title in token details page" name="TokenDetailsPage should render token contract address title in token details page" time="0.009">
    </testcase>
    <testcase classname="TokenDetailsPage should render token contract address in token details page" name="TokenDetailsPage should render token contract address in token details page" time="0.012">
    </testcase>
    <testcase classname="TokenDetailsPage should call copy button when click is simulated" name="TokenDetailsPage should call copy button when click is simulated" time="0.029">
    </testcase>
    <testcase classname="TokenDetailsPage should render token decimal title in token details page" name="TokenDetailsPage should render token decimal title in token details page" time="0.017">
    </testcase>
    <testcase classname="TokenDetailsPage should render number of token decimals in token details page" name="TokenDetailsPage should render number of token decimals in token details page" time="0.01">
    </testcase>
    <testcase classname="TokenDetailsPage should render current network title in token details page" name="TokenDetailsPage should render current network title in token details page" time="0.011">
    </testcase>
    <testcase classname="TokenDetailsPage should render current network in token details page" name="TokenDetailsPage should render current network in token details page" time="0.014">
    </testcase>
    <testcase classname="TokenDetailsPage should render token list title in token details page" name="TokenDetailsPage should render token list title in token details page" time="0.016">
    </testcase>
    <testcase classname="TokenDetailsPage should render token list for the token in token details page" name="TokenDetailsPage should render token list for the token in token details page" time="0.007">
    </testcase>
    <testcase classname="TokenDetailsPage should call hide token button when button is clicked in token details page" name="TokenDetailsPage should call hide token button when button is clicked in token details page" time="0.024">
    </testcase>
    <testcase classname="TokenDetailsPage should render label of hide token button in token details page" name="TokenDetailsPage should render label of hide token button in token details page" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="UserPreferencedCurrencyInput Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:10" time="1.11" tests="2">
    <testcase classname="UserPreferencedCurrencyInput Component rendering should render properly" name="UserPreferencedCurrencyInput Component rendering should render properly" time="0.009">
    </testcase>
    <testcase classname="UserPreferencedCurrencyInput Component rendering should render featureSecondary for CurrencyInput based on preferences.useNativeCurrencyAsPrimaryCurrency" name="UserPreferencedCurrencyInput Component rendering should render featureSecondary for CurrencyInput based on preferences.useNativeCurrencyAsPrimaryCurrency" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="EndowmentPermissions" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:10" time="1.337" tests="2">
    <testcase classname="EndowmentPermissions has the expected permission keys" name="EndowmentPermissions has the expected permission keys" time="0.001">
    </testcase>
    <testcase classname="RestrictedMethods has the expected permission keys" name="RestrictedMethods has the expected permission keys" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Unlock Page Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:11" time="1.552" tests="1">
    <testcase classname="Unlock Page Component clicks imports seed button" name="Unlock Page Component clicks imports seed button" time="0.092">
    </testcase>
  </testsuite>
  <testsuite name="WhatsNewPopup" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:11" time="1.279" tests="2">
    <testcase classname="WhatsNewPopup renders WhatsNewPopup component and shows What&apos;s new text" name="WhatsNewPopup renders WhatsNewPopup component and shows What&apos;s new text" time="0.034">
    </testcase>
    <testcase classname="WhatsNewPopup renders WhatsNewPopup component and shows close button" name="WhatsNewPopup renders WhatsNewPopup component and shows close button" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="AppLoadingSpinner" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:11" time="1.171" tests="2">
    <testcase classname="AppLoadingSpinner should return null if app state is not loading" name="AppLoadingSpinner should return null if app state is not loading" time="0.015">
    </testcase>
    <testcase classname="AppLoadingSpinner should show spinner if app state is loading" name="AppLoadingSpinner should show spinner if app state is loading" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="AccountMismatchWarning" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:11" time="2.068" tests="2">
    <testcase classname="AccountMismatchWarning renders nothing when the addresses match" name="AccountMismatchWarning renders nothing when the addresses match" time="0.012">
    </testcase>
    <testcase classname="AccountMismatchWarning renders a warning info icon when addresses do not match" name="AccountMismatchWarning renders a warning info icon when addresses do not match" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="NetworksTabSubheader Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:12" time="1.142" tests="2">
    <testcase classname="NetworksTabSubheader Component should render network subheader correctly" name="NetworksTabSubheader Component should render network subheader correctly" time="0.048">
    </testcase>
    <testcase classname="NetworksTabSubheader Component should render add network form subheader correctly" name="NetworksTabSubheader Component should render add network form subheader correctly" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="DetectedTokenValues" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:12" time="1.083" tests="1">
    <testcase classname="DetectedTokenValues should render the detected token address" name="DetectedTokenValues should render the detected token address" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="DropdownSearchList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:12" time="1.231" tests="1">
    <testcase classname="DropdownSearchList renders the component with initial props" name="DropdownSearchList renders the component with initial props" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="GasPriceButtonGroup Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:12" time="1.05" tests="14">
    <testcase classname="GasPriceButtonGroup Component render should render a ButtonGroup" name="GasPriceButtonGroup Component render should render a ButtonGroup" time="0.005">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component render should render the correct props on the ButtonGroup" name="GasPriceButtonGroup Component render should render the correct props on the ButtonGroup" time="0.003">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component render should call this.renderButton 3 times, with the correct args" name="GasPriceButtonGroup Component render should call this.renderButton 3 times, with the correct args" time="0.002">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component render should show loading if buttonDataLoading" name="GasPriceButtonGroup Component render should show loading if buttonDataLoading" time="0.002">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButton should render a button" name="GasPriceButtonGroup Component renderButton should render a button" time="0.003">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButton should call the correct method when clicked" name="GasPriceButtonGroup Component renderButton should call the correct method when clicked" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButton should call this.renderButtonContent with the correct args" name="GasPriceButtonGroup Component renderButton should call this.renderButtonContent with the correct args" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render a label if passed a gasEstimateType" name="GasPriceButtonGroup Component renderButtonContent should render a label if passed a gasEstimateType" time="0.003">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render a feeInPrimaryCurrency if passed a feeInPrimaryCurrency" name="GasPriceButtonGroup Component renderButtonContent should render a feeInPrimaryCurrency if passed a feeInPrimaryCurrency" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render a feeInSecondaryCurrency if passed a feeInSecondaryCurrency" name="GasPriceButtonGroup Component renderButtonContent should render a feeInSecondaryCurrency if passed a feeInSecondaryCurrency" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render a timeEstimate if passed a timeEstimate" name="GasPriceButtonGroup Component renderButtonContent should render a timeEstimate if passed a timeEstimate" time="0.002">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render a check if showCheck is true" name="GasPriceButtonGroup Component renderButtonContent should render a check if showCheck is true" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render all elements if all args passed" name="GasPriceButtonGroup Component renderButtonContent should render all elements if all args passed" time="0.001">
    </testcase>
    <testcase classname="GasPriceButtonGroup Component renderButtonContent should render no elements if all args passed" name="GasPriceButtonGroup Component renderButtonContent should render no elements if all args passed" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="NetworksList Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:11" time="2.269" tests="1">
    <testcase classname="NetworksList Component should render a list of networks correctly" name="NetworksList Component should render a list of networks correctly" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="EditGasToolTip" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:13" time="1.272" tests="3">
    <testcase classname="EditGasToolTip should render correct values for priorityLevel low" name="EditGasToolTip should render correct values for priorityLevel low" time="0.062">
    </testcase>
    <testcase classname="EditGasToolTip should render correct values for priorityLevel medium" name="EditGasToolTip should render correct values for priorityLevel medium" time="0.006">
    </testcase>
    <testcase classname="EditGasToolTip should render correct values for priorityLevel high" name="EditGasToolTip should render correct values for priorityLevel high" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="CurrencyDisplay Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:13" time="1.059" tests="2">
    <testcase classname="CurrencyDisplay Component should render text with a className" name="CurrencyDisplay Component should render text with a className" time="0.005">
    </testcase>
    <testcase classname="CurrencyDisplay Component should render text with a prefix" name="CurrencyDisplay Component should render text with a prefix" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AwaitingSignatures" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:13" time="1.026" tests="1">
    <testcase classname="AwaitingSignatures renders the component with initial props for 1 confirmation" name="AwaitingSignatures renders the component with initial props for 1 confirmation" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="EditGasFeeButton" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:14" time="1.308" tests="10">
    <testcase classname="EditGasFeeButton should render edit link with text low if low gas estimates are selected" name="EditGasFeeButton should render edit link with text low if low gas estimates are selected" time="0.023">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text market if medium gas estimates are selected" name="EditGasFeeButton should render edit link with text market if medium gas estimates are selected" time="0.005">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text aggressive if high gas estimates are selected" name="EditGasFeeButton should render edit link with text aggressive if high gas estimates are selected" time="0.006">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text 10% increase if tenPercentIncreased gas estimates are selected" name="EditGasFeeButton should render edit link with text 10% increase if tenPercentIncreased gas estimates are selected" time="0.005">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text Site suggested if site suggested estimated are used" name="EditGasFeeButton should render edit link with text Site suggested if site suggested estimated are used" time="0.017">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text swap suggested if high gas estimates are selected for swaps" name="EditGasFeeButton should render edit link with text swap suggested if high gas estimates are selected for swaps" time="0.004">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link with text advance if custom gas estimates are used" name="EditGasFeeButton should render edit link with text advance if custom gas estimates are used" time="0.005">
    </testcase>
    <testcase classname="EditGasFeeButton should not render edit link if transaction has simulation error and prop userAcknowledgedGasMissing is false" name="EditGasFeeButton should not render edit link if transaction has simulation error and prop userAcknowledgedGasMissing is false" time="0.007">
    </testcase>
    <testcase classname="EditGasFeeButton should render edit link if userAcknowledgedGasMissing is true even if transaction has simulation error" name="EditGasFeeButton should render edit link if userAcknowledgedGasMissing is true even if transaction has simulation error" time="0.022">
    </testcase>
    <testcase classname="EditGasFeeButton should render null for legacy transactions" name="EditGasFeeButton should render null for legacy transactions" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully and the txParams.from are lowercase" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:14" time="1.495" tests="2">
    <testcase classname="storage is migrated successfully and the txParams.from are lowercase should lowercase the from for unapproved txs" name="storage is migrated successfully and the txParams.from are lowercase should lowercase the from for unapproved txs" time="0.002">
    </testcase>
    <testcase classname="storage is migrated successfully and the txParams.from are lowercase should migrate first time state" name="storage is migrated successfully and the txParams.from are lowercase should migrate first time state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ViewOnBlockExplorer" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:14" time="1.101" tests="1">
    <testcase classname="ViewOnBlockExplorer renders the component with initial props" name="ViewOnBlockExplorer renders the component with initial props" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="DetectedToken" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:13" time="2.205" tests="1">
    <testcase classname="DetectedToken should render the detected token found page" name="DetectedToken should render the detected token found page" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="SignatureRequestOriginal" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:15" time="1.135" tests="1">
    <testcase classname="SignatureRequestOriginal should match snapshot" name="SignatureRequestOriginal should match snapshot" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="send-footer container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:15" time="1.61" tests="4">
    <testcase classname="send-footer container mapDispatchToProps() resetSendState() should dispatch an action" name="send-footer container mapDispatchToProps() resetSendState() should dispatch an action" time="0.001">
    </testcase>
    <testcase classname="send-footer container mapDispatchToProps() cancelTx() should dispatch an action" name="send-footer container mapDispatchToProps() cancelTx() should dispatch an action" time="0.001">
    </testcase>
    <testcase classname="send-footer container mapDispatchToProps() sign() should dispatch a signTransaction action" name="send-footer container mapDispatchToProps() sign() should dispatch a signTransaction action" time="0.001">
    </testcase>
    <testcase classname="send-footer container mapDispatchToProps() addToAddressBookIfNew() should dispatch an action" name="send-footer container mapDispatchToProps() addToAddressBookIfNew() should dispatch an action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Reset Account" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:15" time="1.369" tests="2">
    <testcase classname="Confirm Reset Account hides modal when nevermind button is clicked" name="Confirm Reset Account hides modal when nevermind button is clicked" time="0.032">
    </testcase>
    <testcase classname="Confirm Reset Account resets account and hides modal when reset button is clicked" name="Confirm Reset Account resets account and hides modal when reset button is clicked" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SearchableItemList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:15" time="1.361" tests="1">
    <testcase classname="SearchableItemList renders the component with initial props" name="SearchableItemList renders the component with initial props" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="SnapSettingsCard" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:16" time="1.255" tests="9">
    <testcase classname="SnapSettingsCard should render the SnapsSettingCard without crashing" name="SnapSettingsCard should render the SnapsSettingCard without crashing" time="0.03">
    </testcase>
    <testcase classname="SnapSettingsCard should render the pill as installing when given a status of installing" name="SnapSettingsCard should render the pill as installing when given a status of installing" time="0.021">
    </testcase>
    <testcase classname="SnapSettingsCard should render the pill as running when given a status of running" name="SnapSettingsCard should render the pill as running when given a status of running" time="0.022">
    </testcase>
    <testcase classname="SnapSettingsCard should render the pill as installing when given a status of stopped" name="SnapSettingsCard should render the pill as installing when given a status of stopped" time="0.008">
    </testcase>
    <testcase classname="SnapSettingsCard should render the pill as crashed when given a status of crashed" name="SnapSettingsCard should render the pill as crashed when given a status of crashed" time="0.009">
    </testcase>
    <testcase classname="SnapSettingsCard should call onToggle prop when toggle button is clicked" name="SnapSettingsCard should call onToggle prop when toggle button is clicked" time="0.011">
    </testcase>
    <testcase classname="SnapSettingsCard should call onClick prop when See Details button is clicked" name="SnapSettingsCard should call onClick prop when See Details button is clicked" time="0.011">
    </testcase>
    <testcase classname="SnapSettingsCard should render an icon image" name="SnapSettingsCard should render an icon image" time="0.007">
    </testcase>
    <testcase classname="SnapSettingsCard should render the icon fallback using the first letter of the name" name="SnapSettingsCard should render the icon fallback using the first letter of the name" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="NicknamePopover" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:15" time="2.069" tests="2">
    <testcase classname="NicknamePopover renders NicknamePopover component and shows Add a nickname text" name="NicknamePopover renders NicknamePopover component and shows Add a nickname text" time="0.059">
    </testcase>
    <testcase classname="NicknamePopover renders NicknamePopover component and shows Edit nickname text" name="NicknamePopover renders NicknamePopover component and shows Edit nickname text" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="CreateNewVault" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:16" time="1.301" tests="2">
    <testcase classname="CreateNewVault renders CreateNewVault component and shows Secret Recovery Phrase text" name="CreateNewVault renders CreateNewVault component and shows Secret Recovery Phrase text" time="0.074">
    </testcase>
    <testcase classname="CreateNewVault renders CreateNewVault component and shows You can paste... text" name="CreateNewVault renders CreateNewVault component and shows You can paste... text" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Reveal Secret Recovery Phrase" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:17" time="1.157" tests="2">
    <testcase classname="Reveal Secret Recovery Phrase secret recovery phrase" name="Reveal Secret Recovery Phrase secret recovery phrase" time="0.022">
    </testcase>
    <testcase classname="Reveal Secret Recovery Phrase clicks to reveal" name="Reveal Secret Recovery Phrase clicks to reveal" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="AddNetwork" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:16" time="1.534" tests="3">
    <testcase classname="AddNetwork should show Add from a list.. text" name="AddNetwork should show Add from a list.. text" time="0.049">
    </testcase>
    <testcase classname="AddNetwork should show Popular custom networks text" name="AddNetwork should show Popular custom networks text" time="0.019">
    </testcase>
    <testcase classname="AddNetwork should show Arbitrum One network nickname" name="AddNetwork should show Arbitrum One network nickname" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="SlippageButtons" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:17" time="1.1" tests="2">
    <testcase classname="SlippageButtons renders the component with initial props" name="SlippageButtons renders the component with initial props" time="0.042">
    </testcase>
    <testcase classname="SlippageButtons renders the component with the smart transaction opt-in button available" name="SlippageButtons renders the component with the smart transaction opt-in button available" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="PriorityfeeInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:17" time="1.347" tests="7">
    <testcase classname="PriorityfeeInput should renders advancedGasFee.priorityfee value if current estimate used is not custom" name="PriorityfeeInput should renders advancedGasFee.priorityfee value if current estimate used is not custom" time="0.046">
    </testcase>
    <testcase classname="PriorityfeeInput should not use advancedGasFee.priorityfee value for swaps" name="PriorityfeeInput should not use advancedGasFee.priorityfee value for swaps" time="0.011">
    </testcase>
    <testcase classname="PriorityfeeInput should renders priorityfee value from transaction if current estimate used is custom" name="PriorityfeeInput should renders priorityfee value from transaction if current estimate used is custom" time="0.015">
    </testcase>
    <testcase classname="PriorityfeeInput should show current priority fee range in subtext" name="PriorityfeeInput should show current priority fee range in subtext" time="0.028">
    </testcase>
    <testcase classname="PriorityfeeInput should show current value of priority fee in users primary currency in right side of input box" name="PriorityfeeInput should show current value of priority fee in users primary currency in right side of input box" time="0.014">
    </testcase>
    <testcase classname="PriorityfeeInput should show 12hr range value in subtext" name="PriorityfeeInput should show 12hr range value in subtext" time="0.03">
    </testcase>
    <testcase classname="PriorityfeeInput should show error if value entered is 0" name="PriorityfeeInput should show error if value entered is 0" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="UserPreferencedCurrencyDisplay Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:18" time="1.226" tests="2">
    <testcase classname="UserPreferencedCurrencyDisplay Component rendering should render properly" name="UserPreferencedCurrencyDisplay Component rendering should render properly" time="0.01">
    </testcase>
    <testcase classname="UserPreferencedCurrencyDisplay Component rendering should pass all props to the CurrencyDisplay child component" name="UserPreferencedCurrencyDisplay Component rendering should pass all props to the CurrencyDisplay child component" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Account Details Modal" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:18" time="1.16" tests="4">
    <testcase classname="Account Details Modal sets account label when changing default account label" name="Account Details Modal sets account label when changing default account label" time="0.01">
    </testcase>
    <testcase classname="Account Details Modal opens new tab when view block explorer is clicked" name="Account Details Modal opens new tab when view block explorer is clicked" time="0.002">
    </testcase>
    <testcase classname="Account Details Modal shows export private key modal when clicked" name="Account Details Modal shows export private key modal when clicked" time="0.001">
    </testcase>
    <testcase classname="Account Details Modal sets blockexplorerview text when block explorer url in rpcPrefs exists" name="Account Details Modal sets blockexplorerview text when block explorer url in rpcPrefs exists" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Settings Search Utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:18" time="1.488" tests="10">
    <testcase classname="Settings Search Utils settingsRoutes should be an array of settings routes objects" name="Settings Search Utils settingsRoutes should be an array of settings routes objects" time="0.001">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good general section number" name="Settings Search Utils getNumberOfSettingsInSection should get good general section number" time="0.001">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good advanced section number" name="Settings Search Utils getNumberOfSettingsInSection should get good advanced section number" time="0">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good contact section number" name="Settings Search Utils getNumberOfSettingsInSection should get good contact section number" time="0.001">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good security &amp; privacy section number" name="Settings Search Utils getNumberOfSettingsInSection should get good security &amp; privacy section number" time="0.004">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good alerts section number" name="Settings Search Utils getNumberOfSettingsInSection should get good alerts section number" time="0">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good network section number" name="Settings Search Utils getNumberOfSettingsInSection should get good network section number" time="0">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good experimental section number" name="Settings Search Utils getNumberOfSettingsInSection should get good experimental section number" time="0.001">
    </testcase>
    <testcase classname="Settings Search Utils getNumberOfSettingsInSection should get good about section number" name="Settings Search Utils getNumberOfSettingsInSection should get good about section number" time="0">
    </testcase>
    <testcase classname="Settings Search Utils handleSettingsRefs should handle general refs" name="Settings Search Utils handleSettingsRefs should handle general refs" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmImportToken Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:18" time="1.334" tests="4">
    <testcase classname="ConfirmImportToken Component should render" name="ConfirmImportToken Component should render" time="0.102">
    </testcase>
    <testcase classname="ConfirmImportToken Component should render the list of tokens" name="ConfirmImportToken Component should render the list of tokens" time="0.005">
    </testcase>
    <testcase classname="ConfirmImportToken Component should go to &quot;IMPORT_TOKEN_ROUTE&quot; route when clicking the &quot;Back&quot; button" name="ConfirmImportToken Component should go to &quot;IMPORT_TOKEN_ROUTE&quot; route when clicking the &quot;Back&quot; button" time="0.055">
    </testcase>
    <testcase classname="ConfirmImportToken Component should dispatch clearPendingTokens and redirect to the first token page when clicking the &quot;Import tokens&quot; button" name="ConfirmImportToken Component should dispatch clearPendingTokens and redirect to the first token page when clicking the &quot;Import tokens&quot; button" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="SendContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:17" time="2.386" tests="10">
    <testcase classname="SendContent Component render should render a PageContainerContent component" name="SendContent Component render should render a PageContainerContent component" time="0.01">
    </testcase>
    <testcase classname="SendContent Component render should render a div with a .send-v2__form class as a child of PageContainerContent" name="SendContent Component render should render a div with a .send-v2__form class as a child of PageContainerContent" time="0.005">
    </testcase>
    <testcase classname="SendContent Component render should render the correct row components as grandchildren of the PageContainerContent component" name="SendContent Component render should render the correct row components as grandchildren of the PageContainerContent component" time="0.002">
    </testcase>
    <testcase classname="SendContent Component render should not render the SendHexDataRow if props.showHexData is false" name="SendContent Component render should not render the SendHexDataRow if props.showHexData is false" time="0.005">
    </testcase>
    <testcase classname="SendContent Component render should not render the SendHexDataRow if the asset type is TOKEN (ERC-20)" name="SendContent Component render should not render the SendHexDataRow if the asset type is TOKEN (ERC-20)" time="0.008">
    </testcase>
    <testcase classname="SendContent Component render should not render the Dialog if contact has a name" name="SendContent Component render should not render the Dialog if contact has a name" time="0.005">
    </testcase>
    <testcase classname="SendContent Component render should not render the Dialog if it is an ownedAccount" name="SendContent Component render should not render the Dialog if it is an ownedAccount" time="0.006">
    </testcase>
    <testcase classname="SendContent Component render should render insufficient gas dialog" name="SendContent Component render should render insufficient gas dialog" time="0.002">
    </testcase>
    <testcase classname="SendContent Component should not render the asset dropdown if token length is 0" name="SendContent Component should not render the asset dropdown if token length is 0" time="0.003">
    </testcase>
    <testcase classname="SendContent Component should render warning" name="SendContent Component should render warning" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="AddCollectible" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:18" time="1.447" tests="3">
    <testcase classname="AddCollectible should enable the &quot;Add&quot; button when valid entries are input into both Address and TokenId fields" name="AddCollectible should enable the &quot;Add&quot; button when valid entries are input into both Address and TokenId fields" time="0.04">
    </testcase>
    <testcase classname="AddCollectible should not enable the &quot;Add&quot; button when an invalid entry is input into one or both Address and TokenId fields" name="AddCollectible should not enable the &quot;Add&quot; button when an invalid entry is input into one or both Address and TokenId fields" time="0.027">
    </testcase>
    <testcase classname="AddCollectible should call addCollectibleVerifyOwnership action with correct values (tokenId should not be in scientific notation)" name="AddCollectible should call addCollectibleVerifyOwnership action with correct values (tokenId should not be in scientific notation)" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="PermissionLogController" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:19" time="0.821" tests="15">
    <testcase classname="PermissionLogController restricted method activity log records activity for restricted methods" name="PermissionLogController restricted method activity log records activity for restricted methods" time="0.004">
    </testcase>
    <testcase classname="PermissionLogController restricted method activity log handles responses added out of order" name="PermissionLogController restricted method activity log handles responses added out of order" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController restricted method activity log handles a lack of response" name="PermissionLogController restricted method activity log handles a lack of response" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController restricted method activity log ignores expected methods" name="PermissionLogController restricted method activity log ignores expected methods" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController restricted method activity log enforces log limit" name="PermissionLogController restricted method activity log enforces log limit" time="0.007">
    </testcase>
    <testcase classname="PermissionLogController permission history log only updates history on responses" name="PermissionLogController permission history log only updates history on responses" time="0.002">
    </testcase>
    <testcase classname="PermissionLogController permission history log ignores malformed permissions requests" name="PermissionLogController permission history log ignores malformed permissions requests" time="0">
    </testcase>
    <testcase classname="PermissionLogController permission history log records and updates account history as expected" name="PermissionLogController permission history log records and updates account history as expected" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController permission history log handles eth_accounts response without caveats" name="PermissionLogController permission history log handles eth_accounts response without caveats" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController permission history log handles extra caveats for eth_accounts" name="PermissionLogController permission history log handles extra caveats for eth_accounts" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController permission history log handles unrequested permissions on the response" name="PermissionLogController permission history log handles unrequested permissions on the response" time="0">
    </testcase>
    <testcase classname="PermissionLogController permission history log does not update history if no new permissions are approved" name="PermissionLogController permission history log does not update history if no new permissions are approved" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController permission history log records and updates history for multiple origins, regardless of response order" name="PermissionLogController permission history log records and updates history for multiple origins, regardless of response order" time="0.001">
    </testcase>
    <testcase classname="PermissionLogController updateAccountsHistory does nothing if the list of accounts is empty" name="PermissionLogController updateAccountsHistory does nothing if the list of accounts is empty" time="0">
    </testcase>
    <testcase classname="PermissionLogController updateAccountsHistory updates the account history" name="PermissionLogController updateAccountsHistory updates the account history" time="0">
    </testcase>
  </testsuite>
  <testsuite name="network utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:19" time="0.768" tests="2">
    <testcase classname="network utils formatTxMetaForRpcResult should correctly format the tx meta object (EIP-1559)" name="network utils formatTxMetaForRpcResult should correctly format the tx meta object (EIP-1559)" time="0.002">
    </testcase>
    <testcase classname="network utils formatTxMetaForRpcResult should correctly format the tx meta object (non EIP-1559)" name="network utils formatTxMetaForRpcResult should correctly format the tx meta object (non EIP-1559)" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="wallet1 is migrated successfully" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:19" time="0.75" tests="1">
    <testcase classname="wallet1 is migrated successfully should convert providers" name="wallet1 is migrated successfully should convert providers" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Typography" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="0.764" tests="2">
    <testcase classname="Typography should render the Typography without crashing" name="Typography should render the Typography without crashing" time="0.013">
    </testcase>
    <testcase classname="Typography should render the Typography with correct html elements" name="Typography should render the Typography with correct html elements" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="BasicTabContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="1.152" tests="4">
    <testcase classname="BasicTabContent Component render should have a title" name="BasicTabContent Component render should have a title" time="0.005">
    </testcase>
    <testcase classname="BasicTabContent Component render should render a GasPriceButtonGroup compenent" name="BasicTabContent Component render should render a GasPriceButtonGroup compenent" time="0.003">
    </testcase>
    <testcase classname="BasicTabContent Component render should pass correct props to GasPriceButtonGroup" name="BasicTabContent Component render should pass correct props to GasPriceButtonGroup" time="0.005">
    </testcase>
    <testcase classname="BasicTabContent Component render should render a loading component instead of the GasPriceButtonGroup if gasPriceButtonGroupProps.loading is true" name="BasicTabContent Component render should render a loading component instead of the GasPriceButtonGroup if gasPriceButtonGroupProps.loading is true" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="migration #43" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="0.772" tests="3">
    <testcase classname="migration #43 should update the version metadata" name="migration #43 should update the version metadata" time="0.004">
    </testcase>
    <testcase classname="migration #43 should delete currentAccountTab state" name="migration #43 should delete currentAccountTab state" time="0.001">
    </testcase>
    <testcase classname="migration #43 should do nothing if currentAccountTab state does not exist" name="migration #43 should do nothing if currentAccountTab state does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #44" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:21" time="0.728" tests="4">
    <testcase classname="migration #44 should update the version metadata" name="migration #44 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #44 should delete mkrMigrationReminderTimestamp state" name="migration #44 should delete mkrMigrationReminderTimestamp state" time="0">
    </testcase>
    <testcase classname="migration #44 should delete mkrMigrationReminderTimestamp state if it is null" name="migration #44 should delete mkrMigrationReminderTimestamp state if it is null" time="0.001">
    </testcase>
    <testcase classname="migration #44 should do nothing if mkrMigrationReminderTimestamp state does not exist" name="migration #44 should do nothing if mkrMigrationReminderTimestamp state does not exist" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #57" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="1.281" tests="7">
    <testcase classname="migration #57 should update the version metadata" name="migration #57 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #57 should transactions array into an object keyed by id" name="migration #57 should transactions array into an object keyed by id" time="0">
    </testcase>
    <testcase classname="migration #57 should handle transactions without an id, just in case" name="migration #57 should handle transactions without an id, just in case" time="0.001">
    </testcase>
    <testcase classname="migration #57 should not blow up if transactions are not an array" name="migration #57 should not blow up if transactions are not an array" time="0.001">
    </testcase>
    <testcase classname="migration #57 should do nothing if transactions state does not exist" name="migration #57 should do nothing if transactions state does not exist" time="0">
    </testcase>
    <testcase classname="migration #57 should convert empty array into empty object" name="migration #57 should convert empty array into empty object" time="0.002">
    </testcase>
    <testcase classname="migration #57 should do nothing if state is empty" name="migration #57 should do nothing if state is empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useTransactionDisplayData" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="2.267" tests="73">
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a title of Send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a title of Send" time="0.032">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a subtitle of To: 0xffe...1a97" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a subtitle of To: 0xffe...1a97" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a category of send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a category of send" time="0.006">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a primaryCurrency of -1 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a primaryCurrency of -1 ETH" time="0.007">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a secondaryCurrency of -1 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a secondaryCurrency of -1 ETH" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a displayedStatusKey of confirmed" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a recipientAddress of 0xffe5bc4e8f1f969934d773fa67da095d2e491a97" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a recipientAddress of 0xffe5bc4e8f1f969934d773fa67da095d2e491a97" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858512 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a title of Send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a title of Send" time="0.01">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a subtitle of To: 0x0cc...8848" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a subtitle of To: 0x0cc...8848" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a category of send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a category of send" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a primaryCurrency of -2 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a primaryCurrency of -2 ETH" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a secondaryCurrency of -2 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a secondaryCurrency of -2 ETH" time="0.006">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a displayedStatusKey of confirmed" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a recipientAddress of 0x0ccc8aeeaf5ce790f3b448325981a143fdef8848" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a recipientAddress of 0x0ccc8aeeaf5ce790f3b448325981a143fdef8848" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858507 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a title of Send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a title of Send" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a subtitle of To: 0xffe...1a97" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a subtitle of To: 0xffe...1a97" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a category of send" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a category of send" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a primaryCurrency of -2 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a primaryCurrency of -2 ETH" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a secondaryCurrency of -2 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a secondaryCurrency of -2 ETH" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a displayedStatusKey of confirmed" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a recipientAddress of 0xffe5bc4e8f1f969934d773fa67da095d2e491a97" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a recipientAddress of 0xffe5bc4e8f1f969934d773fa67da095d2e491a97" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858506 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a title of Receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a title of Receive" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a subtitle of From: 0x31b...4523" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a subtitle of From: 0x31b...4523" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a category of receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a category of receive" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a primaryCurrency of 18.75 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a primaryCurrency of 18.75 ETH" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a secondaryCurrency of 18.75 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a secondaryCurrency of 18.75 ETH" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a displayedStatusKey of confirmed" time="0.006">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a senderAddress of 0x31b98d14007bdee637298086988a0bbd31184523" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858505 should return a senderAddress of 0x31b98d14007bdee637298086988a0bbd31184523" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a title of Receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a title of Receive" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a subtitle of From: 0x9ec...a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a subtitle of From: 0x9ec...a149" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a category of receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a category of receive" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a primaryCurrency of 0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a primaryCurrency of 0 ETH" time="0.007">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a secondaryCurrency of 0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a secondaryCurrency of 0 ETH" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a displayedStatusKey of confirmed" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858475 should return a senderAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a title of Receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a title of Receive" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a subtitle of From: 0xee0...febb" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a subtitle of From: 0xee0...febb" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a category of receive" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a category of receive" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a primaryCurrency of 1 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a primaryCurrency of 1 ETH" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a secondaryCurrency of 1 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a secondaryCurrency of 1 ETH" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a displayedStatusKey of confirmed" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a recipientAddress of 0x9eca64466f257793eaa52fcfff5066894b76a149" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858466 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a title of Swap ETH to ABC" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a title of Swap ETH to ABC" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a subtitle of " name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a subtitle of " time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a category of swap" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a category of swap" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a primaryCurrency of +1 ABC" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a primaryCurrency of +1 ABC" time="0.001">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a secondaryCurrency of undefined" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a secondaryCurrency of undefined" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a displayedStatusKey of confirmed" time="0.006">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a recipientAddress of 0xabca64466f257793eaa52fcfff5066894b76a149" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a recipientAddress of 0xabca64466f257793eaa52fcfff5066894b76a149" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858467 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a title of Contract deployment" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a title of Contract deployment" time="0.013">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a subtitle of metamask.github.io" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a subtitle of metamask.github.io" time="0.008">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a category of interaction" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a category of interaction" time="0.01">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a primaryCurrency of -0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a primaryCurrency of -0 ETH" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a secondaryCurrency of -0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a secondaryCurrency of -0 ETH" time="0.008">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a displayedStatusKey of confirmed" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a recipientAddress of undefined" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a recipientAddress of undefined" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" name="useTransactionDisplayData when called with group containing primaryTransaction id 4243712234858468 should return a senderAddress of 0xee014609ef9e09776ac5fe00bdbfef57bcdefebb" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a title of Safe transfer from" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a title of Safe transfer from" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a subtitle of To: 0xe7d...dd98" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a subtitle of To: 0xe7d...dd98" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a category of send" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a category of send" time="0.005">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a primaryCurrency of -0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a primaryCurrency of -0 ETH" time="0.004">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a secondaryCurrency of -0 ETH" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a secondaryCurrency of -0 ETH" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a displayedStatusKey of confirmed" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a displayedStatusKey of confirmed" time="0.006">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a recipientAddress of 0xe7d522230eff653bb0a9b4385f0be0815420dd98" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a recipientAddress of 0xe7d522230eff653bb0a9b4385f0be0815420dd98" time="0.002">
    </testcase>
    <testcase classname="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a senderAddress of 0x806627172af48bd5b0765d3449a7def80d6576ff" name="useTransactionDisplayData when called with group containing primaryTransaction id 1441203963845330 should return a senderAddress of 0x806627172af48bd5b0765d3449a7def80d6576ff" time="0.003">
    </testcase>
    <testcase classname="useTransactionDisplayData should return an appropriate object" name="useTransactionDisplayData should return an appropriate object" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Box" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:20" time="1.543" tests="55">
    <testcase classname="Box should render the Box without crashing" name="Box should render the Box without crashing" time="0.018">
    </testcase>
    <testcase classname="Box margin should render the Box with the margin class" name="Box margin should render the Box with the margin class" time="0.002">
    </testcase>
    <testcase classname="Box margin should render the Box with the margin auto class" name="Box margin should render the Box with the margin auto class" time="0.003">
    </testcase>
    <testcase classname="Box margin should render the Box with the responsive margin classes" name="Box margin should render the Box with the responsive margin classes" time="0.003">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginTop class" name="Box margin should render the Box with the marginTop class" time="0.002">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginTop auto class" name="Box margin should render the Box with the marginTop auto class" time="0.001">
    </testcase>
    <testcase classname="Box margin should render the Box with the responsive marginTop classes" name="Box margin should render the Box with the responsive marginTop classes" time="0.002">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginRight class" name="Box margin should render the Box with the marginRight class" time="0.002">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginRight auto class" name="Box margin should render the Box with the marginRight auto class" time="0.002">
    </testcase>
    <testcase classname="Box margin should render the Box with the responsive marginRight classes" name="Box margin should render the Box with the responsive marginRight classes" time="0.014">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginBottom class" name="Box margin should render the Box with the marginBottom class" time="0.005">
    </testcase>
    <testcase classname="Box margin should render the Box with the responsive marginBottom classes" name="Box margin should render the Box with the responsive marginBottom classes" time="0.003">
    </testcase>
    <testcase classname="Box margin should render the Box with the marginLeft class" name="Box margin should render the Box with the marginLeft class" time="0.001">
    </testcase>
    <testcase classname="Box margin should render the Box with the responsive marginLeft classes" name="Box margin should render the Box with the responsive marginLeft classes" time="0.001">
    </testcase>
    <testcase classname="Box padding should render the Box with the padding class with singular value prop or one item array prop" name="Box padding should render the Box with the padding class with singular value prop or one item array prop" time="0.002">
    </testcase>
    <testcase classname="Box padding should render the Box with the responsive padding classes" name="Box padding should render the Box with the responsive padding classes" time="0.009">
    </testcase>
    <testcase classname="Box padding should render the Box with the paddingTop class" name="Box padding should render the Box with the paddingTop class" time="0.002">
    </testcase>
    <testcase classname="Box padding should render the Box with the responsive paddingTop classes" name="Box padding should render the Box with the responsive paddingTop classes" time="0.002">
    </testcase>
    <testcase classname="Box padding should render the Box with the paddingRight class" name="Box padding should render the Box with the paddingRight class" time="0.009">
    </testcase>
    <testcase classname="Box padding should render the Box with the responsive paddingRight classes" name="Box padding should render the Box with the responsive paddingRight classes" time="0.003">
    </testcase>
    <testcase classname="Box padding should render the Box with the paddingBottom class" name="Box padding should render the Box with the paddingBottom class" time="0.006">
    </testcase>
    <testcase classname="Box padding should render the Box with the responsive paddingBottom classes" name="Box padding should render the Box with the responsive paddingBottom classes" time="0.006">
    </testcase>
    <testcase classname="Box padding should render the Box with the paddingLeft class" name="Box padding should render the Box with the paddingLeft class" time="0.003">
    </testcase>
    <testcase classname="Box padding should render the Box with the responsive paddingLeft classes" name="Box padding should render the Box with the responsive paddingLeft classes" time="0.005">
    </testcase>
    <testcase classname="Box border should render the Box with the borderWidth class" name="Box border should render the Box with the borderWidth class" time="0.004">
    </testcase>
    <testcase classname="Box border should render the Box with the responsive borderWidth classes" name="Box border should render the Box with the responsive borderWidth classes" time="0.002">
    </testcase>
    <testcase classname="Box border should render the Box with the borderColor class" name="Box border should render the Box with the borderColor class" time="0.003">
    </testcase>
    <testcase classname="Box border should render the Box with the responsive borderColor classes" name="Box border should render the Box with the responsive borderColor classes" time="0.002">
    </testcase>
    <testcase classname="Box border should render the Box with a borderStyle class" name="Box border should render the Box with a borderStyle class" time="0.001">
    </testcase>
    <testcase classname="Box border should render the Box with the responsive borderStyle classes" name="Box border should render the Box with the responsive borderStyle classes" time="0.004">
    </testcase>
    <testcase classname="Box border should render the Box with the borderRadius class" name="Box border should render the Box with the borderRadius class" time="0.002">
    </testcase>
    <testcase classname="Box border should render the Box with the responsive borderRadius classes" name="Box border should render the Box with the responsive borderRadius classes" time="0.002">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the display classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the display classes" time="0.006">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive display classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive display classes" time="0.002">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the gap class" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the gap class" time="0.001">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive gap classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive gap classes" time="0.007">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the flexDirection classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the flexDirection classes" time="0.004">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive flexDirection classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive flexDirection classes" time="0.002">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the flexWrap classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the flexWrap classes" time="0.002">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive flexWrap classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive flexWrap classes" time="0.012">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the alignItems classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the alignItems classes" time="0.006">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive alignItems classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive alignItems classes" time="0.001">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the justifyContent classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the justifyContent classes" time="0.002">
    </testcase>
    <testcase classname="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive justifyContent classes" name="Box display, gap, flexDirection, flexWrap, alignItems, justifyContent should render the Box with the responsive justifyContent classes" time="0.001">
    </testcase>
    <testcase classname="Box textAlign should render the Box with the textAlign auto class" name="Box textAlign should render the Box with the textAlign auto class" time="0.001">
    </testcase>
    <testcase classname="Box textAlign should render the Box with the responsive textAlign classes" name="Box textAlign should render the Box with the responsive textAlign classes" time="0.001">
    </testcase>
    <testcase classname="Box background should render the Box with the backgroundColor class" name="Box background should render the Box with the backgroundColor class" time="0.001">
    </testcase>
    <testcase classname="Box background should render the Box with the responsive backgroundColor classes" name="Box background should render the Box with the responsive backgroundColor classes" time="0.001">
    </testcase>
    <testcase classname="Box color should render the Box with the color class" name="Box color should render the Box with the color class" time="0.001">
    </testcase>
    <testcase classname="Box color should render the Box with the responsive color classes" name="Box color should render the Box with the responsive color classes" time="0.002">
    </testcase>
    <testcase classname="Box width, height should render the Box with the width class" name="Box width, height should render the Box with the width class" time="0.002">
    </testcase>
    <testcase classname="Box width, height should render the Box with the responsive width classes" name="Box width, height should render the Box with the responsive width classes" time="0.001">
    </testcase>
    <testcase classname="Box width, height should render the Box with the height class" name="Box width, height should render the Box with the height class" time="0.004">
    </testcase>
    <testcase classname="Box width, height should render the Box with the responsive height classes" name="Box width, height should render the Box with the responsive height classes" time="0.002">
    </testcase>
    <testcase classname="Box polymorphic &quot;as&quot; prop should render the Box with different html root elements" name="Box polymorphic &quot;as&quot; prop should render the Box with different html root elements" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SendHeader Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:21" time="1.279" tests="7">
    <testcase classname="SendHeader Component Title should render &quot;Send to&quot; for INACTIVE or ADD_RECIPIENT stages" name="SendHeader Component Title should render &quot;Send to&quot; for INACTIVE or ADD_RECIPIENT stages" time="0.026">
    </testcase>
    <testcase classname="SendHeader Component Title should render &quot;Send&quot; for DRAFT stage when asset type is NATIVE" name="SendHeader Component Title should render &quot;Send&quot; for DRAFT stage when asset type is NATIVE" time="0.003">
    </testcase>
    <testcase classname="SendHeader Component Title should render &quot;Send Tokens&quot; for DRAFT stage when asset type is TOKEN" name="SendHeader Component Title should render &quot;Send Tokens&quot; for DRAFT stage when asset type is TOKEN" time="0.003">
    </testcase>
    <testcase classname="SendHeader Component Title should render &quot;Edit&quot; for EDIT stage" name="SendHeader Component Title should render &quot;Edit&quot; for EDIT stage" time="0.004">
    </testcase>
    <testcase classname="SendHeader Component Cancel Button has a cancel button in header" name="SendHeader Component Cancel Button has a cancel button in header" time="0.005">
    </testcase>
    <testcase classname="SendHeader Component Cancel Button has button label changed to Cancel edit in editing stage" name="SendHeader Component Cancel Button has button label changed to Cancel edit in editing stage" time="0.004">
    </testcase>
    <testcase classname="SendHeader Component Cancel Button resets send state when clicked" name="SendHeader Component Cancel Button resets send state when clicked" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Clean Error Stack" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:22" time="0.706" tests="4">
    <testcase classname="Clean Error Stack tests error with message" name="Clean Error Stack tests error with message" time="0.005">
    </testcase>
    <testcase classname="Clean Error Stack tests error with undefined name" name="Clean Error Stack tests error with undefined name" time="0">
    </testcase>
    <testcase classname="Clean Error Stack tests error with blank name" name="Clean Error Stack tests error with blank name" time="0">
    </testcase>
    <testcase classname="Clean Error Stack tests error with blank message" name="Clean Error Stack tests error with blank message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Reveal Seed Page" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:21" time="1.025" tests="1">
    <testcase classname="Reveal Seed Page form submit" name="Reveal Seed Page form submit" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="migration #27" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:22" time="0.74" tests="2">
    <testcase classname="migration #27 should remove rejected transactions" name="migration #27 should remove rejected transactions" time="0.001">
    </testcase>
    <testcase classname="migration #27 should successfully migrate first time state" name="migration #27 should successfully migrate first time state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TransactionStatus Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:21" time="1.991" tests="5">
    <testcase classname="TransactionStatus Component should render CONFIRMED properly" name="TransactionStatus Component should render CONFIRMED properly" time="0.028">
    </testcase>
    <testcase classname="TransactionStatus Component should render PENDING properly when status is APPROVED" name="TransactionStatus Component should render PENDING properly when status is APPROVED" time="0.007">
    </testcase>
    <testcase classname="TransactionStatus Component should render PENDING properly" name="TransactionStatus Component should render PENDING properly" time="0.003">
    </testcase>
    <testcase classname="TransactionStatus Component should render QUEUED properly" name="TransactionStatus Component should render QUEUED properly" time="0.003">
    </testcase>
    <testcase classname="TransactionStatus Component should render UNAPPROVED properly" name="TransactionStatus Component should render UNAPPROVED properly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CustomContentSearch" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:22" time="1.344" tests="6">
    <testcase classname="CustomContentSearch should render custom content search correctly" name="CustomContentSearch should render custom content search correctly" time="0.041">
    </testcase>
    <testcase classname="CustomContentSearch should check placeholder text in TextField input" name="CustomContentSearch should check placeholder text in TextField input" time="0.011">
    </testcase>
    <testcase classname="CustomContentSearch re-render the same component with different props" name="CustomContentSearch re-render the same component with different props" time="0.019">
    </testcase>
    <testcase classname="CustomContentSearch should call onSearch prop with input value" name="CustomContentSearch should call onSearch prop with input value" time="0.012">
    </testcase>
    <testcase classname="CustomContentSearch should check if error is shown if search does not return any network from the list" name="CustomContentSearch should check if error is shown if search does not return any network from the list" time="0.01">
    </testcase>
    <testcase classname="CustomContentSearch should check if error is not shown if search return some network from the list" name="CustomContentSearch should check if error is not shown if search return some network from the list" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Signature Request" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:22" time="1.274" tests="2">
    <testcase classname="Signature Request cancel" name="Signature Request cancel" time="0.05">
    </testcase>
    <testcase classname="Signature Request sign" name="Signature Request sign" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="migration #68" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:23" time="0.68" tests="5">
    <testcase classname="migration #68 should update the version metadata" name="migration #68 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #68 should migrate all data" name="migration #68 should migrate all data" time="0.002">
    </testcase>
    <testcase classname="migration #68 should migrate the PermissionsController state" name="migration #68 should migrate the PermissionsController state" time="0">
    </testcase>
    <testcase classname="migration #68 should migrate the PermissionsMetadata state" name="migration #68 should migrate the PermissionsMetadata state" time="0.001">
    </testcase>
    <testcase classname="migration #68 should handle domain metadata edge cases" name="migration #68 should handle domain metadata edge cases" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #70" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:23" time="0.793" tests="4">
    <testcase classname="migration #70 should update the version metadata" name="migration #70 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #70 should migrate all data" name="migration #70 should migrate all data" time="0.001">
    </testcase>
    <testcase classname="migration #70 should handle missing PermissionLogController" name="migration #70 should handle missing PermissionLogController" time="0">
    </testcase>
    <testcase classname="migration #70 should handle missing PermissionLogController.permissionActivityLog" name="migration #70 should handle missing PermissionLogController.permissionActivityLog" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DropdownInputPair" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:23" time="1.599" tests="1">
    <testcase classname="DropdownInputPair renders the component with initial props" name="DropdownInputPair renders the component with initial props" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="migration #55" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="0.761" tests="4">
    <testcase classname="migration #55 should update the version metadata" name="migration #55 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #55 should replace incomingTxLastFetchedBlocksByNetwork with incomingTxLastFetchedBlockByChainId, and carry over old values" name="migration #55 should replace incomingTxLastFetchedBlocksByNetwork with incomingTxLastFetchedBlockByChainId, and carry over old values" time="0.001">
    </testcase>
    <testcase classname="migration #55 should do nothing if incomingTxLastFetchedBlocksByNetwork key is not populated" name="migration #55 should do nothing if incomingTxLastFetchedBlocksByNetwork key is not populated" time="0.001">
    </testcase>
    <testcase classname="migration #55 should do nothing if state is empty" name="migration #55 should do nothing if state is empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="EditGasDisplay" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:23" time="1.907" tests="2">
    <testcase classname="EditGasDisplay if getIsNetworkBusy returns a truthy value informs the user" name="EditGasDisplay if getIsNetworkBusy returns a truthy value informs the user" time="0.05">
    </testcase>
    <testcase classname="EditGasDisplay if getIsNetworkBusy does not return a truthy value does not inform the user" name="EditGasDisplay if getIsNetworkBusy does not return a truthy value does not inform the user" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="GasModalPageContainer Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:23" time="2.186" tests="10">
    <testcase classname="GasModalPageContainer Component componentDidMount should call getGasFeeEstimatesAndStartPolling" name="GasModalPageContainer Component componentDidMount should call getGasFeeEstimatesAndStartPolling" time="0.005">
    </testcase>
    <testcase classname="GasModalPageContainer Component render should render a PageContainer compenent" name="GasModalPageContainer Component render should render a PageContainer compenent" time="0.014">
    </testcase>
    <testcase classname="GasModalPageContainer Component render should pass correct props to PageContainer" name="GasModalPageContainer Component render should pass correct props to PageContainer" time="0.002">
    </testcase>
    <testcase classname="GasModalPageContainer Component render should pass the correct onCancel and onClose methods to PageContainer" name="GasModalPageContainer Component render should pass the correct onCancel and onClose methods to PageContainer" time="0.002">
    </testcase>
    <testcase classname="GasModalPageContainer Component render should pass the correct renderTabs property to PageContainer" name="GasModalPageContainer Component render should pass the correct renderTabs property to PageContainer" time="0.005">
    </testcase>
    <testcase classname="GasModalPageContainer Component renderTabs should render a Tabs component with &quot;Basic&quot; and &quot;Advanced&quot; tabs" name="GasModalPageContainer Component renderTabs should render a Tabs component with &quot;Basic&quot; and &quot;Advanced&quot; tabs" time="0.011">
    </testcase>
    <testcase classname="GasModalPageContainer Component renderTabs should call renderInfoRows with the expected props" name="GasModalPageContainer Component renderTabs should call renderInfoRows with the expected props" time="0.003">
    </testcase>
    <testcase classname="GasModalPageContainer Component renderTabs should not render the basic tab if hideBasic is true" name="GasModalPageContainer Component renderTabs should not render the basic tab if hideBasic is true" time="0.003">
    </testcase>
    <testcase classname="GasModalPageContainer Component renderBasicTabContent should render" name="GasModalPageContainer Component renderBasicTabContent should render" time="0.006">
    </testcase>
    <testcase classname="GasModalPageContainer Component renderInfoRows should render the info rows with the passed data" name="GasModalPageContainer Component renderInfoRows should render the info rows with the passed data" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MenuBar" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="1.215" tests="2">
    <testcase classname="MenuBar opens account detail menu when account options is clicked" name="MenuBar opens account detail menu when account options is clicked" time="0.081">
    </testcase>
    <testcase classname="MenuBar shouldnt open the account options menu when clicked twice" name="MenuBar shouldnt open the account options menu when clicked twice" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="migration #58" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="0.8" tests="3">
    <testcase classname="migration #58 should update the version metadata" name="migration #58 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #58 deleting swapsWelcomeMessageHasBeenShown should delete the swapsWelcomeMessageHasBeenShown property" name="migration #58 deleting swapsWelcomeMessageHasBeenShown should delete the swapsWelcomeMessageHasBeenShown property" time="0">
    </testcase>
    <testcase classname="migration #58 deleting swapsWelcomeMessageHasBeenShown should not modify state if the AppStateController does not exist" name="migration #58 deleting swapsWelcomeMessageHasBeenShown should not modify state if the AppStateController does not exist" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useAssetDetails" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="1.189" tests="4">
    <testcase classname="useAssetDetails should return object with tokenSymbol set to an empty string, when getAssetDetails returns and empty object" name="useAssetDetails should return object with tokenSymbol set to an empty string, when getAssetDetails returns and empty object" time="0.021">
    </testcase>
    <testcase classname="useAssetDetails should return object with correct tokenValues for an ERC20 token" name="useAssetDetails should return object with correct tokenValues for an ERC20 token" time="0.009">
    </testcase>
    <testcase classname="useAssetDetails should return object with correct tokenValues for an ERC721 token" name="useAssetDetails should return object with correct tokenValues for an ERC721 token" time="0.007">
    </testcase>
    <testcase classname="useAssetDetails should return object with correct tokenValues for an ERC1155 token" name="useAssetDetails should return object with correct tokenValues for an ERC1155 token" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="srp-input" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:21:42" time="43.488" tests="156">
    <testcase classname="srp-input onChange event should not fire event on render" name="srp-input onChange event should not fire event on render" time="0.083">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string when only first field is filled out" name="srp-input onChange event invalid typed inputs should fire event with empty string when only first field is filled out" time="0.104">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string when one field is empty" name="srp-input onChange event invalid typed inputs should fire event with empty string when one field is empty" time="0.562">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string when one field has two words" name="srp-input onChange event invalid typed inputs should fire event with empty string when one field has two words" time="0.572">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string when one field has two words and one is empty" name="srp-input onChange event invalid typed inputs should fire event with empty string when one field has two words and one is empty" time="0.575">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string if SRP has invalid checksum" name="srp-input onChange event invalid typed inputs should fire event with empty string if SRP has invalid checksum" time="0.548">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string if SRP has invalid word" name="srp-input onChange event invalid typed inputs should fire event with empty string if SRP has invalid word" time="0.454">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string if SRP was valid, then a word was removed" name="srp-input onChange event invalid typed inputs should fire event with empty string if SRP was valid, then a word was removed" time="0.503">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string if SRP was valid, then was changed to invalidate the checksum" name="srp-input onChange event invalid typed inputs should fire event with empty string if SRP was valid, then was changed to invalidate the checksum" time="0.715">
    </testcase>
    <testcase classname="srp-input onChange event invalid typed inputs should fire event with empty string if valid SRP is pasted, then replaced with an SRP with an invalid word" name="srp-input onChange event invalid typed inputs should fire event with empty string if valid SRP is pasted, then replaced with an SRP with an invalid word" time="0.602">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string when only first field is filled out" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string when only first field is filled out" time="0.025">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string when one field is empty" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string when one field is empty" time="0.21">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP has invalid checksum" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP has invalid checksum" time="0.185">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP has invalid word" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP has invalid word" time="0.164">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP was valid, then a word was removed" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP was valid, then a word was removed" time="0.223">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP was valid, then was changed to invalidate the checksum" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string if SRP was valid, then was changed to invalidate the checksum" time="0.584">
    </testcase>
    <testcase classname="srp-input onChange event invalid individually pasted inputs should fire event with empty string if valid SRP is pasted, then replaced with an SRP with an invalid word" name="srp-input onChange event invalid individually pasted inputs should fire event with empty string if valid SRP is pasted, then replaced with an SRP with an invalid word" time="0.206">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test&apos;" time="0.028">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should not fire any event when pasted contents includes &gt;24 words" name="srp-input onChange event invalid pasted inputs should not fire any event when pasted contents includes &gt;24 words" time="0.04">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test&apos;" time="0.027">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test&apos;" time="0.031">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test&apos;" time="0.05">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test test test&apos;" time="0.033">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test test test&apos;" time="0.031">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test test test&apos;" time="0.069">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;test test test test test test test test test test test test&apos;" time="0.033">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;test test test test test test test test test test test test&apos;" time="0.046">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test test&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;test test test test test test test test test test test test&apos;" time="0.054">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;aardvark test test test test test test test test test test wolf&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid pasted input: &apos;aardvark test test test test test test test test test test wolf&apos;" time="0.037">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;aardvark test test test test test test test test test test wolf&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string upon invalid input pasted into second field: &apos;aardvark test test test test test test test test test test wolf&apos;" time="0.028">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;aardvark test test test test test test test test test test wolf&apos;" name="srp-input onChange event invalid pasted inputs should fire event with empty string after replacing valid SRP with: &apos;aardvark test test test test test test test test test test wolf&apos;" time="0.034">
    </testcase>
    <testcase classname="srp-input onChange event invalid pasted inputs should fire with empty string when full valid SRP is replaced by prefix" name="srp-input onChange event invalid pasted inputs should fire with empty string when full valid SRP is replaced by prefix" time="0.048">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP" name="srp-input onChange event valid typed inputs should fire event with a valid SRP" time="0.524">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos; &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos; &apos;" time="0.551">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos; &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos; &apos;" time="0.524">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos; &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos; &apos;" time="0.696">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;  &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;  &apos;" time="0.474">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;  &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;  &apos;" time="0.416">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;  &apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;  &apos;" time="0.641">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;
&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;
&apos;" time="0.552">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;
&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;
&apos;" time="0.511">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;
&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;
&apos;" time="0.657">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;	&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP preceded by a &apos;	&apos;" time="0.728">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;	&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP followed by a &apos;	&apos;" time="0.685">
    </testcase>
    <testcase classname="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;	&apos;" name="srp-input onChange event valid typed inputs should fire event with a valid SRP where each word is followed by a&apos;	&apos;" time="0.576">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP" time="0.223">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP when each word is pasted in two parts" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP when each word is pasted in two parts" time="0.276">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos; &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos; &apos;" time="0.166">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos; &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos; &apos;" time="0.17">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos; &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos; &apos;" time="0.177">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;  &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;  &apos;" time="0.152">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;  &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;  &apos;" time="0.167">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;  &apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;  &apos;" time="0.142">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;
&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;
&apos;" time="0.166">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;
&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;
&apos;" time="0.151">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;
&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;
&apos;" time="0.169">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;	&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP preceded by a &apos;	&apos;" time="0.154">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;	&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP followed by a &apos;	&apos;" time="0.149">
    </testcase>
    <testcase classname="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;	&apos;" name="srp-input onChange event valid individually pasted inputs should fire event with a valid SRP where each word is followed by a&apos;	&apos;" time="0.204">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire event with a valid SRP" name="srp-input onChange event valid pasted inputs should fire event with a valid SRP" time="0.03">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire event with a valid SRP when replacing invalid SRP" name="srp-input onChange event valid pasted inputs should fire event with a valid SRP when replacing invalid SRP" time="0.047">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos; test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos; test test test test test test test test test test test ball&apos;" time="0.045">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos; test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos; test test test test test test test test test test test ball&apos;" time="0.027">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;	test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;	test test test test test test test test test test test ball&apos;" time="0.044">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;	test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;	test test test test test test test test test test test ball&apos;" time="0.032">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;
test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;
test test test test test test test test test test test ball&apos;" time="0.041">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;
test test test test test test test test test test test ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;
test test test test test test test test test test test ball&apos;" time="0.031">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball &apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball &apos;" time="0.031">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball &apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball &apos;" time="0.023">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball	&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball	&apos;" time="0.025">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball	&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball	&apos;" time="0.028">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball
&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test test test test test test test test test test test ball
&apos;" time="0.037">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball
&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test test test test test test test test test test test ball
&apos;" time="0.028">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" time="0.022">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" time="0.04">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when given poorly formatted valid SRP: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" time="0.054">
    </testcase>
    <testcase classname="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" name="srp-input onChange event valid pasted inputs should fire with formatted SRP when poorly formatted valid SRP is pasted into second field: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" time="0.039">
    </testcase>
    <testcase classname="srp-input SRP validation error should not show error for empty input" name="srp-input SRP validation error should not show error for empty input" time="0.025">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should show word requirement error if SRP has too few words" name="srp-input SRP validation error typed should show word requirement error if SRP has too few words" time="0.552">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should show word requirement error if SRP has an unsupported word count above 12 but below 24" name="srp-input SRP validation error typed should show word requirement error if SRP has an unsupported word count above 12 but below 24" time="0.723">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should show invalid SRP error if SRP is correct length but has an invalid checksum" name="srp-input SRP validation error typed should show invalid SRP error if SRP is correct length but has an invalid checksum" time="0.558">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" name="srp-input SRP validation error typed should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" time="0.578">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for valid SRP" name="srp-input SRP validation error typed should not show error for valid SRP" time="0.541">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos; &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos; &apos;" time="0.606">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos; &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos; &apos;" time="0.702">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos; &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos; &apos;" time="0.746">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;  &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;  &apos;" time="0.529">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;  &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;  &apos;" time="0.614">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;  &apos;" name="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;  &apos;" time="0.851">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;
&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;
&apos;" time="0.663">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;
&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;
&apos;" time="0.538">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;
&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;
&apos;" time="0.56">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;	&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP preceded by a &apos;	&apos;" time="0.573">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;	&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP followed by a &apos;	&apos;" time="0.586">
    </testcase>
    <testcase classname="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;	&apos;" name="srp-input SRP validation error typed should not show error for a valid SRP where each word is followed by a&apos;	&apos;" time="0.69">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should show word requirement error if SRP has too few words" name="srp-input SRP validation error individually pasted should show word requirement error if SRP has too few words" time="0.15">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should show word requirement error if SRP has an unsupported word count above 12 but below 24" name="srp-input SRP validation error individually pasted should show word requirement error if SRP has an unsupported word count above 12 but below 24" time="0.289">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should show invalid SRP error if SRP is correct length but has an invalid checksum" name="srp-input SRP validation error individually pasted should show invalid SRP error if SRP is correct length but has an invalid checksum" time="0.174">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" name="srp-input SRP validation error individually pasted should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" time="0.157">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for valid SRP" name="srp-input SRP validation error individually pasted should not show error for valid SRP" time="0.172">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos; &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos; &apos;" time="0.178">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos; &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos; &apos;" time="0.247">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos; &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos; &apos;" time="0.194">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;  &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;  &apos;" time="0.176">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;  &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;  &apos;" time="0.186">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;  &apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;  &apos;" time="0.188">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;
&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;
&apos;" time="0.192">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;
&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;
&apos;" time="0.228">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;
&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;
&apos;" time="0.166">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;	&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP preceded by a &apos;	&apos;" time="0.197">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;	&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP followed by a &apos;	&apos;" time="0.17">
    </testcase>
    <testcase classname="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;	&apos;" name="srp-input SRP validation error individually pasted should not show error for a valid SRP where each word is followed by a&apos;	&apos;" time="0.153">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should show word requirement error if SRP has too few words" name="srp-input SRP validation error pasted should show word requirement error if SRP has too few words" time="0.039">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should show word requirement error if SRP has an unsupported word count above 12 but below 24" name="srp-input SRP validation error pasted should show word requirement error if SRP has an unsupported word count above 12 but below 24" time="0.041">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should show invalid SRP error if SRP is correct length but has an invalid checksum" name="srp-input SRP validation error pasted should show invalid SRP error if SRP is correct length but has an invalid checksum" time="0.042">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" name="srp-input SRP validation error pasted should show invalid SRP error if SRP is correct length and has correct checksum but has an invalid word" time="0.06">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for valid SRP" name="srp-input SRP validation error pasted should not show error for valid SRP" time="0.103">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos; test test test test test test test test test test test ball&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos; test test test test test test test test test test test ball&apos;" time="0.032">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;	test test test test test test test test test test test ball&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;	test test test test test test test test test test test ball&apos;" time="0.026">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;
test test test test test test test test test test test ball&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;
test test test test test test test test test test test ball&apos;" time="0.045">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball &apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball &apos;" time="0.039">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball	&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball	&apos;" time="0.047">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball
&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test test test test test test test test test test test ball
&apos;" time="0.048">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test  test  test  test  test  test  test  test  test  test  test  ball&apos;" time="0.041">
    </testcase>
    <testcase classname="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" name="srp-input SRP validation error pasted should not show error for poorly formatted valid SRP: &apos;test	test	test	test	test	test	test	test	test	test	test	ball&apos;" time="0.029">
    </testcase>
    <testcase classname="srp-input Show/hide SRP should default to not showing SRP" name="srp-input Show/hide SRP should default to not showing SRP" time="0.022">
    </testcase>
    <testcase classname="srp-input Show/hide SRP default hidden should prevent reading typed SRP" name="srp-input Show/hide SRP default hidden should prevent reading typed SRP" time="0.651">
    </testcase>
    <testcase classname="srp-input Show/hide SRP default hidden should prevent reading individually pasted SRP" name="srp-input Show/hide SRP default hidden should prevent reading individually pasted SRP" time="0.308">
    </testcase>
    <testcase classname="srp-input Show/hide SRP default hidden should prevent reading pasted SRP" name="srp-input Show/hide SRP default hidden should prevent reading pasted SRP" time="0.032">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown then hidden should prevent reading typed SRP" name="srp-input Show/hide SRP shown then hidden should prevent reading typed SRP" time="1.268">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown then hidden should prevent reading individually pasted SRP" name="srp-input Show/hide SRP shown then hidden should prevent reading individually pasted SRP" time="0.71">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown after input should show words from typed SRP" name="srp-input Show/hide SRP shown after input should show words from typed SRP" time="1.091">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown after input should show words from individually pasted SRP" name="srp-input Show/hide SRP shown after input should show words from individually pasted SRP" time="0.851">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown after input should show words from pasted SRP" name="srp-input Show/hide SRP shown after input should show words from pasted SRP" time="0.55">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown before input should show words from typed SRP" name="srp-input Show/hide SRP shown before input should show words from typed SRP" time="0.79">
    </testcase>
    <testcase classname="srp-input Show/hide SRP shown before input should show words from individually pasted SRP" name="srp-input Show/hide SRP shown before input should show words from individually pasted SRP" time="0.493">
    </testcase>
    <testcase classname="srp-input Show/hide SRP hidden after paste should hide all inputs after an incomplete multi-word paste" name="srp-input Show/hide SRP hidden after paste should hide all inputs after an incomplete multi-word paste" time="0.149">
    </testcase>
    <testcase classname="srp-input Show/hide SRP hidden after paste should hide all inputs after a full SRP paste" name="srp-input Show/hide SRP hidden after paste should hide all inputs after a full SRP paste" time="0.137">
    </testcase>
    <testcase classname="srp-input Show/hide SRP hidden after paste should not hide inputs after a single word paste" name="srp-input Show/hide SRP hidden after paste should not hide inputs after a single word paste" time="0.163">
    </testcase>
    <testcase classname="srp-input Show/hide SRP should hide shown field when another field is shown" name="srp-input Show/hide SRP should hide shown field when another field is shown" time="0.098">
    </testcase>
    <testcase classname="srp-input clear after paste should not clear clipboard after typing SRP" name="srp-input clear after paste should not clear clipboard after typing SRP" time="0.637">
    </testcase>
    <testcase classname="srp-input clear after paste should not clear the clipboard after individually pasting SRP" name="srp-input clear after paste should not clear the clipboard after individually pasting SRP" time="0.188">
    </testcase>
    <testcase classname="srp-input clear after paste should not clear the clipboard after pasting SRP with too many words" name="srp-input clear after paste should not clear the clipboard after pasting SRP with too many words" time="0.043">
    </testcase>
    <testcase classname="srp-input clear after paste should clear the clipboard after pasting incomplete SRP" name="srp-input clear after paste should clear the clipboard after pasting incomplete SRP" time="0.037">
    </testcase>
    <testcase classname="srp-input clear after paste should clear the clipboard after pasting correct SRP" name="srp-input clear after paste should clear the clipboard after pasting correct SRP" time="0.034">
    </testcase>
    <testcase classname="srp-input number of words dropdown should default to 12 words" name="srp-input number of words dropdown should default to 12 words" time="0.037">
    </testcase>
    <testcase classname="srp-input number of words dropdown should be updated on paste to allow room for a longer SRP" name="srp-input number of words dropdown should be updated on paste to allow room for a longer SRP" time="0.063">
    </testcase>
    <testcase classname="srp-input number of words dropdown should be updated on paste to match the size of a shorter SRP" name="srp-input number of words dropdown should be updated on paste to match the size of a shorter SRP" time="0.081">
    </testcase>
    <testcase classname="srp-input number of words dropdown should round up to nearest valid size on paste when SRP has an invalid number of words" name="srp-input number of words dropdown should round up to nearest valid size on paste when SRP has an invalid number of words" time="0.055">
    </testcase>
    <testcase classname="srp-input number of words dropdown should update the number of fields" name="srp-input number of words dropdown should update the number of fields" time="0.094">
    </testcase>
    <testcase classname="srp-input number of words dropdown should forget any field state that is no longer shown" name="srp-input number of words dropdown should forget any field state that is no longer shown" time="0.122">
    </testcase>
    <testcase classname="srp-input paste error should show paste error when too many words are pasted" name="srp-input paste error should show paste error when too many words are pasted" time="0.036">
    </testcase>
    <testcase classname="srp-input paste error should allow dismissing the paste error" name="srp-input paste error should allow dismissing the paste error" time="0.066">
    </testcase>
    <testcase classname="srp-input paste error should dismiss the paste error after paste with fewer than 24 words" name="srp-input paste error should dismiss the paste error after paste with fewer than 24 words" time="0.039">
    </testcase>
    <testcase classname="srp-input paste error should not dismiss the paste error after a second paste with over 24 words" name="srp-input paste error should not dismiss the paste error after a second paste with over 24 words" time="0.059">
    </testcase>
    <testcase classname="srp-input paste error should dismiss the paste error after typing" name="srp-input paste error should dismiss the paste error after typing" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedTabContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="1.189" tests="6">
    <testcase classname="AdvancedTabContent Component render() should render the advanced-tab root node" name="AdvancedTabContent Component render() should render the advanced-tab root node" time="0.004">
    </testcase>
    <testcase classname="AdvancedTabContent Component render() should render the expected child of the advanced-tab div" name="AdvancedTabContent Component render() should render the expected child of the advanced-tab div" time="0.002">
    </testcase>
    <testcase classname="AdvancedTabContent Component render() should call renderDataSummary with the expected params" name="AdvancedTabContent Component render() should call renderDataSummary with the expected params" time="0.001">
    </testcase>
    <testcase classname="AdvancedTabContent Component renderDataSummary() should render the transaction-data-summary root node" name="AdvancedTabContent Component renderDataSummary() should render the transaction-data-summary root node" time="0.001">
    </testcase>
    <testcase classname="AdvancedTabContent Component renderDataSummary() should render titles of the data" name="AdvancedTabContent Component renderDataSummary() should render titles of the data" time="0.003">
    </testcase>
    <testcase classname="AdvancedTabContent Component renderDataSummary() should render the data" name="AdvancedTabContent Component renderDataSummary() should render the data" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="SwapsFooter" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:24" time="2.132" tests="1">
    <testcase classname="SwapsFooter renders the component with initial props" name="SwapsFooter renders the component with initial props" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="ExperimentalTab" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:25" time="1.282" tests="1">
    <testcase classname="ExperimentalTab renders ExperimentalTab component and shows Enable enhanced gas fee UI text" name="ExperimentalTab renders ExperimentalTab component and shows Enable enhanced gas fee UI text" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="migration #50" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="0.88" tests="2">
    <testcase classname="migration #50 should update the version metadata" name="migration #50 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #50 should call window.localStorage.removeItem for each legacy key" name="migration #50 should call window.localStorage.removeItem for each legacy key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Account Menu" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:25" time="1.635" tests="16">
    <testcase classname="Account Menu Render Content returns account name from identities" name="Account Menu Render Content returns account name from identities" time="0.045">
    </testcase>
    <testcase classname="Account Menu Render Content renders user preference currency display balance from account balance" name="Account Menu Render Content renders user preference currency display balance from account balance" time="0.011">
    </testcase>
    <testcase classname="Account Menu Render Content simulate click" name="Account Menu Render Content simulate click" time="0.015">
    </testcase>
    <testcase classname="Account Menu Render Content render imported account label" name="Account Menu Render Content render imported account label" time="0.016">
    </testcase>
    <testcase classname="Account Menu Log Out logout" name="Account Menu Log Out logout" time="0.017">
    </testcase>
    <testcase classname="Account Menu Log Out simulate click" name="Account Menu Log Out simulate click" time="0.008">
    </testcase>
    <testcase classname="Account Menu Create Account renders create account item" name="Account Menu Create Account renders create account item" time="0.009">
    </testcase>
    <testcase classname="Account Menu Create Account calls toggle menu and push new-account route to history" name="Account Menu Create Account calls toggle menu and push new-account route to history" time="0.008">
    </testcase>
    <testcase classname="Account Menu Import Account renders import account item" name="Account Menu Import Account renders import account item" time="0.008">
    </testcase>
    <testcase classname="Account Menu Import Account calls toggle menu and push /new-account/import route to history" name="Account Menu Import Account calls toggle menu and push /new-account/import route to history" time="0.02">
    </testcase>
    <testcase classname="Account Menu Connect hardware wallet renders import account item" name="Account Menu Connect hardware wallet renders import account item" time="0.017">
    </testcase>
    <testcase classname="Account Menu Connect hardware wallet calls toggle menu and push /new-account/connect route to history" name="Account Menu Connect hardware wallet calls toggle menu and push /new-account/connect route to history" time="0.011">
    </testcase>
    <testcase classname="Account Menu Support renders import account item" name="Account Menu Support renders import account item" time="0.008">
    </testcase>
    <testcase classname="Account Menu Support opens support link when clicked" name="Account Menu Support opens support link when clicked" time="0.008">
    </testcase>
    <testcase classname="Account Menu Settings renders import account item" name="Account Menu Settings renders import account item" time="0.013">
    </testcase>
    <testcase classname="Account Menu Settings calls toggle menu and push /new-account/connect route to history" name="Account Menu Settings calls toggle menu and push /new-account/connect route to history" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="App State" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:27" time="0.833" tests="28">
    <testcase classname="App State app init state" name="App State app init state" time="0">
    </testcase>
    <testcase classname="App State sets networkDropdownOpen dropdown to true" name="App State sets networkDropdownOpen dropdown to true" time="0">
    </testcase>
    <testcase classname="App State sets networkDropdownOpen dropdown to false" name="App State sets networkDropdownOpen dropdown to false" time="0">
    </testcase>
    <testcase classname="App State opens alert" name="App State opens alert" time="0">
    </testcase>
    <testcase classname="App State closes alert" name="App State closes alert" time="0">
    </testcase>
    <testcase classname="App State detects qr code data" name="App State detects qr code data" time="0">
    </testcase>
    <testcase classname="App State opens modal" name="App State opens modal" time="0.001">
    </testcase>
    <testcase classname="App State closes modal, but moves open modal state to previous modal state" name="App State closes modal, but moves open modal state to previous modal state" time="0">
    </testcase>
    <testcase classname="App State shows send token page" name="App State shows send token page" time="0">
    </testcase>
    <testcase classname="App State locks Metamask" name="App State locks Metamask" time="0">
    </testcase>
    <testcase classname="App State goes home" name="App State goes home" time="0.006">
    </testcase>
    <testcase classname="App State shows account detail" name="App State shows account detail" time="0.002">
    </testcase>
    <testcase classname="App State clears account details" name="App State clears account details" time="0">
    </testcase>
    <testcase classname="App State shoes account page" name="App State shoes account page" time="0.001">
    </testcase>
    <testcase classname="App State shows confirm tx page" name="App State shows confirm tx page" time="0">
    </testcase>
    <testcase classname="App State completes tx continues to show pending txs current view context" name="App State completes tx continues to show pending txs current view context" time="0">
    </testcase>
    <testcase classname="App State returns to account detail page when no unconf actions completed tx" name="App State returns to account detail page when no unconf actions completed tx" time="0">
    </testcase>
    <testcase classname="App State sets default warning when unlock fails" name="App State sets default warning when unlock fails" time="0">
    </testcase>
    <testcase classname="App State sets errors when unlock fails" name="App State sets errors when unlock fails" time="0.001">
    </testcase>
    <testcase classname="App State sets warning to empty string when unlock succeeds" name="App State sets warning to empty string when unlock succeeds" time="0">
    </testcase>
    <testcase classname="App State sets hardware wallet default hd path" name="App State sets hardware wallet default hd path" time="0">
    </testcase>
    <testcase classname="App State shows loading message" name="App State shows loading message" time="0">
    </testcase>
    <testcase classname="App State hides loading message" name="App State hides loading message" time="0">
    </testcase>
    <testcase classname="App State displays warning" name="App State displays warning" time="0">
    </testcase>
    <testcase classname="App State hides warning" name="App State hides warning" time="0">
    </testcase>
    <testcase classname="App State shows private key" name="App State shows private key" time="0">
    </testcase>
    <testcase classname="App State set mouse user state" name="App State set mouse user state" time="0.001">
    </testcase>
    <testcase classname="App State smart transactions - SET_SMART_TRANSACTIONS_ERROR" name="App State smart transactions - SET_SMART_TRANSACTIONS_ERROR" time="0">
    </testcase>
  </testsuite>
  <testsuite name="EditGasItem" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="1.519" tests="9">
    <testcase classname="EditGasItem should renders low gas estimate option for priorityLevel low" name="EditGasItem should renders low gas estimate option for priorityLevel low" time="0.071">
    </testcase>
    <testcase classname="EditGasItem should renders market gas estimate option for priorityLevel medium" name="EditGasItem should renders market gas estimate option for priorityLevel medium" time="0.036">
    </testcase>
    <testcase classname="EditGasItem should renders aggressive gas estimate option for priorityLevel high" name="EditGasItem should renders aggressive gas estimate option for priorityLevel high" time="0.019">
    </testcase>
    <testcase classname="EditGasItem should render priorityLevel high as &quot;Swap suggested&quot; for swaps" name="EditGasItem should render priorityLevel high as &quot;Swap suggested&quot; for swaps" time="0.023">
    </testcase>
    <testcase classname="EditGasItem should highlight option is priorityLevel is currently selected" name="EditGasItem should highlight option is priorityLevel is currently selected" time="0.019">
    </testcase>
    <testcase classname="EditGasItem should renders site gas estimate option for priorityLevel dappSuggested" name="EditGasItem should renders site gas estimate option for priorityLevel dappSuggested" time="0.021">
    </testcase>
    <testcase classname="EditGasItem should not renders site gas estimate option for priorityLevel dappSuggested if site does not provided gas estimates" name="EditGasItem should not renders site gas estimate option for priorityLevel dappSuggested if site does not provided gas estimates" time="0.009">
    </testcase>
    <testcase classname="EditGasItem should renders advance gas estimate option for priorityLevel custom" name="EditGasItem should renders advance gas estimate option for priorityLevel custom" time="0.013">
    </testcase>
    <testcase classname="EditGasItem should renders +10% gas estimate option for priorityLevel minimum" name="EditGasItem should renders +10% gas estimate option for priorityLevel minimum" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Network Dropdown" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="1.422" tests="14">
    <testcase classname="Network Dropdown NetworkDropdown in appState in false should not render menu dropdown when network dropdown is in false state" name="Network Dropdown NetworkDropdown in appState in false should not render menu dropdown when network dropdown is in false state" time="0.018">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState in false checks for network droppo class" name="Network Dropdown NetworkDropdown in appState in false checks for network droppo class" time="0.003">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for first ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for first ColorIndicator" time="0.009">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for second ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for second ColorIndicator" time="0.008">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for third ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for third ColorIndicator" time="0.013">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for fourth ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for fourth ColorIndicator" time="0.009">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for fifth ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for fifth ColorIndicator" time="0.016">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for sixth ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for sixth ColorIndicator" time="0.008">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for seventh ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks background color for seventh ColorIndicator" time="0.019">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks that Add Network button is rendered" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true checks that Add Network button is rendered" time="0.014">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is true shows test networks in the dropdown" name="Network Dropdown NetworkDropdown in appState is true and show test networks is true shows test networks in the dropdown" time="0.014">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is false checks background color for first ColorIndicator" name="Network Dropdown NetworkDropdown in appState is true and show test networks is false checks background color for first ColorIndicator" time="0.01">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is false checks that Add Network button is rendered" name="Network Dropdown NetworkDropdown in appState is true and show test networks is false checks that Add Network button is rendered" time="0.007">
    </testcase>
    <testcase classname="Network Dropdown NetworkDropdown in appState is true and show test networks is false does not show test networks in the dropdown" name="Network Dropdown NetworkDropdown in appState is true and show test networks is false does not show test networks in the dropdown" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="SendGasRow Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="2.101" tests="2">
    <testcase classname="SendGasRow Component render should render a SendRowWrapper component" name="SendGasRow Component render should render a SendRowWrapper component" time="0.003">
    </testcase>
    <testcase classname="SendGasRow Component render should render an AdvancedGasInputs as a child of the SendRowWrapper" name="SendGasRow Component render should render an AdvancedGasInputs as a child of the SendRowWrapper" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NetworksTabContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="2.508" tests="1">
    <testcase classname="NetworksTabContent Component should render networks tab content correctly" name="NetworksTabContent Component should render networks tab content correctly" time="0.172">
    </testcase>
  </testsuite>
  <testsuite name="Swaps Util" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:26" time="2.315" tests="59">
    <testcase classname="Swaps Util fetchTradesInfo should fetch trade info on prod" name="Swaps Util fetchTradesInfo should fetch trade info on prod" time="0.016">
    </testcase>
    <testcase classname="Swaps Util fetchTokens should fetch tokens" name="Swaps Util fetchTokens should fetch tokens" time="0.006">
    </testcase>
    <testcase classname="Swaps Util fetchTokens should fetch tokens on prod" name="Swaps Util fetchTokens should fetch tokens on prod" time="0.006">
    </testcase>
    <testcase classname="Swaps Util fetchAggregatorMetadata should fetch aggregator metadata" name="Swaps Util fetchAggregatorMetadata should fetch aggregator metadata" time="0.002">
    </testcase>
    <testcase classname="Swaps Util fetchAggregatorMetadata should fetch aggregator metadata on prod" name="Swaps Util fetchAggregatorMetadata should fetch aggregator metadata on prod" time="0.012">
    </testcase>
    <testcase classname="Swaps Util fetchTopAssets should fetch top assets" name="Swaps Util fetchTopAssets should fetch top assets" time="0.009">
    </testcase>
    <testcase classname="Swaps Util fetchTopAssets should fetch top assets on prod" name="Swaps Util fetchTopAssets should fetch top assets on prod" time="0.004">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WETH contract address" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WETH contract address" time="0.003">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WETH contract address with some uppercase chars" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WETH contract address with some uppercase chars" time="0.002">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is ETH mainnet contract address on ETH mainnet" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is ETH mainnet contract address on ETH mainnet" time="0.003">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WBNB contract address on BSC mainnet" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WBNB contract address on BSC mainnet" time="0.004">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WMATIC contract address on Polygon mainnet" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is WMATIC contract address on Polygon mainnet" time="0">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns false if &quot;to&quot; is BSC contract address on ETH mainnet" name="Swaps Util isContractAddressValid returns false if &quot;to&quot; is BSC contract address on ETH mainnet" time="0.001">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns false if contractAddress is null" name="Swaps Util isContractAddressValid returns false if contractAddress is null" time="0.003">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns false if chainId is incorrect" name="Swaps Util isContractAddressValid returns false if chainId is incorrect" time="0">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is BSC contract address on BSC network" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is BSC contract address on BSC network" time="0.001">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is Polygon contract address on Polygon network" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is Polygon contract address on Polygon network" time="0.001">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is Goerli contract address on Goerli network" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is Goerli contract address on Goerli network" time="0.001">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is testnet contract address" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is testnet contract address" time="0">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns true if &quot;to&quot; is testnet contract address with some uppercase chars" name="Swaps Util isContractAddressValid returns true if &quot;to&quot; is testnet contract address with some uppercase chars" time="0.003">
    </testcase>
    <testcase classname="Swaps Util isContractAddressValid returns false if &quot;to&quot; has mismatch with current chainId" name="Swaps Util isContractAddressValid returns false if &quot;to&quot; has mismatch with current chainId" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns &quot;ethereum&quot; for mainnet chain ID" name="Swaps Util getNetworkNameByChainId returns &quot;ethereum&quot; for mainnet chain ID" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns &quot;bsc&quot; for mainnet chain ID" name="Swaps Util getNetworkNameByChainId returns &quot;bsc&quot; for mainnet chain ID" time="0">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns &quot;polygon&quot; for mainnet chain ID" name="Swaps Util getNetworkNameByChainId returns &quot;polygon&quot; for mainnet chain ID" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns &quot;goerli&quot; for Goerli chain ID" name="Swaps Util getNetworkNameByChainId returns &quot;goerli&quot; for Goerli chain ID" time="0">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns &quot;avalanche&quot; for Avalanche chain ID" name="Swaps Util getNetworkNameByChainId returns &quot;avalanche&quot; for Avalanche chain ID" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getNetworkNameByChainId returns an empty string for an unsupported network" name="Swaps Util getNetworkNameByChainId returns an empty string for an unsupported network" time="0">
    </testcase>
    <testcase classname="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and cannot use API v2 for localhost chain ID" name="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and cannot use API v2 for localhost chain ID" time="0.003">
    </testcase>
    <testcase classname="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and cannot use API v2 for Goerli chain ID" name="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and cannot use API v2 for Goerli chain ID" time="0.002">
    </testcase>
    <testcase classname="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are disabled and cannot use API v2 if network name is not found" name="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are disabled and cannot use API v2 if network name is not found" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and can use API v2 for mainnet chain ID" name="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled and can use API v2 for mainnet chain ID" time="0.004">
    </testcase>
    <testcase classname="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled but can only use API v1 for mainnet chain ID" name="Swaps Util getSwapsLivenessForNetwork returns info that Swaps are enabled but can only use API v1 for mainnet chain ID" time="0.003">
    </testcase>
    <testcase classname="Swaps Util countDecimals returns 0 decimals for an undefined value" name="Swaps Util countDecimals returns 0 decimals for an undefined value" time="0.001">
    </testcase>
    <testcase classname="Swaps Util countDecimals returns 0 decimals for number: 1" name="Swaps Util countDecimals returns 0 decimals for number: 1" time="0.001">
    </testcase>
    <testcase classname="Swaps Util countDecimals returns 1 decimals for number: 1.1" name="Swaps Util countDecimals returns 1 decimals for number: 1.1" time="0.006">
    </testcase>
    <testcase classname="Swaps Util countDecimals returns 3 decimals for number: 1.123" name="Swaps Util countDecimals returns 3 decimals for number: 1.123" time="0.001">
    </testcase>
    <testcase classname="Swaps Util countDecimals returns 9 decimals for number: 1.123456789" name="Swaps Util countDecimals returns 9 decimals for number: 1.123456789" time="0">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from ETH to WETH" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from ETH to WETH" time="0">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from ETH with uppercase chars to WETH" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from ETH with uppercase chars to WETH" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from WETH to ETH" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from WETH to ETH" time="0">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from WETH with uppercase chars to ETH" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from WETH with uppercase chars to ETH" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns false if swapping from ETH to a non-WETH token" name="Swaps Util shouldEnableDirectWrapping returns false if swapping from ETH to a non-WETH token" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from BNB to WBNB" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from BNB to WBNB" time="0">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from WBNB to BNB" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from WBNB to BNB" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns false if swapping from BNB to a non-WBNB token" name="Swaps Util shouldEnableDirectWrapping returns false if swapping from BNB to a non-WBNB token" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from MATIC to WMATIC" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from MATIC to WMATIC" time="0">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns true if swapping from WMATIC to MATIC" name="Swaps Util shouldEnableDirectWrapping returns true if swapping from WMATIC to MATIC" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns false if swapping from MATIC to a non-WMATIC token" name="Swaps Util shouldEnableDirectWrapping returns false if swapping from MATIC to a non-WMATIC token" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns false if a source token is undefined" name="Swaps Util shouldEnableDirectWrapping returns false if a source token is undefined" time="0.001">
    </testcase>
    <testcase classname="Swaps Util shouldEnableDirectWrapping returns false if a destination token is undefined" name="Swaps Util shouldEnableDirectWrapping returns false if a destination token is undefined" time="0">
    </testcase>
    <testcase classname="Swaps Util showRemainingTimeInMinAndSec returns 0:00 if we do not pass an integer" name="Swaps Util showRemainingTimeInMinAndSec returns 0:00 if we do not pass an integer" time="0">
    </testcase>
    <testcase classname="Swaps Util showRemainingTimeInMinAndSec returns 0:05 if 5 seconds are remaining" name="Swaps Util showRemainingTimeInMinAndSec returns 0:05 if 5 seconds are remaining" time="0">
    </testcase>
    <testcase classname="Swaps Util showRemainingTimeInMinAndSec returns 2:59" name="Swaps Util showRemainingTimeInMinAndSec returns 2:59" time="0">
    </testcase>
    <testcase classname="Swaps Util getFeeForSmartTransaction returns estimated for for STX" name="Swaps Util getFeeForSmartTransaction returns estimated for for STX" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getSwapsTokensReceivedFromTxMeta returns an estimated amount if preTxBalance and postTxBalance are the same for ETH" name="Swaps Util getSwapsTokensReceivedFromTxMeta returns an estimated amount if preTxBalance and postTxBalance are the same for ETH" time="0">
    </testcase>
    <testcase classname="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta" name="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.txReceipt" name="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.txReceipt" time="0">
    </testcase>
    <testcase classname="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.postTxBalance" name="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.postTxBalance" time="0.001">
    </testcase>
    <testcase classname="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.preTxBalance" name="Swaps Util getSwapsTokensReceivedFromTxMeta returns null if there is no txMeta.preTxBalance" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Selectors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="0.944" tests="27">
    <testcase classname="Selectors #getSelectedAddress returns undefined if selectedAddress is undefined" name="Selectors #getSelectedAddress returns undefined if selectedAddress is undefined" time="0.001">
    </testcase>
    <testcase classname="Selectors #getSelectedAddress returns selectedAddress" name="Selectors #getSelectedAddress returns selectedAddress" time="0.001">
    </testcase>
    <testcase classname="Selectors #isHardwareWallet returns false if it is not a HW wallet" name="Selectors #isHardwareWallet returns false if it is not a HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors #isHardwareWallet returns true if it is a Ledger HW wallet" name="Selectors #isHardwareWallet returns true if it is a Ledger HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors #isHardwareWallet returns true if it is a Trezor HW wallet" name="Selectors #isHardwareWallet returns true if it is a Trezor HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors #getHardwareWalletType returns undefined if it is not a HW wallet" name="Selectors #getHardwareWalletType returns undefined if it is not a HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors #getHardwareWalletType returns &quot;Ledger Hardware&quot; if it is a Ledger HW wallet" name="Selectors #getHardwareWalletType returns &quot;Ledger Hardware&quot; if it is a Ledger HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors #getHardwareWalletType returns &quot;Trezor Hardware&quot; if it is a Trezor HW wallet" name="Selectors #getHardwareWalletType returns &quot;Trezor Hardware&quot; if it is a Trezor HW wallet" time="0">
    </testcase>
    <testcase classname="Selectors returns selected identity" name="Selectors returns selected identity" time="0">
    </testcase>
    <testcase classname="Selectors returns selected account" name="Selectors returns selected account" time="0.001">
    </testcase>
    <testcase classname="Selectors #getTokenExchangeRates returns token exchange rates" name="Selectors #getTokenExchangeRates returns token exchange rates" time="0">
    </testcase>
    <testcase classname="Selectors #checkNetworkOrAccountNotSupports1559 returns false if network and account supports EIP-1559" name="Selectors #checkNetworkOrAccountNotSupports1559 returns false if network and account supports EIP-1559" time="0">
    </testcase>
    <testcase classname="Selectors #checkNetworkOrAccountNotSupports1559 returns true if network does not support EIP-1559" name="Selectors #checkNetworkOrAccountNotSupports1559 returns true if network does not support EIP-1559" time="0">
    </testcase>
    <testcase classname="Selectors #getAddressBook should return the address book" name="Selectors #getAddressBook should return the address book" time="0.001">
    </testcase>
    <testcase classname="Selectors returns accounts with balance, address, and name from identity and accounts in state" name="Selectors returns accounts with balance, address, and name from identity and accounts in state" time="0.001">
    </testcase>
    <testcase classname="Selectors returns selected account with balance, address, and name from accountsWithSendEtherInfoSelector" name="Selectors returns selected account with balance, address, and name from accountsWithSendEtherInfoSelector" time="0">
    </testcase>
    <testcase classname="Selectors #getGasIsLoading" name="Selectors #getGasIsLoading" time="0.005">
    </testcase>
    <testcase classname="Selectors #getCurrentCurrency" name="Selectors #getCurrentCurrency" time="0">
    </testcase>
    <testcase classname="Selectors #getTotalUnapprovedCount" name="Selectors #getTotalUnapprovedCount" time="0">
    </testcase>
    <testcase classname="Selectors #getUseTokenDetection" name="Selectors #getUseTokenDetection" time="0">
    </testcase>
    <testcase classname="Selectors #getTokenList" name="Selectors #getTokenList" time="0">
    </testcase>
    <testcase classname="Selectors #getAdvancedGasFeeValues" name="Selectors #getAdvancedGasFeeValues" time="0">
    </testcase>
    <testcase classname="Selectors #getIsAdvancedGasFeeDefault" name="Selectors #getIsAdvancedGasFeeDefault" time="0">
    </testcase>
    <testcase classname="Selectors #getAppIsLoading" name="Selectors #getAppIsLoading" time="0">
    </testcase>
    <testcase classname="Selectors #getNotifications" name="Selectors #getNotifications" time="0">
    </testcase>
    <testcase classname="Selectors #getUnreadNotificationsCount" name="Selectors #getUnreadNotificationsCount" time="0">
    </testcase>
    <testcase classname="Selectors #getUnreadNotifications" name="Selectors #getUnreadNotifications" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Index Tests" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="0.752" tests="1">
    <testcase classname="Index Tests should get locale messages by calling setupLocale" name="Index Tests should get locale messages by calling setupLocale" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="send-row-error-message container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:27" time="1.517" tests="1">
    <testcase classname="send-row-error-message container mapStateToProps() should map the correct properties to props" name="send-row-error-message container mapStateToProps() should map the correct properties to props" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedGasInputs" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:27" time="1.367" tests="8">
    <testcase classname="AdvancedGasInputs won&apos;t update gasPrice in props before debounce" name="AdvancedGasInputs won&apos;t update gasPrice in props before debounce" time="0.034">
    </testcase>
    <testcase classname="AdvancedGasInputs simulates onChange on gas price after debounce" name="AdvancedGasInputs simulates onChange on gas price after debounce" time="0.017">
    </testcase>
    <testcase classname="AdvancedGasInputs wont update gasLimit in props before debounce" name="AdvancedGasInputs wont update gasLimit in props before debounce" time="0.007">
    </testcase>
    <testcase classname="AdvancedGasInputs simulates onChange on gas limit after debounce" name="AdvancedGasInputs simulates onChange on gas limit after debounce" time="0.01">
    </testcase>
    <testcase classname="AdvancedGasInputs errors when insufficientBalance under gas price and gas limit" name="AdvancedGasInputs errors when insufficientBalance under gas price and gas limit" time="0.007">
    </testcase>
    <testcase classname="AdvancedGasInputs errors zero gas price / speed up" name="AdvancedGasInputs errors zero gas price / speed up" time="0.017">
    </testcase>
    <testcase classname="AdvancedGasInputs warns when custom gas price is too low" name="AdvancedGasInputs warns when custom gas price is too low" time="0.008">
    </testcase>
    <testcase classname="AdvancedGasInputs errors when custom gas price is too excessive" name="AdvancedGasInputs errors when custom gas price is too excessive" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="migration #42" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="0.664" tests="3">
    <testcase classname="migration #42 should update the version metadata" name="migration #42 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #42 should set connectedStatusPopoverHasBeenShown to false" name="migration #42 should set connectedStatusPopoverHasBeenShown to false" time="0.001">
    </testcase>
    <testcase classname="migration #42 should initialize AppStateController if it does not exist" name="migration #42 should initialize AppStateController if it does not exist" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #62" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="0.759" tests="4">
    <testcase classname="migration #62 should update the version metadata" name="migration #62 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #62 should remove metaMetricsSendCount from MetaMetricsController" name="migration #62 should remove metaMetricsSendCount from MetaMetricsController" time="0">
    </testcase>
    <testcase classname="migration #62 should remove metaMetricsSendCount from MetaMetricsController (falsey but defined)" name="migration #62 should remove metaMetricsSendCount from MetaMetricsController (falsey but defined)" time="0">
    </testcase>
    <testcase classname="migration #62 should not modify MetaMetricsController when metaMetricsSendCount is undefined" name="migration #62 should not modify MetaMetricsController when metaMetricsSendCount is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SeedPhrase Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="1.526" tests="5">
    <testcase classname="SeedPhrase Component should match snapshot" name="SeedPhrase Component should match snapshot" time="0.032">
    </testcase>
    <testcase classname="SeedPhrase Component should render confirm seed phrase component with seed-phrase/confirm route" name="SeedPhrase Component should render confirm seed phrase component with seed-phrase/confirm route" time="0.029">
    </testcase>
    <testcase classname="SeedPhrase Component should render reveal-seed-phrase component with /seed-phrase route" name="SeedPhrase Component should render reveal-seed-phrase component with /seed-phrase route" time="0.01">
    </testcase>
    <testcase classname="SeedPhrase Component should render reveal-seed-phrase component with /backup-seed-phrase route" name="SeedPhrase Component should render reveal-seed-phrase component with /backup-seed-phrase route" time="0.005">
    </testcase>
    <testcase classname="SeedPhrase Component should render reveal-seed-phrase component with /seed-phrase-intro route" name="SeedPhrase Component should render reveal-seed-phrase component with /seed-phrase-intro route" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="buildSnapRestrictedMethodSpecifications" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:28" time="1.409" tests="2">
    <testcase classname="buildSnapRestrictedMethodSpecifications creates valid permission specification objects" name="buildSnapRestrictedMethodSpecifications creates valid permission specification objects" time="0.003">
    </testcase>
    <testcase classname="buildSnapEndowmentSpecifications creates valid permission specification objects" name="buildSnapEndowmentSpecifications creates valid permission specification objects" time="0">
    </testcase>
  </testsuite>
  <testsuite name="NewNetworkInfo" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:29" time="1.349" tests="7">
    <testcase classname="NewNetworkInfo should render title" name="NewNetworkInfo should render title" time="0.062">
    </testcase>
    <testcase classname="NewNetworkInfo should render a question mark icon image" name="NewNetworkInfo should render a question mark icon image" time="0.011">
    </testcase>
    <testcase classname="NewNetworkInfo should render Ethereum Mainnet caption" name="NewNetworkInfo should render Ethereum Mainnet caption" time="0.021">
    </testcase>
    <testcase classname="NewNetworkInfo should render things to keep in mind text" name="NewNetworkInfo should render things to keep in mind text" time="0.01">
    </testcase>
    <testcase classname="NewNetworkInfo should render things to keep in mind text when token detection support is not available" name="NewNetworkInfo should render things to keep in mind text when token detection support is not available" time="0.016">
    </testcase>
    <testcase classname="NewNetworkInfo should not render first bullet when provider ticker is null" name="NewNetworkInfo should not render first bullet when provider ticker is null" time="0.017">
    </testcase>
    <testcase classname="NewNetworkInfo should render click to manually add link" name="NewNetworkInfo should render click to manually add link" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="LoadingSwapsQuotes" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:29" time="1.221" tests="1">
    <testcase classname="LoadingSwapsQuotes renders the component with initial props" name="LoadingSwapsQuotes renders the component with initial props" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="AssetList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:29" time="1.666" tests="1">
    <testcase classname="AssetList renders AssetList component and shows Refresh List text" name="AssetList renders AssetList component and shows Refresh List text" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="CancelTransaction Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:30" time="1.15" tests="2">
    <testcase classname="CancelTransaction Component should render a CancelTransaction modal" name="CancelTransaction Component should render a CancelTransaction modal" time="0.014">
    </testcase>
    <testcase classname="CancelTransaction Component should pass the correct props to the Modal component" name="CancelTransaction Component should pass the correct props to the Modal component" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="GasDetailsItem" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:30" time="1.22" tests="1">
    <testcase classname="GasDetailsItem should render label" name="GasDetailsItem should render label" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="ArrowIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:29" time="2.086" tests="1">
    <testcase classname="ArrowIcon renders the ArrowIcon component" name="ArrowIcon renders the ArrowIcon component" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Selection Action" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:30" time="1.191" tests="2">
    <testcase classname="Selection Action clicks import wallet to route to import FTF" name="Selection Action clicks import wallet to route to import FTF" time="0.03">
    </testcase>
    <testcase classname="Selection Action clicks create wallet to route to create FTF" name="Selection Action clicks create wallet to route to create FTF" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="caveat mutators" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:30" time="1.274" tests="3">
    <testcase classname="caveat mutators restrictReturnedAccounts removeAccount returns the no-op operation if the target account is not permitted" name="caveat mutators restrictReturnedAccounts removeAccount returns the no-op operation if the target account is not permitted" time="0.001">
    </testcase>
    <testcase classname="caveat mutators restrictReturnedAccounts removeAccount returns the update operation and a new value if the target account is permitted" name="caveat mutators restrictReturnedAccounts removeAccount returns the update operation and a new value if the target account is permitted" time="0">
    </testcase>
    <testcase classname="caveat mutators restrictReturnedAccounts removeAccount returns the revoke permission operation the target account is the only permitted account" name="caveat mutators restrictReturnedAccounts removeAccount returns the revoke permission operation the target account is the only permitted account" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CountdownTimer" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:31" time="1.079" tests="1">
    <testcase classname="CountdownTimer renders the component with initial props" name="CountdownTimer renders the component with initial props" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="MetaMetrics Opt In" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:31" time="1.142" tests="2">
    <testcase classname="MetaMetrics Opt In passes false to setParticipateInMetaMetrics and hides modal" name="MetaMetrics Opt In passes false to setParticipateInMetaMetrics and hides modal" time="0.029">
    </testcase>
    <testcase classname="MetaMetrics Opt In passes true to setParticipateInMetaMetrics and hides modal" name="MetaMetrics Opt In passes true to setParticipateInMetaMetrics and hides modal" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="BuildQuote" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:30" time="2.725" tests="1">
    <testcase classname="BuildQuote renders the component with initial props" name="BuildQuote renders the component with initial props" time="0.11">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Detail Row Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:31" time="1.35" tests="2">
    <testcase classname="Confirm Detail Row Component should match snapshot" name="Confirm Detail Row Component should match snapshot" time="0.051">
    </testcase>
    <testcase classname="Confirm Detail Row Component should only render children when fullscreen and showEdit is false &amp; snapshot match" name="Confirm Detail Row Component should only render children when fullscreen and showEdit is false &amp; snapshot match" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useGasFeeErrors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:31" time="2.1" tests="26">
    <testcase classname="useGasFeeErrors gasLimit validation does not returns gasLimitError if gasLimit is not below minimum" name="useGasFeeErrors gasLimit validation does not returns gasLimitError if gasLimit is not below minimum" time="0.008">
    </testcase>
    <testcase classname="useGasFeeErrors gasLimit validation returns gasLimitError if gasLimit is below minimum" name="useGasFeeErrors gasLimit validation returns gasLimitError if gasLimit is below minimum" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates does not return maxPriorityFeeError if maxPriorityFee is not 0" name="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates does not return maxPriorityFeeError if maxPriorityFee is not 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates return maxPriorityFeeError if maxPriorityFee is 0" name="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates return maxPriorityFeeError if maxPriorityFee is 0" time="0.013">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation Legacy estimates does not return maxPriorityFeeError if maxPriorityFee is 0" name="useGasFeeErrors maxPriorityFee validation Legacy estimates does not return maxPriorityFeeError if maxPriorityFee is 0" time="0.029">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return maxFeeError if maxFee is greater than maxPriorityFee" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return maxFeeError if maxFee is greater than maxPriorityFee" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates return maxFeeError if maxFee is less than maxPriorityFee" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates return maxFeeError if maxFee is less than maxPriorityFee" time="0.003">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return MAX_FEE_IMBALANCE error if maxPriorityFeePerGas is 0" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return MAX_FEE_IMBALANCE error if maxPriorityFeePerGas is 0" time="0.005">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation Legacy estimates does not return maxFeeError if maxFee is less than maxPriorityFee" name="useGasFeeErrors maxFee validation Legacy estimates does not return maxFeeError if maxFee is less than maxPriorityFee" time="0.004">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation EIP1559 compliant estimates does not return gasPriceError if gasPrice is 0" name="useGasFeeErrors gasPrice validation EIP1559 compliant estimates does not return gasPriceError if gasPrice is 0" time="0.003">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation Legacy estimates returns gasPriceError if gasPrice is 0" name="useGasFeeErrors gasPrice validation Legacy estimates returns gasPriceError if gasPrice is 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation Legacy estimates does not return gasPriceError if gasPrice is &gt; 0" name="useGasFeeErrors gasPrice validation Legacy estimates does not return gasPriceError if gasPrice is &gt; 0" time="0.005">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates does not return maxPriorityFeeWarning if maxPriorityFee is &gt; suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates does not return maxPriorityFeeWarning if maxPriorityFee is &gt; suggestedMaxPriorityFeePerGas" time="0.003">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &lt; suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &lt; suggestedMaxPriorityFeePerGas" time="0.004">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &gt; gasFeeEstimates.high.suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &gt; gasFeeEstimates.high.suggestedMaxPriorityFeePerGas" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning Legacy estimates does not return maxPriorityFeeWarning if maxPriorityFee is &lt; gasFeeEstimates.low.suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning Legacy estimates does not return maxPriorityFeeWarning if maxPriorityFee is &lt; gasFeeEstimates.low.suggestedMaxPriorityFeePerGas" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates does not return maxFeeWarning if maxFee is &gt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates does not return maxFeeWarning if maxFee is &gt; suggestedMaxFeePerGas" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" time="0.007">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if gasFeeEstimates are high and maxFee is &gt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if gasFeeEstimates are high and maxFee is &gt; suggestedMaxFeePerGas" time="0.003">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning Legacy estimates does not return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning Legacy estimates does not return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors Balance Error is false if balance is greater than transaction value" name="useGasFeeErrors Balance Error is false if balance is greater than transaction value" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors Balance Error is true if balance is less than transaction value" name="useGasFeeErrors Balance Error is true if balance is less than transaction value" time="0.006">
    </testcase>
    <testcase classname="useGasFeeErrors Simulation Error is false if transaction has falsy values for simulationFails" name="useGasFeeErrors Simulation Error is false if transaction has falsy values for simulationFails" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors Simulation Error is true if transaction.simulationFails is true" name="useGasFeeErrors Simulation Error is true if transaction.simulationFails is true" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors estimatesUnavailableWarning is false if supportsEIP1559 and gasEstimateType is fee-market" name="useGasFeeErrors estimatesUnavailableWarning is false if supportsEIP1559 and gasEstimateType is fee-market" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors estimatesUnavailableWarning is true if supportsEIP1559 and gasEstimateType is not fee-market" name="useGasFeeErrors estimatesUnavailableWarning is true if supportsEIP1559 and gasEstimateType is not fee-market" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NetworkStatistics" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:32" time="1.158" tests="9">
    <testcase classname="NetworkStatistics should render the latest base fee rounded to no decimal places" name="NetworkStatistics should render the latest base fee rounded to no decimal places" time="0.021">
    </testcase>
    <testcase classname="NetworkStatistics should not render the latest base fee if it is not present" name="NetworkStatistics should not render the latest base fee if it is not present" time="0.005">
    </testcase>
    <testcase classname="NetworkStatistics should not render the latest base fee if no gas fee estimates are available" name="NetworkStatistics should not render the latest base fee if no gas fee estimates are available" time="0.002">
    </testcase>
    <testcase classname="NetworkStatistics should render the latest priority fee range, with the low end of the range rounded to 1 decimal place and the high end rounded to no decimal places" name="NetworkStatistics should render the latest priority fee range, with the low end of the range rounded to 1 decimal place and the high end rounded to no decimal places" time="0.005">
    </testcase>
    <testcase classname="NetworkStatistics should not render the latest priority fee range if it is not present" name="NetworkStatistics should not render the latest priority fee range if it is not present" time="0.001">
    </testcase>
    <testcase classname="NetworkStatistics should not render the latest priority fee range if no gas fee estimates are available" name="NetworkStatistics should not render the latest priority fee range if no gas fee estimates are available" time="0.002">
    </testcase>
    <testcase classname="NetworkStatistics should render the network status slider" name="NetworkStatistics should render the network status slider" time="0.005">
    </testcase>
    <testcase classname="NetworkStatistics should not render the network status slider if the network congestion is not available" name="NetworkStatistics should not render the network status slider if the network congestion is not available" time="0.001">
    </testcase>
    <testcase classname="NetworkStatistics should not render the network status slider if no gas fee estimates are available" name="NetworkStatistics should not render the network status slider if no gas fee estimates are available" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="TokenInput Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:32" time="1.264" tests="10">
    <testcase classname="TokenInput Component rendering should render properly" name="TokenInput Component rendering should render properly" time="0.028">
    </testcase>
    <testcase classname="TokenInput Component rendering should render properly with tokenExchangeRates" name="TokenInput Component rendering should render properly with tokenExchangeRates" time="0.012">
    </testcase>
    <testcase classname="TokenInput Component rendering should render properly with a token value for ETH" name="TokenInput Component rendering should render properly with a token value for ETH" time="0.009">
    </testcase>
    <testcase classname="TokenInput Component rendering should render properly with a token value for fiat" name="TokenInput Component rendering should render properly with a token value for fiat" time="0.012">
    </testcase>
    <testcase classname="TokenInput Component rendering should render properly with a token value for fiat, but hideConversion is true" name="TokenInput Component rendering should render properly with a token value for fiat, but hideConversion is true" time="0.005">
    </testcase>
    <testcase classname="TokenInput Component handling actions should call onChange on input changes with the hex value for ETH" name="TokenInput Component handling actions should call onChange on input changes with the hex value for ETH" time="0.008">
    </testcase>
    <testcase classname="TokenInput Component handling actions should call onChange on input changes with the hex value for fiat" name="TokenInput Component handling actions should call onChange on input changes with the hex value for fiat" time="0.007">
    </testcase>
    <testcase classname="TokenInput Component handling actions should change the state and pass in a new decimalValue when props.value changes" name="TokenInput Component handling actions should change the state and pass in a new decimalValue when props.value changes" time="0.008">
    </testcase>
    <testcase classname="TokenInput Component Token Input Decimals Check should render incorrect hex onChange when input decimals is more than token decimals" name="TokenInput Component Token Input Decimals Check should render incorrect hex onChange when input decimals is more than token decimals" time="0.006">
    </testcase>
    <testcase classname="TokenInput Component Token Input Decimals Check should render correct hex onChange when input decimals is more than token decimals by omitting excess fractional part on blur" name="TokenInput Component Token Input Decimals Check should render correct hex onChange when input decimals is more than token decimals by omitting excess fractional part on blur" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Notifications" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:33" time="1.142" tests="3">
    <testcase classname="Notifications can render a list of notifications" name="Notifications can render a list of notifications" time="0.057">
    </testcase>
    <testcase classname="Notifications can render an empty list of notifications" name="Notifications can render an empty list of notifications" time="0.034">
    </testcase>
    <testcase classname="NotificationItem can render notification item" name="NotificationItem can render notification item" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="AmountMaxButton Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:33" time="1.146" tests="3">
    <testcase classname="AmountMaxButton Component render should render a &quot;Max&quot; button" name="AmountMaxButton Component render should render a &quot;Max&quot; button" time="0.018">
    </testcase>
    <testcase classname="AmountMaxButton Component render should dispatch action to set mode to MAX" name="AmountMaxButton Component render should dispatch action to set mode to MAX" time="0.095">
    </testcase>
    <testcase classname="AmountMaxButton Component render should dispatch action to set amount mode to INPUT" name="AmountMaxButton Component render should dispatch action to set amount mode to INPUT" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="ListItem" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:32" time="1.522" tests="10">
    <testcase classname="ListItem includes the data-testid" name="ListItem includes the data-testid" time="0.001">
    </testcase>
    <testcase classname="ListItem renders &quot;Hello World&quot; title" name="ListItem renders &quot;Hello World&quot; title" time="0.003">
    </testcase>
    <testcase classname="ListItem renders &quot;I am a list item&quot; subtitle" name="ListItem renders &quot;I am a list item&quot; subtitle" time="0.001">
    </testcase>
    <testcase classname="ListItem attaches external className" name="ListItem attaches external className" time="0">
    </testcase>
    <testcase classname="ListItem renders content on the right side of the list item" name="ListItem renders content on the right side of the list item" time="0.001">
    </testcase>
    <testcase classname="ListItem renders content in the middle of the list item" name="ListItem renders content in the middle of the list item" time="0.002">
    </testcase>
    <testcase classname="ListItem renders list item actions" name="ListItem renders list item actions" time="0.003">
    </testcase>
    <testcase classname="ListItem renders the title icon" name="ListItem renders the title icon" time="0.007">
    </testcase>
    <testcase classname="ListItem renders the list item icon" name="ListItem renders the list item icon" time="0.003">
    </testcase>
    <testcase classname="ListItem handles click action and fires onClick" name="ListItem handles click action and fires onClick" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ShowHideToggle" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:32" time="1.788" tests="18">
    <testcase classname="ShowHideToggle should set title" name="ShowHideToggle should set title" time="0.029">
    </testcase>
    <testcase classname="ShowHideToggle should set test ID" name="ShowHideToggle should set test ID" time="0.012">
    </testcase>
    <testcase classname="ShowHideToggle should show correct aria-label when shown" name="ShowHideToggle should show correct aria-label when shown" time="0.005">
    </testcase>
    <testcase classname="ShowHideToggle should show correct aria-label when hidden" name="ShowHideToggle should show correct aria-label when hidden" time="0.007">
    </testcase>
    <testcase classname="ShowHideToggle should show correct checkbox state when shown" name="ShowHideToggle should show correct checkbox state when shown" time="0.057">
    </testcase>
    <testcase classname="ShowHideToggle should show correct checkbox state when hidden" name="ShowHideToggle should show correct checkbox state when hidden" time="0.011">
    </testcase>
    <testcase classname="ShowHideToggle enabled should show checkbox as enabled" name="ShowHideToggle enabled should show checkbox as enabled" time="0.006">
    </testcase>
    <testcase classname="ShowHideToggle enabled should be accessible" name="ShowHideToggle enabled should be accessible" time="0.015">
    </testcase>
    <testcase classname="ShowHideToggle enabled shown should call onChange when clicked" name="ShowHideToggle enabled shown should call onChange when clicked" time="0.028">
    </testcase>
    <testcase classname="ShowHideToggle enabled shown should call onChange on space" name="ShowHideToggle enabled shown should call onChange on space" time="0.018">
    </testcase>
    <testcase classname="ShowHideToggle enabled hidden should call onChange when clicked" name="ShowHideToggle enabled hidden should call onChange when clicked" time="0.037">
    </testcase>
    <testcase classname="ShowHideToggle enabled hidden should call onChange on space" name="ShowHideToggle enabled hidden should call onChange on space" time="0.017">
    </testcase>
    <testcase classname="ShowHideToggle disabled should show checkbox as disabled" name="ShowHideToggle disabled should show checkbox as disabled" time="0.004">
    </testcase>
    <testcase classname="ShowHideToggle disabled should be accessible" name="ShowHideToggle disabled should be accessible" time="0.008">
    </testcase>
    <testcase classname="ShowHideToggle disabled shown should not call onChange when clicked" name="ShowHideToggle disabled shown should not call onChange when clicked" time="0.011">
    </testcase>
    <testcase classname="ShowHideToggle disabled shown should not call onChange on space" name="ShowHideToggle disabled shown should not call onChange on space" time="0.014">
    </testcase>
    <testcase classname="ShowHideToggle disabled hidden should not call onChange when clicked" name="ShowHideToggle disabled hidden should not call onChange when clicked" time="0.014">
    </testcase>
    <testcase classname="ShowHideToggle disabled hidden should not call onChange on space" name="ShowHideToggle disabled hidden should not call onChange on space" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Lock" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:32" time="2.067" tests="2">
    <testcase classname="Lock replaces history with default route when isUnlocked false" name="Lock replaces history with default route when isUnlocked false" time="0.034">
    </testcase>
    <testcase classname="Lock locks and pushes history with default route when isUnlocked true" name="Lock locks and pushes history with default route when isUnlocked true" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="AvatarNetwork" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="0.87" tests="5">
    <testcase classname="AvatarNetwork should render correctly" name="AvatarNetwork should render correctly" time="0.025">
    </testcase>
    <testcase classname="AvatarNetwork should render image of Avatar Network" name="AvatarNetwork should render image of Avatar Network" time="0.02">
    </testcase>
    <testcase classname="AvatarNetwork should render the first letter of the networkName prop if no networkImageUrl is provided" name="AvatarNetwork should render the first letter of the networkName prop if no networkImageUrl is provided" time="0.006">
    </testcase>
    <testcase classname="AvatarNetwork should render halo effect if showHalo is true and image url is there" name="AvatarNetwork should render halo effect if showHalo is true and image url is there" time="0.028">
    </testcase>
    <testcase classname="AvatarNetwork should render the first letter of the networkName prop when showHalo is true and no image url is provided" name="AvatarNetwork should render the first letter of the networkName prop when showHalo is true and no image url is provided" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:33" time="1.672" tests="1">
    <testcase classname=" renders transaction total banner stories with Base state" name=" renders transaction total banner stories with Base state" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="AwaitingSwap" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="1.34" tests="2">
    <testcase classname="AwaitingSwap renders the component with initial props" name="AwaitingSwap renders the component with initial props" time="0.091">
    </testcase>
    <testcase classname="AwaitingSwap renders the component with for completed swap" name="AwaitingSwap renders the component with for completed swap" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="SendAmountRow Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="1.37" tests="6">
    <testcase classname="SendAmountRow Component updateAmount should call updateSendAmount" name="SendAmountRow Component updateAmount should call updateSendAmount" time="0.005">
    </testcase>
    <testcase classname="SendAmountRow Component render should render a SendRowWrapper component" name="SendAmountRow Component render should render a SendRowWrapper component" time="0.007">
    </testcase>
    <testcase classname="SendAmountRow Component render should pass the correct props to SendRowWrapper" name="SendAmountRow Component render should pass the correct props to SendRowWrapper" time="0.002">
    </testcase>
    <testcase classname="SendAmountRow Component render should render an AmountMaxButton as the first child of the SendRowWrapper" name="SendAmountRow Component render should render an AmountMaxButton as the first child of the SendRowWrapper" time="0.004">
    </testcase>
    <testcase classname="SendAmountRow Component render should render a UserPreferencedTokenInput as the second child of the SendRowWrapper" name="SendAmountRow Component render should render a UserPreferencedTokenInput as the second child of the SendRowWrapper" time="0.002">
    </testcase>
    <testcase classname="SendAmountRow Component render should render the UserPreferencedTokenInput with the correct props" name="SendAmountRow Component render should render the UserPreferencedTokenInput with the correct props" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="NetworksListItem Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="1.284" tests="2">
    <testcase classname="NetworksListItem Component should render a Mainnet network item correctly" name="NetworksListItem Component should render a Mainnet network item correctly" time="0.047">
    </testcase>
    <testcase classname="NetworksListItem Component should render a test network item correctly" name="NetworksListItem Component should render a test network item correctly" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="SortList" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="1.558" tests="1">
    <testcase classname="SortList renders the component with initial props" name="SortList renders the component with initial props" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Collectible Items" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:34" time="1.61" tests="12">
    <testcase classname="Collectible Items Collectibles Detection Notice should render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles" name="Collectible Items Collectibles Detection Notice should render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles" time="0.035">
    </testcase>
    <testcase classname="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has collectibles" name="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has collectibles" time="0.011">
    </testcase>
    <testcase classname="Collectible Items Collectibles Detection Notice should take user to the experimental settings tab in settings when user clicks &quot;Turn on NFT detection in Settings&quot;" name="Collectible Items Collectibles Detection Notice should take user to the experimental settings tab in settings when user clicks &quot;Turn on NFT detection in Settings&quot;" time="0.008">
    </testcase>
    <testcase classname="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles but use collectible autodetection preference is set to true" name="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles but use collectible autodetection preference is set to true" time="0.004">
    </testcase>
    <testcase classname="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles but user has dismissed the notice before" name="Collectible Items Collectibles Detection Notice should not render the Collectibles Detection Notice when currently selected network is Mainnet and currently selected account has no collectibles but user has dismissed the notice before" time="0.014">
    </testcase>
    <testcase classname="Collectible Items Collectibles Detection Notice should call setCollectibesDetectionNoticeDismissed when users clicks &quot;X&quot;" name="Collectible Items Collectibles Detection Notice should call setCollectibesDetectionNoticeDismissed when users clicks &quot;X&quot;" time="0.011">
    </testcase>
    <testcase classname="Collectible Items Collections should render the name of the collections and number of collectibles in each collection if current account/chainId combination has collectibles" name="Collectible Items Collections should render the name of the collections and number of collectibles in each collection if current account/chainId combination has collectibles" time="0.01">
    </testcase>
    <testcase classname="Collectible Items Collections should not render collections if current account/chainId combination has collectibles" name="Collectible Items Collections should not render collections if current account/chainId combination has collectibles" time="0.006">
    </testcase>
    <testcase classname="Collectible Items Collectibles options should render a link &quot;Refresh list&quot; when some collectibles are present on mainnet and collectible auto-detection preference is set to true, which, when clicked calls methods DetectCollectibles and checkAndUpdateCollectiblesOwnershipStatus" name="Collectible Items Collectibles options should render a link &quot;Refresh list&quot; when some collectibles are present on mainnet and collectible auto-detection preference is set to true, which, when clicked calls methods DetectCollectibles and checkAndUpdateCollectiblesOwnershipStatus" time="0.008">
    </testcase>
    <testcase classname="Collectible Items Collectibles options should render a link &quot;Refresh list&quot; when some collectibles are present on a non-mainnet chain, which, when clicked calls a method checkAndUpdateCollectiblesOwnershipStatus" name="Collectible Items Collectibles options should render a link &quot;Refresh list&quot; when some collectibles are present on a non-mainnet chain, which, when clicked calls a method checkAndUpdateCollectiblesOwnershipStatus" time="0.012">
    </testcase>
    <testcase classname="Collectible Items Collectibles options should render a link &quot;Enable autodetect&quot; when some collectibles are present and collectible auto-detection preference is set to false, which, when clicked sends user to the experimental tab of settings" name="Collectible Items Collectibles options should render a link &quot;Enable autodetect&quot; when some collectibles are present and collectible auto-detection preference is set to false, which, when clicked sends user to the experimental tab of settings" time="0.006">
    </testcase>
    <testcase classname="Collectible Items Collectibles options should render a link &quot;Import NFTs&quot; when some collectibles are present, which, when clicked calls the passed in onAddNFT method" name="Collectible Items Collectibles options should render a link &quot;Import NFTs&quot; when some collectibles are present, which, when clicked calls the passed in onAddNFT method" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="ButtonGroup Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:35" time="0.903" tests="10">
    <testcase classname="ButtonGroup Component componentDidUpdate should set the activeButtonIndex to the updated newActiveButtonIndex" name="ButtonGroup Component componentDidUpdate should set the activeButtonIndex to the updated newActiveButtonIndex" time="0.006">
    </testcase>
    <testcase classname="ButtonGroup Component componentDidUpdate should not set the activeButtonIndex to an updated newActiveButtonIndex that is not a number" name="ButtonGroup Component componentDidUpdate should not set the activeButtonIndex to an updated newActiveButtonIndex that is not a number" time="0.001">
    </testcase>
    <testcase classname="ButtonGroup Component handleButtonClick should set the activeButtonIndex" name="ButtonGroup Component handleButtonClick should set the activeButtonIndex" time="0.001">
    </testcase>
    <testcase classname="ButtonGroup Component renderButtons should render a button for each child" name="ButtonGroup Component renderButtons should render a button for each child" time="0.002">
    </testcase>
    <testcase classname="ButtonGroup Component renderButtons should render the correct button with an active state" name="ButtonGroup Component renderButtons should render the correct button with an active state" time="0.002">
    </testcase>
    <testcase classname="ButtonGroup Component renderButtons should call handleButtonClick and the respective button&apos;s onClick method when a button is clicked" name="ButtonGroup Component renderButtons should call handleButtonClick and the respective button&apos;s onClick method when a button is clicked" time="0.001">
    </testcase>
    <testcase classname="ButtonGroup Component renderButtons should render all child buttons as disabled if props.disabled is true" name="ButtonGroup Component renderButtons should render all child buttons as disabled if props.disabled is true" time="0.002">
    </testcase>
    <testcase classname="ButtonGroup Component renderButtons should render the children of the button" name="ButtonGroup Component renderButtons should render the children of the button" time="0.001">
    </testcase>
    <testcase classname="ButtonGroup Component render should render a div with the expected class and style" name="ButtonGroup Component render should render a div with the expected class and style" time="0.001">
    </testcase>
    <testcase classname="ButtonGroup Component render should call renderButtons when rendering" name="ButtonGroup Component render should call renderButtons when rendering" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CurrencyInput Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:35" time="1.337" tests="9">
    <testcase classname="CurrencyInput Component rendering should render properly without a suffix" name="CurrencyInput Component rendering should render properly without a suffix" time="0.028">
    </testcase>
    <testcase classname="CurrencyInput Component rendering should render properly with a suffix" name="CurrencyInput Component rendering should render properly with a suffix" time="0.008">
    </testcase>
    <testcase classname="CurrencyInput Component rendering should render properly with an ETH value" name="CurrencyInput Component rendering should render properly with an ETH value" time="0.004">
    </testcase>
    <testcase classname="CurrencyInput Component rendering should render properly with a fiat value" name="CurrencyInput Component rendering should render properly with a fiat value" time="0.007">
    </testcase>
    <testcase classname="CurrencyInput Component rendering should render properly with a native value when hideSecondary is true" name="CurrencyInput Component rendering should render properly with a native value when hideSecondary is true" time="0.005">
    </testcase>
    <testcase classname="CurrencyInput Component handling actions should call onChange on input changes with the hex value for ETH" name="CurrencyInput Component handling actions should call onChange on input changes with the hex value for ETH" time="0.016">
    </testcase>
    <testcase classname="CurrencyInput Component handling actions should call onChange on input changes with the hex value for fiat" name="CurrencyInput Component handling actions should call onChange on input changes with the hex value for fiat" time="0.016">
    </testcase>
    <testcase classname="CurrencyInput Component handling actions should change the state and pass in a new decimalValue when props.value changes" name="CurrencyInput Component handling actions should change the state and pass in a new decimalValue when props.value changes" time="0.013">
    </testcase>
    <testcase classname="CurrencyInput Component handling actions should swap selected currency when swap icon is clicked" name="CurrencyInput Component handling actions should swap selected currency when swap icon is clicked" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="useAddressDetails" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:35" time="1.323" tests="5">
    <testcase classname="useAddressDetails should return empty object if no address is passed" name="useAddressDetails should return empty object if no address is passed" time="0.009">
    </testcase>
    <testcase classname="useAddressDetails should return name from addressBook if address is present in addressBook" name="useAddressDetails should return name from addressBook if address is present in addressBook" time="0.028">
    </testcase>
    <testcase classname="useAddressDetails should return name from identities if address is present in identities" name="useAddressDetails should return name from identities if address is present in identities" time="0.026">
    </testcase>
    <testcase classname="useAddressDetails should return name from tokenlist if address is present in tokens" name="useAddressDetails should return name from tokenlist if address is present in tokens" time="0.004">
    </testcase>
    <testcase classname="useAddressDetails should return shortened address if address is not presend in any of above sources" name="useAddressDetails should return shortened address if address is not presend in any of above sources" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Security Tab" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:35" time="1.767" tests="4">
    <testcase classname="Security Tab navigates to reveal seed words page" name="Security Tab navigates to reveal seed words page" time="0.062">
    </testcase>
    <testcase classname="Security Tab toggles incoming txs" name="Security Tab toggles incoming txs" time="0.033">
    </testcase>
    <testcase classname="Security Tab toggles phishing detection" name="Security Tab toggles phishing detection" time="0.007">
    </testcase>
    <testcase classname="Security Tab toggles metaMetrics" name="Security Tab toggles metaMetrics" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Transaction Duck" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:36" time="1.274" tests="18">
    <testcase classname="Confirm Transaction Duck State changes should initialize state" name="Confirm Transaction Duck State changes should initialize state" time="0.004">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should return state unchanged if it does not match a dispatched actions type" name="Confirm Transaction Duck State changes should return state unchanged if it does not match a dispatched actions type" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should set txData when receiving a UPDATE_TX_DATA action" name="Confirm Transaction Duck State changes should set txData when receiving a UPDATE_TX_DATA action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should set tokenData when receiving a UPDATE_TOKEN_DATA action" name="Confirm Transaction Duck State changes should set tokenData when receiving a UPDATE_TOKEN_DATA action" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should update transaction amounts when receiving an UPDATE_TRANSACTION_AMOUNTS action" name="Confirm Transaction Duck State changes should update transaction amounts when receiving an UPDATE_TRANSACTION_AMOUNTS action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should update transaction fees when receiving an UPDATE_TRANSACTION_FEES action" name="Confirm Transaction Duck State changes should update transaction fees when receiving an UPDATE_TRANSACTION_FEES action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should update transaction totals when receiving an UPDATE_TRANSACTION_TOTALS action" name="Confirm Transaction Duck State changes should update transaction totals when receiving an UPDATE_TRANSACTION_TOTALS action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should update nonce when receiving an UPDATE_NONCE action" name="Confirm Transaction Duck State changes should update nonce when receiving an UPDATE_NONCE action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck State changes should clear confirmTransaction when receiving a FETCH_DATA_END action" name="Confirm Transaction Duck State changes should clear confirmTransaction when receiving a FETCH_DATA_END action" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update txData" name="Confirm Transaction Duck Single actions should create an action to update txData" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update tokenData" name="Confirm Transaction Duck Single actions should create an action to update tokenData" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update transaction amounts" name="Confirm Transaction Duck Single actions should create an action to update transaction amounts" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update transaction fees" name="Confirm Transaction Duck Single actions should create an action to update transaction fees" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update transaction totals" name="Confirm Transaction Duck Single actions should create an action to update transaction totals" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to update nonce" name="Confirm Transaction Duck Single actions should create an action to update nonce" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction Duck Single actions should create an action to clear confirmTransaction" name="Confirm Transaction Duck Single actions should create an action to clear confirmTransaction" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Duck Thunk actions updates txData and updates gas values in confirmTransaction" name="Confirm Transaction Duck Thunk actions updates txData and updates gas values in confirmTransaction" time="0.005">
    </testcase>
    <testcase classname="Confirm Transaction Duck Thunk actions updates confirmTransaction transaction" name="Confirm Transaction Duck Thunk actions updates confirmTransaction transaction" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Delete Network" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:36" time="1.266" tests="3">
    <testcase classname="Confirm Delete Network renders delete network modal title" name="Confirm Delete Network renders delete network modal title" time="0.039">
    </testcase>
    <testcase classname="Confirm Delete Network clicks cancel to hide modal" name="Confirm Delete Network clicks cancel to hide modal" time="0.005">
    </testcase>
    <testcase classname="Confirm Delete Network clicks delete to delete the target and hides modal" name="Confirm Delete Network clicks delete to delete the target and hides modal" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SendContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:36" time="1.447" tests="8">
    <testcase classname="SendContent Component render should render a div with a send-v2__form-row class" name="SendContent Component render should render a div with a send-v2__form-row class" time="0.006">
    </testcase>
    <testcase classname="SendContent Component render should render two children of the root div, with send-v2_form label and field classes" name="SendContent Component render should render two children of the root div, with send-v2_form label and field classes" time="0.002">
    </testcase>
    <testcase classname="SendContent Component render should render the label as a child of the send-v2__form-label" name="SendContent Component render should render the label as a child of the send-v2__form-label" time="0.004">
    </testcase>
    <testcase classname="SendContent Component render should render its first child as a child of the send-v2__form-field" name="SendContent Component render should render its first child as a child of the send-v2__form-field" time="0.002">
    </testcase>
    <testcase classname="SendContent Component render should not render a SendRowErrorMessage if showError is false" name="SendContent Component render should not render a SendRowErrorMessage if showError is false" time="0.015">
    </testcase>
    <testcase classname="SendContent Component render should render a SendRowErrorMessage with and errorType props if showError is true" name="SendContent Component render should render a SendRowErrorMessage with and errorType props if showError is true" time="0.003">
    </testcase>
    <testcase classname="SendContent Component render should render its second child as a child of the send-v2__form-field, if it has two children" name="SendContent Component render should render its second child as a child of the send-v2__form-field, if it has two children" time="0.002">
    </testcase>
    <testcase classname="SendContent Component render should render its first child as the last child of the send-v2__form-label, if it has two children" name="SendContent Component render should render its first child as the last child of the send-v2__form-label, if it has two children" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SwapFailureIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="1.051" tests="1">
    <testcase classname="SwapFailureIcon renders the component" name="SwapFailureIcon renders the component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="useGasFeeErrors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:36" time="2.122" tests="24">
    <testcase classname="useGasFeeErrors gasLimit validation does not returns gasLimitError if gasLimit is not below minimum" name="useGasFeeErrors gasLimit validation does not returns gasLimitError if gasLimit is not below minimum" time="0.01">
    </testcase>
    <testcase classname="useGasFeeErrors gasLimit validation returns gasLimitError if gasLimit is below minimum" name="useGasFeeErrors gasLimit validation returns gasLimitError if gasLimit is below minimum" time="0.003">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates does not return maxPriorityFeeError if maxPriorityFee is not 0" name="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates does not return maxPriorityFeeError if maxPriorityFee is not 0" time="0.005">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates return maxPriorityFeeError if maxPriorityFee is 0" name="useGasFeeErrors maxPriorityFee validation EIP1559 compliant estimates return maxPriorityFeeError if maxPriorityFee is 0" time="0.004">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee validation Legacy estimates does not return maxPriorityFeeError if maxPriorityFee is 0" name="useGasFeeErrors maxPriorityFee validation Legacy estimates does not return maxPriorityFeeError if maxPriorityFee is 0" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return maxFeeError if maxFee is greater than maxPriorityFee" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return maxFeeError if maxFee is greater than maxPriorityFee" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates return maxFeeError if maxFee is less than maxPriorityFee" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates return maxFeeError if maxFee is less than maxPriorityFee" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return MAX_FEE_IMBALANCE error if maxPriorityFeePerGasToUse is 0" name="useGasFeeErrors maxFee validation EIP1559 compliant estimates does not return MAX_FEE_IMBALANCE error if maxPriorityFeePerGasToUse is 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee validation Legacy estimates does not return maxFeeError if maxFee is less than maxPriorityFee" name="useGasFeeErrors maxFee validation Legacy estimates does not return maxFeeError if maxFee is less than maxPriorityFee" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation EIP1559 compliant estimates does not return gasPriceError if gasPrice is 0" name="useGasFeeErrors gasPrice validation EIP1559 compliant estimates does not return gasPriceError if gasPrice is 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation Legacy estimates returns gasPriceError if gasPrice is 0" name="useGasFeeErrors gasPrice validation Legacy estimates returns gasPriceError if gasPrice is 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors gasPrice validation Legacy estimates does not return gasPriceError if gasPrice is &gt; 0" name="useGasFeeErrors gasPrice validation Legacy estimates does not return gasPriceError if gasPrice is &gt; 0" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates does not return maxPriorityFeeWarning if maxPriorityFee is &gt; suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates does not return maxPriorityFeeWarning if maxPriorityFee is &gt; suggestedMaxPriorityFeePerGas" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &lt; suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &lt; suggestedMaxPriorityFeePerGas" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &gt; gasFeeEstimates.high.suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning EIP1559 compliant estimates return maxPriorityFeeWarning if maxPriorityFee is &gt; gasFeeEstimates.high.suggestedMaxPriorityFeePerGas" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors maxPriorityFee warning Legacy estimates does not return maxPriorityFeeWarning if maxPriorityFee is &lt; gasFeeEstimates.low.suggestedMaxPriorityFeePerGas" name="useGasFeeErrors maxPriorityFee warning Legacy estimates does not return maxPriorityFeeWarning if maxPriorityFee is &lt; gasFeeEstimates.low.suggestedMaxPriorityFeePerGas" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates does not return maxFeeWarning if maxFee is &gt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates does not return maxFeeWarning if maxFee is &gt; suggestedMaxFeePerGas" time="0.014">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" time="0.005">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if gasFeeEstimates are high and maxFee is &gt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning EIP1559 compliant estimates return maxFeeWarning if gasFeeEstimates are high and maxFee is &gt; suggestedMaxFeePerGas" time="0.004">
    </testcase>
    <testcase classname="useGasFeeErrors maxFee warning Legacy estimates does not return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" name="useGasFeeErrors maxFee warning Legacy estimates does not return maxFeeWarning if maxFee is &lt; suggestedMaxFeePerGas" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors Balance Error is false if balance is greater than transaction value" name="useGasFeeErrors Balance Error is false if balance is greater than transaction value" time="0.002">
    </testcase>
    <testcase classname="useGasFeeErrors Balance Error is true if balance is less than transaction value" name="useGasFeeErrors Balance Error is true if balance is less than transaction value" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors estimatesUnavailableWarning is false if supportsEIP1559 and gasEstimateType is fee-market" name="useGasFeeErrors estimatesUnavailableWarning is false if supportsEIP1559 and gasEstimateType is fee-market" time="0.001">
    </testcase>
    <testcase classname="useGasFeeErrors estimatesUnavailableWarning is true if supportsEIP1559 and gasEstimateType is not fee-market" name="useGasFeeErrors estimatesUnavailableWarning is true if supportsEIP1559 and gasEstimateType is not fee-market" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BackgroundAnimation" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="0.991" tests="1">
    <testcase classname="BackgroundAnimation renders the component" name="BackgroundAnimation renders the component" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="FirstTimeFlowSwitch" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="1.137" tests="7">
    <testcase classname="FirstTimeFlowSwitch redirects to /welcome route with null props" name="FirstTimeFlowSwitch redirects to /welcome route with null props" time="0.013">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to / route when completedOnboarding is true" name="FirstTimeFlowSwitch redirects to / route when completedOnboarding is true" time="0.003">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to end of flow route when seedPhraseBackedUp is true" name="FirstTimeFlowSwitch redirects to end of flow route when seedPhraseBackedUp is true" time="0.002">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to end of flow route when seedPhraseBackedUp is false" name="FirstTimeFlowSwitch redirects to end of flow route when seedPhraseBackedUp is false" time="0.003">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to /lock route when isUnlocked is true" name="FirstTimeFlowSwitch redirects to /lock route when isUnlocked is true" time="0.005">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to /welcome route when isInitialized is false" name="FirstTimeFlowSwitch redirects to /welcome route when isInitialized is false" time="0.008">
    </testcase>
    <testcase classname="FirstTimeFlowSwitch redirects to /unlock route when isInitialized is true" name="FirstTimeFlowSwitch redirects to /unlock route when isInitialized is true" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="SwapStepIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="1.096" tests="2">
    <testcase classname="SwapStepIcon renders the component with step 1 by default" name="SwapStepIcon renders the component with step 1 by default" time="0.035">
    </testcase>
    <testcase classname="SwapStepIcon renders the component with step 2" name="SwapStepIcon renders the component with step 2" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="gas-modal-page-container container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="1.85" tests="9">
    <testcase classname="gas-modal-page-container container mapDispatchToProps() useCustomGas() should dispatch a useCustomGas action" name="gas-modal-page-container container mapDispatchToProps() useCustomGas() should dispatch a useCustomGas action" time="0.003">
    </testcase>
    <testcase classname="gas-modal-page-container container mapDispatchToProps() cancelAndClose() should dispatch a hideModal action" name="gas-modal-page-container container mapDispatchToProps() cancelAndClose() should dispatch a hideModal action" time="0.001">
    </testcase>
    <testcase classname="gas-modal-page-container container mapDispatchToProps() updateCustomGasPrice() should dispatch a setCustomGasPrice action with the arg passed to updateCustomGasPrice hex prefixed" name="gas-modal-page-container container mapDispatchToProps() updateCustomGasPrice() should dispatch a setCustomGasPrice action with the arg passed to updateCustomGasPrice hex prefixed" time="0.001">
    </testcase>
    <testcase classname="gas-modal-page-container container mapDispatchToProps() updateCustomGasPrice() should dispatch a setCustomGasPrice action" name="gas-modal-page-container container mapDispatchToProps() updateCustomGasPrice() should dispatch a setCustomGasPrice action" time="0">
    </testcase>
    <testcase classname="gas-modal-page-container container mapDispatchToProps() updateCustomGasLimit() should dispatch a setCustomGasLimit action" name="gas-modal-page-container container mapDispatchToProps() updateCustomGasLimit() should dispatch a setCustomGasLimit action" time="0.005">
    </testcase>
    <testcase classname="gas-modal-page-container container mapDispatchToProps() setGasData() should dispatch a updateGasPrice and updateGasLimit action with the correct props" name="gas-modal-page-container container mapDispatchToProps() setGasData() should dispatch a updateGasPrice and updateGasLimit action with the correct props" time="0.002">
    </testcase>
    <testcase classname="gas-modal-page-container container mergeProps should return the expected props when isConfirm is true" name="gas-modal-page-container container mergeProps should return the expected props when isConfirm is true" time="0.002">
    </testcase>
    <testcase classname="gas-modal-page-container container mergeProps should return the expected props when isConfirm is false" name="gas-modal-page-container container mergeProps should return the expected props when isConfirm is false" time="0.001">
    </testcase>
    <testcase classname="gas-modal-page-container container mergeProps should dispatch the expected actions from obSubmit when isConfirm is false and isSpeedUp is true" name="gas-modal-page-container container mergeProps should dispatch the expected actions from obSubmit when isConfirm is false and isSpeedUp is true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useMaxPriorityFeePerGasInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:38" time="1.006" tests="5">
    <testcase classname="useMaxPriorityFeePerGasInput should invoke action createCancelTransaction when cancelTransaction callback is invoked" name="useMaxPriorityFeePerGasInput should invoke action createCancelTransaction when cancelTransaction callback is invoked" time="0.007">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput should invoke action createSpeedUpTransaction when speedUpTransaction callback is invoked" name="useMaxPriorityFeePerGasInput should invoke action createSpeedUpTransaction when speedUpTransaction callback is invoked" time="0.012">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput should invoke action updateTransaction with 10% increased fee when updateTransactionToTenPercentIncreasedGasFee callback is invoked" name="useMaxPriorityFeePerGasInput should invoke action updateTransaction with 10% increased fee when updateTransactionToTenPercentIncreasedGasFee callback is invoked" time="0.008">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput should invoke action updateTransaction with estimate gas values fee when updateTransactionUsingEstimate callback is invoked" name="useMaxPriorityFeePerGasInput should invoke action updateTransaction with estimate gas values fee when updateTransactionUsingEstimate callback is invoked" time="0.003">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput should invoke action updateTransaction with dappSuggestedValues values fee when updateTransactionUsingDAPPSuggestedValues callback is invoked" name="useMaxPriorityFeePerGasInput should invoke action updateTransaction with dappSuggestedValues values fee when updateTransactionUsingDAPPSuggestedValues callback is invoked" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="useGasFeeInputs" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:37" time="2.125" tests="15">
    <testcase classname="useGasFeeInputs when using gasPrice API for estimation passes through the raw estimate values from useGasFeeEstimates" name="useGasFeeInputs when using gasPrice API for estimation passes through the raw estimate values from useGasFeeEstimates" time="0.012">
    </testcase>
    <testcase classname="useGasFeeInputs when using gasPrice API for estimation returns gasPrice appropriately, and &quot;0&quot; for EIP1559 fields" name="useGasFeeInputs when using gasPrice API for estimation returns gasPrice appropriately, and &quot;0&quot; for EIP1559 fields" time="0.003">
    </testcase>
    <testcase classname="useGasFeeInputs when using gasPrice API for estimation updates values when user modifies gasPrice" name="useGasFeeInputs when using gasPrice API for estimation updates values when user modifies gasPrice" time="0.015">
    </testcase>
    <testcase classname="useGasFeeInputs when transaction is type-0 returns gasPrice appropriately, and &quot;0&quot; for EIP1559 fields" name="useGasFeeInputs when transaction is type-0 returns gasPrice appropriately, and &quot;0&quot; for EIP1559 fields" time="0.008">
    </testcase>
    <testcase classname="useGasFeeInputs when using EIP 1559 API for estimation passes through the raw estimate values from useGasFeeEstimates" name="useGasFeeInputs when using EIP 1559 API for estimation passes through the raw estimate values from useGasFeeEstimates" time="0.004">
    </testcase>
    <testcase classname="useGasFeeInputs when using EIP 1559 API for estimation returns EIP-1559 fields appropriately, and &quot;0&quot; for gasPrice fields" name="useGasFeeInputs when using EIP 1559 API for estimation returns EIP-1559 fields appropriately, and &quot;0&quot; for gasPrice fields" time="0.004">
    </testcase>
    <testcase classname="useGasFeeInputs when using EIP 1559 API for estimation updates values when user modifies maxFeePerGas" name="useGasFeeInputs when using EIP 1559 API for estimation updates values when user modifies maxFeePerGas" time="0.005">
    </testcase>
    <testcase classname="useGasFeeInputs when balance is sufficient for minimum transaction cost should return false" name="useGasFeeInputs when balance is sufficient for minimum transaction cost should return false" time="0.002">
    </testcase>
    <testcase classname="useGasFeeInputs when balance is insufficient for minimum transaction cost should return true" name="useGasFeeInputs when balance is insufficient for minimum transaction cost should return true" time="0.002">
    </testcase>
    <testcase classname="useGasFeeInputs callback setEstimateToUse should change estimateToUse value" name="useGasFeeInputs callback setEstimateToUse should change estimateToUse value" time="0.004">
    </testcase>
    <testcase classname="useGasFeeInputs callback onManualChange should change estimateToUse value to custom" name="useGasFeeInputs callback onManualChange should change estimateToUse value to custom" time="0.004">
    </testcase>
    <testcase classname="useGasFeeInputs when showFiat is false does not return fiat values" name="useGasFeeInputs when showFiat is false does not return fiat values" time="0.002">
    </testcase>
    <testcase classname="useGasFeeInputs supportsEIP1559V2 return true for fee_market transaction type" name="useGasFeeInputs supportsEIP1559V2 return true for fee_market transaction type" time="0.002">
    </testcase>
    <testcase classname="useGasFeeInputs supportsEIP1559V2 return false for legacy transaction type" name="useGasFeeInputs supportsEIP1559V2 return false for legacy transaction type" time="0.004">
    </testcase>
    <testcase classname="useGasFeeInputs editGasMode should return editGasMode passed" name="useGasFeeInputs editGasMode should return editGasMode passed" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="QuotesBackdrop" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:39" time="1.069" tests="1">
    <testcase classname="QuotesBackdrop renders the component with initial props" name="QuotesBackdrop renders the component with initial props" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="ExchangeRateDisplay" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:39" time="1.134" tests="1">
    <testcase classname="ExchangeRateDisplay renders the component with initial props" name="ExchangeRateDisplay renders the component with initial props" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Detail Row Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:39" time="1.31" tests="1">
    <testcase classname="Confirm Detail Row Component should match snapshot" name="Confirm Detail Row Component should match snapshot" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Secure Your Wallet Onboarding View" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:38" time="2.09" tests="2">
    <testcase classname="Secure Your Wallet Onboarding View should show a popover asking the user if they want to skip account security if they click &quot;Remind me later&quot;" name="Secure Your Wallet Onboarding View should show a popover asking the user if they want to skip account security if they click &quot;Remind me later&quot;" time="0.107">
    </testcase>
    <testcase classname="Secure Your Wallet Onboarding View should not be able to click &quot;skip&quot; until &quot;Skip Account Security&quot; terms are agreed to" name="Secure Your Wallet Onboarding View should not be able to click &quot;skip&quot; until &quot;Skip Account Security&quot; terms are agreed to" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="DetectedTokenDetails" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:39" time="1.389" tests="1">
    <testcase classname="DetectedTokenDetails should render the detected token details" name="DetectedTokenDetails should render the detected token details" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="useGasPriceInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:38" time="2.022" tests="6">
    <testcase classname="useGasPriceInput returns gasPrice values from transaction if transaction.userFeeLevel is custom" name="useGasPriceInput returns gasPrice values from transaction if transaction.userFeeLevel is custom" time="0.01">
    </testcase>
    <testcase classname="useGasPriceInput does not return gasPrice values from transaction if transaction.userFeeLevel is not custom" name="useGasPriceInput does not return gasPrice values from transaction if transaction.userFeeLevel is not custom" time="0.002">
    </testcase>
    <testcase classname="useGasPriceInput if no gasPrice is provided returns default estimate for legacy transaction" name="useGasPriceInput if no gasPrice is provided returns default estimate for legacy transaction" time="0.001">
    </testcase>
    <testcase classname="useGasPriceInput for legacy transaction if estimateToUse is high and no gasPrice is provided returns high estimate value" name="useGasPriceInput for legacy transaction if estimateToUse is high and no gasPrice is provided returns high estimate value" time="0.001">
    </testcase>
    <testcase classname="useGasPriceInput returns 0 if gasPrice is not present in transaction and estimates are also not legacy" name="useGasPriceInput returns 0 if gasPrice is not present in transaction and estimates are also not legacy" time="0.003">
    </testcase>
    <testcase classname="useGasPriceInput returns gasPrice set by user if gasPriceHasBeenManuallySet is true" name="useGasPriceInput returns gasPrice set by user if gasPriceHasBeenManuallySet is true" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="PigIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:38" time="2.124" tests="1">
    <testcase classname="PigIcon renders the component" name="PigIcon renders the component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="CreateNewSwap" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="1.045" tests="1">
    <testcase classname="CreateNewSwap renders the component with initial props" name="CreateNewSwap renders the component with initial props" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="HexToDecimal Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="0.885" tests="2">
    <testcase classname="HexToDecimal Component should render a prefixed hex as a decimal with a className" name="HexToDecimal Component should render a prefixed hex as a decimal with a className" time="0.007">
    </testcase>
    <testcase classname="HexToDecimal Component should render an unprefixed hex as a decimal with a className" name="HexToDecimal Component should render an unprefixed hex as a decimal with a className" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ComposableObservableStore" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="1.341" tests="11">
    <testcase classname="ComposableObservableStore should register initial state" name="ComposableObservableStore should register initial state" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should register initial structure" name="ComposableObservableStore should register initial structure" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should update structure with observable store" name="ComposableObservableStore should update structure with observable store" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should update structure with BaseController-based controller" name="ComposableObservableStore should update structure with BaseController-based controller" time="0">
    </testcase>
    <testcase classname="ComposableObservableStore should update structure with BaseControllerV2-based controller" name="ComposableObservableStore should update structure with BaseControllerV2-based controller" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should update structure with all three types of stores" name="ComposableObservableStore should update structure with all three types of stores" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should return flattened state" name="ComposableObservableStore should return flattened state" time="0">
    </testcase>
    <testcase classname="ComposableObservableStore should return empty flattened state when not configured" name="ComposableObservableStore should return empty flattened state when not configured" time="0">
    </testcase>
    <testcase classname="ComposableObservableStore should throw if the controller messenger is omitted and the config includes a BaseControllerV2 controller" name="ComposableObservableStore should throw if the controller messenger is omitted and the config includes a BaseControllerV2 controller" time="0.012">
    </testcase>
    <testcase classname="ComposableObservableStore should throw if the controller messenger is omitted and updateStructure called with a BaseControllerV2 controller" name="ComposableObservableStore should throw if the controller messenger is omitted and updateStructure called with a BaseControllerV2 controller" time="0.001">
    </testcase>
    <testcase classname="ComposableObservableStore should throw if initialized with undefined config entry" name="ComposableObservableStore should throw if initialized with undefined config entry" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Unlock Page" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="1.45" tests="2">
    <testcase classname="Unlock Page renders" name="Unlock Page renders" time="0.102">
    </testcase>
    <testcase classname="Unlock Page changes password and submits" name="Unlock Page changes password and submits" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="ImportToken" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="1.191" tests="1">
    <testcase classname="ImportToken renders the component with initial props" name="ImportToken renders the component with initial props" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="useMaxPriorityFeePerGasInput" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:41" time="1.137" tests="7">
    <testcase classname="useMaxPriorityFeePerGasInput returns maxPriorityFeePerGas values from transaction if transaction.userFeeLevel is custom" name="useMaxPriorityFeePerGasInput returns maxPriorityFeePerGas values from transaction if transaction.userFeeLevel is custom" time="0.009">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput returns maxFeePerGas values from transaction if transaction.userFeeLevel is custom and maxPriorityFeePerGas is not provided" name="useMaxPriorityFeePerGasInput returns maxFeePerGas values from transaction if transaction.userFeeLevel is custom and maxPriorityFeePerGas is not provided" time="0.003">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput does not returns maxPriorityFeePerGas values from transaction if transaction.userFeeLevel is not custom" name="useMaxPriorityFeePerGasInput does not returns maxPriorityFeePerGas values from transaction if transaction.userFeeLevel is not custom" time="0.002">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput if no maxPriorityFeePerGas is provided by user or in transaction it returns value from fee market estimate" name="useMaxPriorityFeePerGasInput if no maxPriorityFeePerGas is provided by user or in transaction it returns value from fee market estimate" time="0.011">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput does not  return fiat values if showFiat is false" name="useMaxPriorityFeePerGasInput does not  return fiat values if showFiat is false" time="0.004">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput returns 0 if EIP1559 is not supported and gas estimates are legacy" name="useMaxPriorityFeePerGasInput returns 0 if EIP1559 is not supported and gas estimates are legacy" time="0.004">
    </testcase>
    <testcase classname="useMaxPriorityFeePerGasInput returns maxPriorityFeePerGas set by user if setMaxPriorityFeePerGas is called" name="useMaxPriorityFeePerGasInput returns maxPriorityFeePerGas set by user if setMaxPriorityFeePerGas is called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="RevertedIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:40" time="2.095" tests="1">
    <testcase classname="RevertedIcon renders the RevertedIcon component" name="RevertedIcon renders the RevertedIcon component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Icon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:42" time="0.827" tests="4">
    <testcase classname="Icon should render correctly" name="Icon should render correctly" time="0.014">
    </testcase>
    <testcase classname="Icon should render with different icons using mask-image and image urls" name="Icon should render with different icons using mask-image and image urls" time="0.022">
    </testcase>
    <testcase classname="Icon should render with different size classes" name="Icon should render with different size classes" time="0.006">
    </testcase>
    <testcase classname="Icon should render with icon colors" name="Icon should render with icon colors" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="QuotesTimeoutIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:41" time="1.144" tests="1">
    <testcase classname="QuotesTimeoutIcon renders the component" name="QuotesTimeoutIcon renders the component" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="getFetchWithTimeout" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:42" time="1.036" tests="4">
    <testcase classname="getFetchWithTimeout fetches a url" name="getFetchWithTimeout fetches a url" time="0.008">
    </testcase>
    <testcase classname="getFetchWithTimeout throws when the request hits a custom timeout" name="getFetchWithTimeout throws when the request hits a custom timeout" time="0.133">
    </testcase>
    <testcase classname="getFetchWithTimeout should abort the request when the custom timeout is hit" name="getFetchWithTimeout should abort the request when the custom timeout is hit" time="0.125">
    </testcase>
    <testcase classname="getFetchWithTimeout throws on invalid timeout" name="getFetchWithTimeout throws on invalid timeout" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Creation Successful Onboarding View" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:42" time="1.109" tests="2">
    <testcase classname="Creation Successful Onboarding View should call completeOnboarding in the background when &quot;Got it!&quot; button is clicked" name="Creation Successful Onboarding View should call completeOnboarding in the background when &quot;Got it!&quot; button is clicked" time="0.03">
    </testcase>
    <testcase classname="Creation Successful Onboarding View should redirect to privacy-settings view when &quot;Set advanced privacy settings&quot; button is clicked" name="Creation Successful Onboarding View should redirect to privacy-settings view when &quot;Set advanced privacy settings&quot; button is clicked" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="useCurrencyDisplay" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:42" time="1.119" tests="21">
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return $2.80 USD as displayValue" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return $2.80 USD as displayValue" time="0.003">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return $2.80 as value" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return $2.80 as value" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return USD as suffix" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: 2, denomation: undefined } should return USD as suffix" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return $2.80 USD as displayValue" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return $2.80 USD as displayValue" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return $2.80 as value" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return $2.80 as value" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return USD as suffix" name="useCurrencyDisplay when input is { value: 0x2386f26fc10000, decimals: undefined, denomation: undefined } should return USD as suffix" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 ETH as displayValue" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 ETH as displayValue" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as value" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as value" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return ETH as suffix" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return ETH as suffix" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as displayValue" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as displayValue" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as value" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return 1.266 as value" time="0.003">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return undefined as suffix" name="useCurrencyDisplay when input is { value: 0x1193461d01595930, decimals: 3, denomation: undefined } should return undefined as suffix" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return 1 as displayValue" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return 1 as displayValue" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return 1 as value" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return 1 as value" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return undefined as suffix" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: GWEI } should return undefined as suffix" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return 1000000000 as displayValue" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return 1000000000 as displayValue" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return 1000000000 as value" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return 1000000000 as value" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return undefined as suffix" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: undefined, denomation: WEI } should return undefined as suffix" time="0.001">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return 0.000000001 as displayValue" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return 0.000000001 as displayValue" time="0">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return 0.000000001 as value" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return 0.000000001 as value" time="0.002">
    </testcase>
    <testcase classname="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return undefined as suffix" name="useCurrencyDisplay when input is { value: 0x3b9aca00, decimals: 100, denomation: undefined } should return undefined as suffix" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CanceledIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:42" time="1.081" tests="1">
    <testcase classname="CanceledIcon renders the CanceledIcon component" name="CanceledIcon renders the CanceledIcon component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="IconWithFallback" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="0.757" tests="5">
    <testcase classname="IconWithFallback should render without crashing" name="IconWithFallback should render without crashing" time="0.01">
    </testcase>
    <testcase classname="IconWithFallback should render an icon image" name="IconWithFallback should render an icon image" time="0.011">
    </testcase>
    <testcase classname="IconWithFallback should render with a fallback letter from the name prop" name="IconWithFallback should render with a fallback letter from the name prop" time="0.004">
    </testcase>
    <testcase classname="IconWithFallback should render with a classname" name="IconWithFallback should render with a classname" time="0.001">
    </testcase>
    <testcase classname="IconWithFallback should render with a fallback classname" name="IconWithFallback should render with a fallback classname" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Transaction Confirmed" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:41" time="2.038" tests="1">
    <testcase classname="Transaction Confirmed clicks ok to submit and hide modal" name="Transaction Confirmed clicks ok to submit and hide modal" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="LogoMoonPay" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.053" tests="1">
    <testcase classname="LogoMoonPay renders the LogoMoonPay component" name="LogoMoonPay renders the LogoMoonPay component" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="View Price Quote Difference" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.074" tests="5">
    <testcase classname="View Price Quote Difference does not render when there is no quote" name="View Price Quote Difference does not render when there is no quote" time="0.005">
    </testcase>
    <testcase classname="View Price Quote Difference does not render when the item is in the low bucket" name="View Price Quote Difference does not render when the item is in the low bucket" time="0.001">
    </testcase>
    <testcase classname="View Price Quote Difference displays an error when in medium bucket" name="View Price Quote Difference displays an error when in medium bucket" time="0.003">
    </testcase>
    <testcase classname="View Price Quote Difference displays an error when in high bucket" name="View Price Quote Difference displays an error when in high bucket" time="0">
    </testcase>
    <testcase classname="View Price Quote Difference displays a fiat error when calculationError is present" name="View Price Quote Difference displays a fiat error when calculationError is present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Contact List" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.084" tests="1">
    <testcase classname="Contact List given searchForContacts sorts contacts by name within each letter group" name="Contact List given searchForContacts sorts contacts by name within each letter group" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedTab Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.126" tests="6">
    <testcase classname="AdvancedTab Component should render correctly when threeBoxFeatureFlag" name="AdvancedTab Component should render correctly when threeBoxFeatureFlag" time="0.003">
    </testcase>
    <testcase classname="AdvancedTab Component should render backup button" name="AdvancedTab Component should render backup button" time="0.027">
    </testcase>
    <testcase classname="AdvancedTab Component should render restore button" name="AdvancedTab Component should render restore button" time="0.005">
    </testcase>
    <testcase classname="AdvancedTab Component should update autoLockTimeLimit" name="AdvancedTab Component should update autoLockTimeLimit" time="0.027">
    </testcase>
    <testcase classname="AdvancedTab Component should toggle show test networks" name="AdvancedTab Component should toggle show test networks" time="0.003">
    </testcase>
    <testcase classname="AdvancedTab Component should toggle token detection" name="AdvancedTab Component should toggle token detection" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="send-gas-row container" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.932" tests="5">
    <testcase classname="send-gas-row container mapDispatchToProps() showLegacyCustomizeGasModal() should dispatch an action" name="send-gas-row container mapDispatchToProps() showLegacyCustomizeGasModal() should dispatch an action" time="0.002">
    </testcase>
    <testcase classname="send-gas-row container mapDispatchToProps() updateGasPrice() should dispatch an action" name="send-gas-row container mapDispatchToProps() updateGasPrice() should dispatch an action" time="0.001">
    </testcase>
    <testcase classname="send-gas-row container mapDispatchToProps() updateGasLimit() should dispatch an action" name="send-gas-row container mapDispatchToProps() updateGasLimit() should dispatch an action" time="0">
    </testcase>
    <testcase classname="send-gas-row container mapDispatchToProps() resetCustomData() should dispatch an action" name="send-gas-row container mapDispatchToProps() resetCustomData() should dispatch an action" time="0.001">
    </testcase>
    <testcase classname="send-gas-row container mergeProps should return the expected props when isConfirm is true" name="send-gas-row container mergeProps should return the expected props when isConfirm is true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Transaction Selector" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:43" time="1.996" tests="4">
    <testcase classname="Confirm Transaction Selector unconfirmedTransactionsCountSelector returns number of txs in unapprovedTxs state with the same network plus unapproved signing method counts" name="Confirm Transaction Selector unconfirmedTransactionsCountSelector returns number of txs in unapprovedTxs state with the same network plus unapproved signing method counts" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction Selector sendTokenTokenAmountAndToAddressSelector returns token address and calculated token amount" name="Confirm Transaction Selector sendTokenTokenAmountAndToAddressSelector returns token address and calculated token amount" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Selector contractExchangeRateSelector returns contract exchange rate in metamask state based on confirm transaction txParams token recipient" name="Confirm Transaction Selector contractExchangeRateSelector returns contract exchange rate in metamask state based on confirm transaction txParams token recipient" time="0">
    </testcase>
    <testcase classname="Confirm Transaction Selector conversionRateSelector returns conversionRate from state" name="Confirm Transaction Selector conversionRateSelector returns conversionRate from state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CancelTransactionGasFee Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:44" time="1.055" tests="1">
    <testcase classname="CancelTransactionGasFee Component should render" name="CancelTransactionGasFee Component should render" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmSeedPhrase Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:44" time="1.82" tests="5">
    <testcase classname="ConfirmSeedPhrase Component should render correctly" name="ConfirmSeedPhrase Component should render correctly" time="0.006">
    </testcase>
    <testcase classname="ConfirmSeedPhrase Component should add/remove selected on click" name="ConfirmSeedPhrase Component should add/remove selected on click" time="0.006">
    </testcase>
    <testcase classname="ConfirmSeedPhrase Component should render correctly on hover" name="ConfirmSeedPhrase Component should render correctly on hover" time="0.025">
    </testcase>
    <testcase classname="ConfirmSeedPhrase Component should insert seed in place on drop" name="ConfirmSeedPhrase Component should insert seed in place on drop" time="0.021">
    </testcase>
    <testcase classname="ConfirmSeedPhrase Component should submit correctly" name="ConfirmSeedPhrase Component should submit correctly" time="0.115">
    </testcase>
  </testsuite>
  <testsuite name="conversion utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:45" time="1.032" tests="8">
    <testcase classname="conversion utils getWeiHexFromDecimalValue should correctly convert 0 in ETH" name="conversion utils getWeiHexFromDecimalValue should correctly convert 0 in ETH" time="0.002">
    </testcase>
    <testcase classname="conversion utils decETHToDecWEI should correctly convert 1 ETH to WEI" name="conversion utils decETHToDecWEI should correctly convert 1 ETH to WEI" time="0">
    </testcase>
    <testcase classname="conversion utils decETHToDecWEI should correctly convert 0.000000000000000001 ETH to WEI" name="conversion utils decETHToDecWEI should correctly convert 0.000000000000000001 ETH to WEI" time="0">
    </testcase>
    <testcase classname="conversion utils decETHToDecWEI should correctly convert 1000000.000000000000000001 ETH to WEI" name="conversion utils decETHToDecWEI should correctly convert 1000000.000000000000000001 ETH to WEI" time="0.001">
    </testcase>
    <testcase classname="conversion utils decETHToDecWEI should correctly convert 9876.543210 ETH to WEI" name="conversion utils decETHToDecWEI should correctly convert 9876.543210 ETH to WEI" time="0">
    </testcase>
    <testcase classname="conversion utils decETHToDecWEI should correctly convert 1.0000000000000000 ETH to WEI" name="conversion utils decETHToDecWEI should correctly convert 1.0000000000000000 ETH to WEI" time="0">
    </testcase>
    <testcase classname="conversion utils decWEIToDecETH converts 10000000000000 WEI to ETH" name="conversion utils decWEIToDecETH converts 10000000000000 WEI to ETH" time="0.001">
    </testcase>
    <testcase classname="conversion utils decWEIToDecETH converts 9358749494527040 WEI to ETH" name="conversion utils decWEIToDecETH converts 9358749494527040 WEI to ETH" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useEventFragment" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:45" time="1.012" tests="10">
    <testcase classname="useEventFragment return shape should have trackSuccess method" name="useEventFragment return shape should have trackSuccess method" time="0.008">
    </testcase>
    <testcase classname="useEventFragment return shape should have trackFailure method" name="useEventFragment return shape should have trackFailure method" time="0.001">
    </testcase>
    <testcase classname="useEventFragment return shape should have updateEventFragment method" name="useEventFragment return shape should have updateEventFragment method" time="0.007">
    </testcase>
    <testcase classname="useEventFragment return shape should have fragment property" name="useEventFragment return shape should have fragment property" time="0.002">
    </testcase>
    <testcase classname="useEventFragment identifying appropriate fragment should create a new fragment when a matching fragment does not exist" name="useEventFragment identifying appropriate fragment should create a new fragment when a matching fragment does not exist" time="0.012">
    </testcase>
    <testcase classname="useEventFragment identifying appropriate fragment should return the matching fragment by id when existingId is provided" name="useEventFragment identifying appropriate fragment should return the matching fragment by id when existingId is provided" time="0.005">
    </testcase>
    <testcase classname="useEventFragment identifying appropriate fragment should return matching fragment by successEvent when no id is provided, but persist is true" name="useEventFragment identifying appropriate fragment should return matching fragment by successEvent when no id is provided, but persist is true" time="0.002">
    </testcase>
    <testcase classname="useEventFragment methods trackSuccess method should invoke the background finalizeEventFragment method" name="useEventFragment methods trackSuccess method should invoke the background finalizeEventFragment method" time="0.002">
    </testcase>
    <testcase classname="useEventFragment methods trackFailure method should invoke the background finalizeEventFragment method" name="useEventFragment methods trackFailure method should invoke the background finalizeEventFragment method" time="0">
    </testcase>
    <testcase classname="useEventFragment methods updateEventFragment method should invoke the background updateEventFragment method" name="useEventFragment methods updateEventFragment method should invoke the background updateEventFragment method" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Transaction Selectors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:45" time="0.95" tests="8">
    <testcase classname="Transaction Selectors unapprovedMessagesSelector returns eth sign msg from unapprovedMsgs" name="Transaction Selectors unapprovedMessagesSelector returns eth sign msg from unapprovedMsgs" time="0.002">
    </testcase>
    <testcase classname="Transaction Selectors unapprovedMessagesSelector returns personal sign from unapprovedPersonalMsgsSelector" name="Transaction Selectors unapprovedMessagesSelector returns personal sign from unapprovedPersonalMsgsSelector" time="0">
    </testcase>
    <testcase classname="Transaction Selectors unapprovedMessagesSelector returns typed message from unapprovedTypedMessagesSelector" name="Transaction Selectors unapprovedMessagesSelector returns typed message from unapprovedTypedMessagesSelector" time="0">
    </testcase>
    <testcase classname="Transaction Selectors transactionsSelector selects the currentNetworkTxList" name="Transaction Selectors transactionsSelector selects the currentNetworkTxList" time="0.001">
    </testcase>
    <testcase classname="Transaction Selectors nonceSortedTransactionsSelector returns transaction group nonce sorted tx from from selectedTxList wit" name="Transaction Selectors nonceSortedTransactionsSelector returns transaction group nonce sorted tx from from selectedTxList wit" time="0.001">
    </testcase>
    <testcase classname="Transaction Selectors Sorting Transactions Selectors nonceSortedPendingTransactionsSelector" name="Transaction Selectors Sorting Transactions Selectors nonceSortedPendingTransactionsSelector" time="0.001">
    </testcase>
    <testcase classname="Transaction Selectors Sorting Transactions Selectors nonceSortedCompletedTransactionsSelector" name="Transaction Selectors Sorting Transactions Selectors nonceSortedCompletedTransactionsSelector" time="0">
    </testcase>
    <testcase classname="Transaction Selectors Sorting Transactions Selectors submittedPendingTransactionsSelector" name="Transaction Selectors Sorting Transactions Selectors submittedPendingTransactionsSelector" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Alerts Tab" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:44" time="2.23" tests="1">
    <testcase classname="Alerts Tab calls setAlertEnabledness with the correct params method when the toggles are clicked" name="Alerts Tab calls setAlertEnabledness with the correct params method when the toggles are clicked" time="0.147">
    </testcase>
  </testsuite>
  <testsuite name="Breadcrumbs Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="0.739" tests="1">
    <testcase classname="Breadcrumbs Component should render with the correct colors" name="Breadcrumbs Component should render with the correct colors" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="HoldToRevealButton" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:44" time="2.176" tests="4">
    <testcase classname="HoldToRevealButton should render a button with label" name="HoldToRevealButton should render a button with label" time="0.025">
    </testcase>
    <testcase classname="HoldToRevealButton should render a button when mouse is down and up" name="HoldToRevealButton should render a button when mouse is down and up" time="0.011">
    </testcase>
    <testcase classname="HoldToRevealButton should not show the locked padlock when a button is long pressed and then should show it after it was lifted off before the animation concludes" name="HoldToRevealButton should not show the locked padlock when a button is long pressed and then should show it after it was lifted off before the animation concludes" time="0.006">
    </testcase>
    <testcase classname="HoldToRevealButton should show the unlocked padlock when a button is long pressed for the duration of the animation" name="HoldToRevealButton should show the unlocked padlock when a button is long pressed for the duration of the animation" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Transactions utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="0.9" tests="4">
    <testcase classname="Transactions utils getStatusKey should return the correct status" name="Transactions utils getStatusKey should return the correct status" time="0.001">
    </testcase>
    <testcase classname="Transactions utils isLegacyTransaction should return true if transaction is type-0" name="Transactions utils isLegacyTransaction should return true if transaction is type-0" time="0.001">
    </testcase>
    <testcase classname="Transactions utils isLegacyTransaction should return false if transaction is not type-0" name="Transactions utils isLegacyTransaction should return false if transaction is not type-0" time="0.001">
    </testcase>
    <testcase classname="Transactions utils getMethodDataAsync returns a valid signature for setApprovalForAll" name="Transactions utils getMethodDataAsync returns a valid signature for setApprovalForAll" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="useTokenDisplayValue" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="1.054" tests="10">
    <testcase classname="useTokenDisplayValue when input is decimals: 18 and value: 1000000000000000000 should return 1 as displayValue" name="useTokenDisplayValue when input is decimals: 18 and value: 1000000000000000000 should return 1 as displayValue" time="0.009">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 18 and value: 10000000000000000000 should return 10 as displayValue" name="useTokenDisplayValue when input is decimals: 18 and value: 10000000000000000000 should return 10 as displayValue" time="0.006">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 18 and value: 1500000000000000000 should return 1.5 as displayValue" name="useTokenDisplayValue when input is decimals: 18 and value: 1500000000000000000 should return 1.5 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 18 and value: 1756000000000000000 should return 1.756 as displayValue" name="useTokenDisplayValue when input is decimals: 18 and value: 1756000000000000000 should return 1.756 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 18 and value: 25500000000000000000 should return 25.5 as displayValue" name="useTokenDisplayValue when input is decimals: 18 and value: 25500000000000000000 should return 25.5 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 6 and value: 1000000 should return 1 as displayValue" name="useTokenDisplayValue when input is decimals: 6 and value: 1000000 should return 1 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 6 and value: 10000000 should return 10 as displayValue" name="useTokenDisplayValue when input is decimals: 6 and value: 10000000 should return 10 as displayValue" time="0.006">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 6 and value: 1500000 should return 1.5 as displayValue" name="useTokenDisplayValue when input is decimals: 6 and value: 1500000 should return 1.5 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 6 and value: 1756000 should return 1.756 as displayValue" name="useTokenDisplayValue when input is decimals: 6 and value: 1756000 should return 1.756 as displayValue" time="0.002">
    </testcase>
    <testcase classname="useTokenDisplayValue when input is decimals: 6 and value: 25500000 should return 25.5 as displayValue" name="useTokenDisplayValue when input is decimals: 6 and value: 25500000 should return 25.5 as displayValue" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="App Header" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="1.247" tests="6">
    <testcase classname="App Header App Header Logo routes to default route when logo is clicked" name="App Header App Header Logo routes to default route when logo is clicked" time="0.021">
    </testcase>
    <testcase classname="App Header Network shows network dropdown when networkDropdownOpen is false" name="App Header Network shows network dropdown when networkDropdownOpen is false" time="0.002">
    </testcase>
    <testcase classname="App Header Network hides network dropdown when networkDropdownOpen is true" name="App Header Network hides network dropdown when networkDropdownOpen is true" time="0.004">
    </testcase>
    <testcase classname="App Header Network hides network indicator" name="App Header Network hides network indicator" time="0.003">
    </testcase>
    <testcase classname="App Header Account Menu toggles account menu" name="App Header Account Menu toggles account menu" time="0.002">
    </testcase>
    <testcase classname="App Header Account Menu does not toggle account menu when disabled" name="App Header Account Menu does not toggle account menu when disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="gas utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="1.631" tests="99">
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 10 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 10 returns 210000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 10 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 10 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 24 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 24 returns 504000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 24 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 24 returns 2400000 when provided gasLimit: 100000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 90 returns 1890000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 90 returns 1890000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 90 returns 9000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMaximumGasTotalInHexWei when maxFeePerGas is 90 returns 9000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 2 returns 1000000 when provided gasLimit: 100000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 returns 210000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 10 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 10 and tip is 50 returns 1000000 when provided gasLimit: 100000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 10" time="0.012">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 returns 210000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 2 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 14" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 14" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 returns 294000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 returns 294000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 returns 1400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 2 returns 1400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 24" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 should use an effective gasPrice of 24" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 returns 504000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 2 returns 2400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 18" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 18" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 returns 378000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 returns 378000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 returns 1800000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 10 returns 1800000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 22" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 22" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 returns 462000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 returns 462000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 returns 2200000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 10 returns 2200000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 24" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 should use an effective gasPrice of 24" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 returns 504000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 10 returns 2400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 should use an effective gasPrice of 24" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 returns 504000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 24 and tip is 50 returns 2400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 10" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 10" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 returns 210000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 returns 210000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 returns 1000000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 2 returns 1000000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 14" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 14" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 returns 294000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 returns 294000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 returns 1400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 2 returns 1400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 26" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 should use an effective gasPrice of 26" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 returns 546000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 returns 546000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 returns 2600000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 2 returns 2600000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 18" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 18" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 returns 378000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 returns 378000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 returns 1800000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 10 returns 1800000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 22" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 22" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 returns 462000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 returns 462000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 returns 2200000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 10 returns 2200000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 34" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 should use an effective gasPrice of 34" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 returns 714000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 returns 714000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 returns 3400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 10 returns 3400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 58" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 58" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 returns 1218000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 returns 1218000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 returns 5800000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 8, maxFeePerGas is 90 and tip is 50 returns 5800000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 62" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 62" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 returns 1302000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 returns 1302000 when provided gasLimit: 21000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 returns 6200000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 12, maxFeePerGas is 90 and tip is 50 returns 6200000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 74" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 should use an effective gasPrice of 74" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 returns 1554000 when provided gasLimit: 21000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 returns 1554000 when provided gasLimit: 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 returns 7400000 when provided gasLimit: 100000" name="gas utils when using EIP 1559 fields getMinimumGasTotalInHexWei when baseFee is 24, maxFeePerGas is 90 and tip is 50 returns 7400000 when provided gasLimit: 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 10 returns 210000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 10 returns 210000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 10 returns 1000000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 10 returns 1000000 when provided gasLimit of 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 24 returns 504000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 24 returns 504000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 24 returns 2400000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 24 returns 2400000 when provided gasLimit of 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 90 returns 1890000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 90 returns 1890000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 90 returns 9000000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMaximumGasTotalInHexWei when gasPrice is 90 returns 9000000 when provided gasLimit of 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 10 returns 210000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 10 returns 210000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 10 returns 1000000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 10 returns 1000000 when provided gasLimit of 100000" time="0.001">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 24 returns 504000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 24 returns 504000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 24 returns 2400000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 24 returns 2400000 when provided gasLimit of 100000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 90 returns 1890000 when provided gasLimit of 21000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 90 returns 1890000 when provided gasLimit of 21000" time="0">
    </testcase>
    <testcase classname="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 90 returns 9000000 when provided gasLimit of 100000" name="gas utils when using legacy fields getMinimumGasTotalInHexWei when gasPrice is 90 returns 9000000 when provided gasLimit of 100000" time="0">
    </testcase>
  </testsuite>
  <testsuite name="DetectedTokenAddress" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="1.264" tests="1">
    <testcase classname="DetectedTokenAddress should render the detected token address" name="DetectedTokenAddress should render the detected token address" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="NetworkController" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:47" time="1.11" tests="10">
    <testcase classname="NetworkController controller #provider provider should be updatable without reassignment" name="NetworkController controller #provider provider should be updatable without reassignment" time="0.014">
    </testcase>
    <testcase classname="NetworkController controller #getNetworkState should return &quot;loading&quot; when new" name="NetworkController controller #getNetworkState should return &quot;loading&quot; when new" time="0.001">
    </testcase>
    <testcase classname="NetworkController controller #setNetworkState should update the network" name="NetworkController controller #setNetworkState should update the network" time="0">
    </testcase>
    <testcase classname="NetworkController controller #setProviderType should update provider.type" name="NetworkController controller #setProviderType should update provider.type" time="0.003">
    </testcase>
    <testcase classname="NetworkController controller #setProviderType should set the network to loading" name="NetworkController controller #setProviderType should set the network to loading" time="0.002">
    </testcase>
    <testcase classname="NetworkController controller #getEIP1559Compatibility should return false when baseFeePerGas is not in the block header" name="NetworkController controller #getEIP1559Compatibility should return false when baseFeePerGas is not in the block header" time="0.001">
    </testcase>
    <testcase classname="NetworkController controller #getEIP1559Compatibility should return true when baseFeePerGas is in block header" name="NetworkController controller #getEIP1559Compatibility should return true when baseFeePerGas is in block header" time="0.001">
    </testcase>
    <testcase classname="NetworkController controller #getEIP1559Compatibility should store EIP1559 support in state to reduce calls to getLatestBlock" name="NetworkController controller #getEIP1559Compatibility should store EIP1559 support in state to reduce calls to getLatestBlock" time="0.001">
    </testcase>
    <testcase classname="NetworkController controller #getEIP1559Compatibility should clear stored EIP1559 support when changing networks" name="NetworkController controller #getEIP1559Compatibility should clear stored EIP1559 support when changing networks" time="0.009">
    </testcase>
    <testcase classname="NetworkController utils getNetworkDisplayName should return the correct network name" name="NetworkController utils getNetworkDisplayName should return the correct network name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="selectFragmentBySuccessEvent" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:46" time="1.36" tests="3">
    <testcase classname="selectFragmentBySuccessEvent should find matching fragment in state by successEvent" name="selectFragmentBySuccessEvent should find matching fragment in state by successEvent" time="0.003">
    </testcase>
    <testcase classname="selectFragmentById should find matching fragment in state by id" name="selectFragmentById should find matching fragment in state by id" time="0">
    </testcase>
    <testcase classname="selectMatchingFragment should find matching fragment in state by id" name="selectMatchingFragment should find matching fragment in state by id" time="0">
    </testcase>
  </testsuite>
  <testsuite name="nonceSortedTransactionsSelector" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:47" time="1.23" tests="10">
    <testcase classname="nonceSortedTransactionsSelector should properly group a simple send that is superseded by a retry" name="nonceSortedTransactionsSelector should properly group a simple send that is superseded by a retry" time="0.004">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should properly group a failed off-chain simple send that is superseded by a retry" name="nonceSortedTransactionsSelector should properly group a failed off-chain simple send that is superseded by a retry" time="0.001">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should properly group a simple send that is superseded by a cancel" name="nonceSortedTransactionsSelector should properly group a simple send that is superseded by a cancel" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should properly group a simple send and retry that is superseded by a cancel" name="nonceSortedTransactionsSelector should properly group a simple send and retry that is superseded by a cancel" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should group transactions created by an advance user attempting to manually supersede own txs" name="nonceSortedTransactionsSelector should group transactions created by an advance user attempting to manually supersede own txs" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should NOT group sent and incoming tx with same nonce" name="nonceSortedTransactionsSelector should NOT group sent and incoming tx with same nonce" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should display a signing request" name="nonceSortedTransactionsSelector should display a signing request" time="0.001">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should not set a failed off-chain transaction as primary, allowing additional retries" name="nonceSortedTransactionsSelector should not set a failed off-chain transaction as primary, allowing additional retries" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should not set a failed off-chain transaction as primary or initial, regardless of tx order" name="nonceSortedTransactionsSelector should not set a failed off-chain transaction as primary or initial, regardless of tx order" time="0">
    </testcase>
    <testcase classname="nonceSortedTransactionsSelector should set a failed on-chain transaction as primary" name="nonceSortedTransactionsSelector should set a failed on-chain transaction as primary" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="metaRPCClientFactory" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:47" time="1.077" tests="9">
    <testcase classname="metaRPCClientFactory should be able to make an rpc request with the method" name="metaRPCClientFactory should be able to make an rpc request with the method" time="0.014">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to make an rpc request/response with the method and params and node-style callback" name="metaRPCClientFactory should be able to make an rpc request/response with the method and params and node-style callback" time="0.001">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to make an rpc request/error with the method and params and node-style callback" name="metaRPCClientFactory should be able to make an rpc request/error with the method and params and node-style callback" time="0.001">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to make an rpc request/response with the method and params and node-style callback with multiple instances of metaRPCClientFactory and the same connectionStream" name="metaRPCClientFactory should be able to make an rpc request/response with the method and params and node-style callback with multiple instances of metaRPCClientFactory and the same connectionStream" time="0">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to handle notifications" name="metaRPCClientFactory should be able to handle notifications" time="0.001">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to handle errors with no id" name="metaRPCClientFactory should be able to handle errors with no id" time="0">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to handle errors with null id" name="metaRPCClientFactory should be able to handle errors with null id" time="0">
    </testcase>
    <testcase classname="metaRPCClientFactory should be able to handle no message within TIMEOUT secs for getState" name="metaRPCClientFactory should be able to handle no message within TIMEOUT secs for getState" time="0.011">
    </testcase>
    <testcase classname="metaRPCClientFactory should fail all pending actions with a DisconnectError when the stream ends" name="metaRPCClientFactory should fail all pending actions with a DisconnectError when the stream ends" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="parseSecretRecoveryPhrase" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:47" time="0.89" tests="7">
    <testcase classname="parseSecretRecoveryPhrase should handle a regular Secret Recovery Phrase" name="parseSecretRecoveryPhrase should handle a regular Secret Recovery Phrase" time="0.001">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should handle a mixed-case Secret Recovery Phrase" name="parseSecretRecoveryPhrase should handle a mixed-case Secret Recovery Phrase" time="0">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should handle an upper-case Secret Recovery Phrase" name="parseSecretRecoveryPhrase should handle an upper-case Secret Recovery Phrase" time="0">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should trim extraneous whitespace from the given Secret Recovery Phrase" name="parseSecretRecoveryPhrase should trim extraneous whitespace from the given Secret Recovery Phrase" time="0">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should return an empty string when given a whitespace-only string" name="parseSecretRecoveryPhrase should return an empty string when given a whitespace-only string" time="0.001">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should return an empty string when given a string with only symbols" name="parseSecretRecoveryPhrase should return an empty string when given a string with only symbols" time="0">
    </testcase>
    <testcase classname="parseSecretRecoveryPhrase should return an empty string for both null and undefined" name="parseSecretRecoveryPhrase should return an empty string for both null and undefined" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Card" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="0.873" tests="1">
    <testcase classname="Card should render the Card without crashing" name="Card should render the Card without crashing" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Slider Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.052" tests="4">
    <testcase classname="Slider Component rendering should render properly" name="Slider Component rendering should render properly" time="0.024">
    </testcase>
    <testcase classname="Slider Component rendering should contain passed header props" name="Slider Component rendering should contain passed header props" time="0.022">
    </testcase>
    <testcase classname="Slider Component rendering should contain passed footer props" name="Slider Component rendering should contain passed footer props" time="0.037">
    </testcase>
    <testcase classname="Slider Component rendering should call onEdit callback when edit button is clicked" name="Slider Component rendering should call onEdit callback when edit button is clicked" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="useGasFeeEstimates" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.343" tests="8">
    <testcase classname="useGasFeeEstimates registers with the controller" name="useGasFeeEstimates registers with the controller" time="0.01">
    </testcase>
    <testcase classname="useGasFeeEstimates clears token with the controller on unmount" name="useGasFeeEstimates clears token with the controller on unmount" time="0.003">
    </testcase>
    <testcase classname="useGasFeeEstimates works with LEGACY gas prices" name="useGasFeeEstimates works with LEGACY gas prices" time="0.002">
    </testcase>
    <testcase classname="useGasFeeEstimates works with ETH_GASPRICE gas prices" name="useGasFeeEstimates works with ETH_GASPRICE gas prices" time="0.003">
    </testcase>
    <testcase classname="useGasFeeEstimates works with FEE_MARKET gas prices" name="useGasFeeEstimates works with FEE_MARKET gas prices" time="0.002">
    </testcase>
    <testcase classname="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is NONE" name="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is NONE" time="0.001">
    </testcase>
    <testcase classname="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is not FEE_MARKET or ETH_GASPRICE, but network supports EIP-1559" name="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is not FEE_MARKET or ETH_GASPRICE, but network supports EIP-1559" time="0.002">
    </testcase>
    <testcase classname="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is FEE_MARKET but network does not support EIP-1559" name="useGasFeeEstimates indicates that gas estimates are loading when gasEstimateType is FEE_MARKET but network does not support EIP-1559" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="DetectedTokensLink" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.249" tests="1">
    <testcase classname="DetectedTokensLink should render number of tokens detected link" name="DetectedTokensLink should render number of tokens detected link" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Redux actionConstants" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.023" tests="3">
    <testcase classname="Redux actionConstants SET_RPC_TARGET sets the state.metamask.rpcUrl property of the state to the action.value" name="Redux actionConstants SET_RPC_TARGET sets the state.metamask.rpcUrl property of the state to the action.value" time="0.004">
    </testcase>
    <testcase classname="Redux actionConstants SET_ACCOUNT_LABEL updates the state.metamask.identities[:i].name property of the state to the action.value.label" name="Redux actionConstants SET_ACCOUNT_LABEL updates the state.metamask.identities[:i].name property of the state to the action.value.label" time="0.001">
    </testcase>
    <testcase classname="Redux actionConstants SHOW_ACCOUNT_DETAIL updates metamask state" name="Redux actionConstants SHOW_ACCOUNT_DETAIL updates metamask state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BaseAvatar" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:49" time="0.782" tests="2">
    <testcase classname="BaseAvatar should render correctly" name="BaseAvatar should render correctly" time="0.01">
    </testcase>
    <testcase classname="BaseAvatar should render with different size classes" name="BaseAvatar should render with different size classes" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="withModalProps" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:49" time="1.037" tests="1">
    <testcase classname="withModalProps should return a component wrapped with modal state props" name="withModalProps should return a component wrapped with modal state props" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="buffer utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:49" time="0.886" tests="11">
    <testcase classname="buffer utils toBuffer should work with prefixed hex strings" name="buffer utils toBuffer should work with prefixed hex strings" time="0.001">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with non prefixed hex strings" name="buffer utils toBuffer should work with non prefixed hex strings" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with weirdly 0x prefixed non-hex strings" name="buffer utils toBuffer should work with weirdly 0x prefixed non-hex strings" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with regular strings" name="buffer utils toBuffer should work with regular strings" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with BN" name="buffer utils toBuffer should work with BN" time="0.004">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with Buffer" name="buffer utils toBuffer should work with Buffer" time="0.001">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with a number" name="buffer utils toBuffer should work with a number" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with null or undefined" name="buffer utils toBuffer should work with null or undefined" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with UInt8Array" name="buffer utils toBuffer should work with UInt8Array" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with objects that have a toBuffer property" name="buffer utils toBuffer should work with objects that have a toBuffer property" time="0">
    </testcase>
    <testcase classname="buffer utils toBuffer should work with objects that have a toArray property" name="buffer utils toBuffer should work with objects that have a toArray property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Send Slice Helpers" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.954" tests="4">
    <testcase classname="Send Slice Helpers generateTransactionParams should generate a txParams for a token transfer" name="Send Slice Helpers generateTransactionParams should generate a txParams for a token transfer" time="0.004">
    </testcase>
    <testcase classname="Send Slice Helpers generateTransactionParams should generate a txParams for a collectible transfer" name="Send Slice Helpers generateTransactionParams should generate a txParams for a collectible transfer" time="0">
    </testcase>
    <testcase classname="Send Slice Helpers generateTransactionParams should generate a txParams for a native legacy transaction" name="Send Slice Helpers generateTransactionParams should generate a txParams for a native legacy transaction" time="0.001">
    </testcase>
    <testcase classname="Send Slice Helpers generateTransactionParams should generate a txParams for a native fee market transaction" name="Send Slice Helpers generateTransactionParams should generate a txParams for a native fee market transaction" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Confirm Transaction utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:48" time="1.922" tests="17">
    <testcase classname="Confirm Transaction utils increaseLastGasPrice should increase the gasPrice by 10%" name="Confirm Transaction utils increaseLastGasPrice should increase the gasPrice by 10%" time="0.002">
    </testcase>
    <testcase classname="Confirm Transaction utils increaseLastGasPrice should prefix the result with 0x" name="Confirm Transaction utils increaseLastGasPrice should prefix the result with 0x" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils hexGreaterThan should return true if the first value is greater than the second value" name="Confirm Transaction utils hexGreaterThan should return true if the first value is greater than the second value" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction utils hexGreaterThan should return false if the first value is less than the second value" name="Confirm Transaction utils hexGreaterThan should return false if the first value is less than the second value" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils hexGreaterThan should return false if the first value is equal to the second value" name="Confirm Transaction utils hexGreaterThan should return false if the first value is equal to the second value" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils hexGreaterThan should correctly compare prefixed and non-prefixed hex values" name="Confirm Transaction utils hexGreaterThan should correctly compare prefixed and non-prefixed hex values" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction utils getHexGasTotal should multiply the hex gasLimit and hex gasPrice values together" name="Confirm Transaction utils getHexGasTotal should multiply the hex gasLimit and hex gasPrice values together" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils getHexGasTotal should prefix the result with 0x" name="Confirm Transaction utils getHexGasTotal should prefix the result with 0x" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils addEth should add two values together rounding to 6 decimal places" name="Confirm Transaction utils addEth should add two values together rounding to 6 decimal places" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction utils addEth should add any number of values together rounding to 6 decimal places" name="Confirm Transaction utils addEth should add any number of values together rounding to 6 decimal places" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction utils addFiat should add two values together rounding to 2 decimal places" name="Confirm Transaction utils addFiat should add two values together rounding to 2 decimal places" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils addFiat should add any number of values together rounding to 2 decimal places" name="Confirm Transaction utils addFiat should add any number of values together rounding to 2 decimal places" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils getValueFromWeiHex should get the transaction amount in ETH" name="Confirm Transaction utils getValueFromWeiHex should get the transaction amount in ETH" time="0.001">
    </testcase>
    <testcase classname="Confirm Transaction utils getValueFromWeiHex should get the transaction amount in fiat" name="Confirm Transaction utils getValueFromWeiHex should get the transaction amount in fiat" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils getTransactionFee should get the transaction fee in ETH" name="Confirm Transaction utils getTransactionFee should get the transaction fee in ETH" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils getTransactionFee should get the transaction fee in fiat" name="Confirm Transaction utils getTransactionFee should get the transaction fee in fiat" time="0">
    </testcase>
    <testcase classname="Confirm Transaction utils formatCurrency should format USD values" name="Confirm Transaction utils formatCurrency should format USD values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Gas utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="0.92" tests="11">
    <testcase classname="Gas utils gasEstimateGreaterThanGasUsedPlusTenPercent should return true if gas used in transaction + 10% is greater that estimate" name="Gas utils gasEstimateGreaterThanGasUsedPlusTenPercent should return true if gas used in transaction + 10% is greater that estimate" time="0.002">
    </testcase>
    <testcase classname="Gas utils gasEstimateGreaterThanGasUsedPlusTenPercent should return false if gas used in transaction + 10% is less that estimate" name="Gas utils gasEstimateGreaterThanGasUsedPlusTenPercent should return false if gas used in transaction + 10% is less that estimate" time="0.001">
    </testcase>
    <testcase classname="Gas utils addTenPercent should add 10% to hex value passed" name="Gas utils addTenPercent should add 10% to hex value passed" time="0">
    </testcase>
    <testcase classname="Gas utils addTenPercent should return undefined if undefined value is passed" name="Gas utils addTenPercent should return undefined if undefined value is passed" time="0">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange given a singular fee should return a string &quot;X GWEI&quot; where X is the fee rounded to the given precision" name="Gas utils formatGasFeeOrFeeRange given a singular fee should return a string &quot;X GWEI&quot; where X is the fee rounded to the given precision" time="0.001">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange given an array of two fees given a single precision should return a string &quot;X - Y GWEI&quot; where X and Y are the fees rounded to the given precision" name="Gas utils formatGasFeeOrFeeRange given an array of two fees given a single precision should return a string &quot;X - Y GWEI&quot; where X and Y are the fees rounded to the given precision" time="0">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange given an array of two fees given two precisions should return a string &quot;X - Y GWEI&quot; where X and Y are the fees rounded to the given precisions" name="Gas utils formatGasFeeOrFeeRange given an array of two fees given two precisions should return a string &quot;X - Y GWEI&quot; where X and Y are the fees rounded to the given precisions" time="0">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange given an array of two fees given more than two precisions should ignore precisions past 2" name="Gas utils formatGasFeeOrFeeRange given an array of two fees given more than two precisions should ignore precisions past 2" time="0.001">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange given an array of more than two fees should ignore fees past two" name="Gas utils formatGasFeeOrFeeRange given an array of more than two fees should ignore fees past two" time="0">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange if the fee is null should return null" name="Gas utils formatGasFeeOrFeeRange if the fee is null should return null" time="0">
    </testcase>
    <testcase classname="Gas utils formatGasFeeOrFeeRange if the fee is undefined should return null" name="Gas utils formatGasFeeOrFeeRange if the fee is undefined should return null" time="0">
    </testcase>
  </testsuite>
  <testsuite name="txHelper" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="0.9" tests="1">
    <testcase classname="txHelper always shows the oldest tx first" name="txHelper always shows the oldest tx first" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Page Container Header" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:49" time="1.485" tests="8">
    <testcase classname="Page Container Header Render Header Row renders back button" name="Page Container Header Render Header Row renders back button" time="0.009">
    </testcase>
    <testcase classname="Page Container Header Render Header Row ensures style prop" name="Page Container Header Render Header Row ensures style prop" time="0.002">
    </testcase>
    <testcase classname="Page Container Header Render Header Row should call back button when click is simulated" name="Page Container Header Render Header Row should call back button when click is simulated" time="0.001">
    </testcase>
    <testcase classname="Page Container Header Render renders page container" name="Page Container Header Render renders page container" time="0.004">
    </testcase>
    <testcase classname="Page Container Header Render renders title" name="Page Container Header Render renders title" time="0.008">
    </testcase>
    <testcase classname="Page Container Header Render renders subtitle" name="Page Container Header Render renders subtitle" time="0.004">
    </testcase>
    <testcase classname="Page Container Header Render renders tabs" name="Page Container Header Render renders tabs" time="0.002">
    </testcase>
    <testcase classname="Page Container Header Render should call close when click is simulated" name="Page Container Header Render should call close when click is simulated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="permission background API methods" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="0.729" tests="6">
    <testcase classname="permission background API methods addPermittedAccount adds a permitted account" name="permission background API methods addPermittedAccount adds a permitted account" time="0.003">
    </testcase>
    <testcase classname="permission background API methods addPermittedAccount does not add a permitted account" name="permission background API methods addPermittedAccount does not add a permitted account" time="0.001">
    </testcase>
    <testcase classname="permission background API methods removePermittedAccount removes a permitted account" name="permission background API methods removePermittedAccount removes a permitted account" time="0.001">
    </testcase>
    <testcase classname="permission background API methods removePermittedAccount revokes the accounts permission if the removed account is the only permitted account" name="permission background API methods removePermittedAccount revokes the accounts permission if the removed account is the only permitted account" time="0.002">
    </testcase>
    <testcase classname="permission background API methods removePermittedAccount does not call permissionController.updateCaveat if the specified account is not permitted" name="permission background API methods removePermittedAccount does not call permissionController.updateCaveat if the specified account is not permitted" time="0.001">
    </testcase>
    <testcase classname="permission background API methods requestAccountsPermissionWithId request an accounts permission and returns the request id" name="permission background API methods requestAccountsPermissionWithId request an accounts permission and returns the request id" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="buy-url" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="0.756" tests="10">
    <testcase classname="buy-url returns Wyre url with an ETH address for Ethereum mainnet" name="buy-url returns Wyre url with an ETH address for Ethereum mainnet" time="0.008">
    </testcase>
    <testcase classname="buy-url returns a fallback Wyre url if /orders/reserve API call fails" name="buy-url returns a fallback Wyre url if /orders/reserve API call fails" time="0.001">
    </testcase>
    <testcase classname="buy-url returns Transak url with an ETH address for Ethereum mainnet" name="buy-url returns Transak url with an ETH address for Ethereum mainnet" time="0.001">
    </testcase>
    <testcase classname="buy-url returns Transak url with an BNB address for Binance Smart Chain" name="buy-url returns Transak url with an BNB address for Binance Smart Chain" time="0">
    </testcase>
    <testcase classname="buy-url returns Transak url with an MATIC address for Polygon" name="buy-url returns Transak url with an MATIC address for Polygon" time="0">
    </testcase>
    <testcase classname="buy-url returns metamask ropsten faucet for network 3" name="buy-url returns metamask ropsten faucet for network 3" time="0.001">
    </testcase>
    <testcase classname="buy-url returns rinkeby dapp for network 4" name="buy-url returns rinkeby dapp for network 4" time="0">
    </testcase>
    <testcase classname="buy-url returns kovan github test faucet for network 42" name="buy-url returns kovan github test faucet for network 42" time="0">
    </testcase>
    <testcase classname="buy-url returns a MoonPay url with a prefilled wallet address for the Ethereum network" name="buy-url returns a MoonPay url with a prefilled wallet address for the Ethereum network" time="0.02">
    </testcase>
    <testcase classname="buy-url returns an empty string if generating a MoonPay url fails" name="buy-url returns an empty string if generating a MoonPay url fails" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="extension platform" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="1.557" tests="7">
    <testcase classname="extension platform getVersion should return non-prerelease version" name="extension platform getVersion should return non-prerelease version" time="0.001">
    </testcase>
    <testcase classname="extension platform getVersion should return rollback version" name="extension platform getVersion should return rollback version" time="0">
    </testcase>
    <testcase classname="extension platform getVersion should return SemVer-formatted version for Chrome style manifest of prerelease" name="extension platform getVersion should return SemVer-formatted version for Chrome style manifest of prerelease" time="0.001">
    </testcase>
    <testcase classname="extension platform getVersion should return SemVer-formatted version for Firefox style manifest of prerelease" name="extension platform getVersion should return SemVer-formatted version for Firefox style manifest of prerelease" time="0">
    </testcase>
    <testcase classname="extension platform getVersion should throw error if build version is missing from Chrome style prerelease manifest" name="extension platform getVersion should throw error if build version is missing from Chrome style prerelease manifest" time="0.01">
    </testcase>
    <testcase classname="extension platform getVersion should throw error if build version is missing from Firefox style prerelease manifest" name="extension platform getVersion should throw error if build version is missing from Firefox style prerelease manifest" time="0">
    </testcase>
    <testcase classname="extension platform getVersion should throw error if patch is missing from Firefox style prerelease manifest" name="extension platform getVersion should throw error if patch is missing from Firefox style prerelease manifest" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #31" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.753" tests="2">
    <testcase classname="migration #31 should set completedOnboarding to true if vault exists" name="migration #31 should set completedOnboarding to true if vault exists" time="0.002">
    </testcase>
    <testcase classname="migration #31 should set completedOnboarding to false if vault does not exist" name="migration #31 should set completedOnboarding to false if vault does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PendingNonceMiddleware" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:50" time="1.645" tests="6">
    <testcase classname="PendingNonceMiddleware #createPendingNonceMiddleware should call next if not a eth_getTransactionCount request" name="PendingNonceMiddleware #createPendingNonceMiddleware should call next if not a eth_getTransactionCount request" time="0.001">
    </testcase>
    <testcase classname="PendingNonceMiddleware #createPendingNonceMiddleware should call next if not a &quot;pending&quot; block request" name="PendingNonceMiddleware #createPendingNonceMiddleware should call next if not a &quot;pending&quot; block request" time="0.001">
    </testcase>
    <testcase classname="PendingNonceMiddleware #createPendingNonceMiddleware should fill the result with a the &quot;pending&quot; nonce" name="PendingNonceMiddleware #createPendingNonceMiddleware should fill the result with a the &quot;pending&quot; nonce" time="0">
    </testcase>
    <testcase classname="PendingNonceMiddleware #createPendingTxMiddleware should call next if not a eth_getTransactionByHash request" name="PendingNonceMiddleware #createPendingTxMiddleware should call next if not a eth_getTransactionByHash request" time="0">
    </testcase>
    <testcase classname="PendingNonceMiddleware #createPendingTxMiddleware should call next if no pending txMeta is in history" name="PendingNonceMiddleware #createPendingTxMiddleware should call next if no pending txMeta is in history" time="0.001">
    </testcase>
    <testcase classname="PendingNonceMiddleware #createPendingTxMiddleware should fill the result with a the &quot;pending&quot; tx the result should match the rpc spec" name="PendingNonceMiddleware #createPendingTxMiddleware should fill the result with a the &quot;pending&quot; tx the result should match the rpc spec" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Common utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.71" tests="1">
    <testcase classname="Common utils camelCaseToCapitalize should return a capitalized string from a camel-cased string" name="Common utils camelCaseToCapitalize should return a capitalized string from a camel-cased string" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="conversion utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.848" tests="15">
    <testcase classname="conversion utils addCurrencies() add whole numbers" name="conversion utils addCurrencies() add whole numbers" time="0.001">
    </testcase>
    <testcase classname="conversion utils addCurrencies() add decimals" name="conversion utils addCurrencies() add decimals" time="0.001">
    </testcase>
    <testcase classname="conversion utils addCurrencies() add repeating decimals" name="conversion utils addCurrencies() add repeating decimals" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil returns expected types" name="conversion utils conversionUtil returns expected types" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts from dec to hex" name="conversion utils conversionUtil converts from dec to hex" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts hex formatted numbers to dec" name="conversion utils conversionUtil converts hex formatted numbers to dec" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts WEI to ETH" name="conversion utils conversionUtil converts WEI to ETH" time="0.001">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts ETH to WEI" name="conversion utils conversionUtil converts ETH to WEI" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts ETH to GWEI" name="conversion utils conversionUtil converts ETH to GWEI" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts ETH to USD" name="conversion utils conversionUtil converts ETH to USD" time="0">
    </testcase>
    <testcase classname="conversion utils conversionUtil converts USD to ETH" name="conversion utils conversionUtil converts USD to ETH" time="0">
    </testcase>
    <testcase classname="conversion utils divideCurrencies() should correctly divide decimal values" name="conversion utils divideCurrencies() should correctly divide decimal values" time="0.001">
    </testcase>
    <testcase classname="conversion utils divideCurrencies() should correctly divide hexadecimal values" name="conversion utils divideCurrencies() should correctly divide hexadecimal values" time="0">
    </testcase>
    <testcase classname="conversion utils divideCurrencies() should correctly divide hexadecimal value from decimal value" name="conversion utils divideCurrencies() should correctly divide hexadecimal value from decimal value" time="0">
    </testcase>
    <testcase classname="conversion utils divideCurrencies() should throw error for wrong base value" name="conversion utils divideCurrencies() should throw error for wrong base value" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="migration #34" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.795" tests="6">
    <testcase classname="migration #34 should update the version metadata" name="migration #34 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #34 should set migratedPrivacyMode &amp; privacyMode if featureFlags.privacyMode was false" name="migration #34 should set migratedPrivacyMode &amp; privacyMode if featureFlags.privacyMode was false" time="0">
    </testcase>
    <testcase classname="migration #34 should NOT change any state if migratedPrivacyMode is already set to true" name="migration #34 should NOT change any state if migratedPrivacyMode is already set to true" time="0">
    </testcase>
    <testcase classname="migration #34 should NOT change any state if migratedPrivacyMode is already set to false" name="migration #34 should NOT change any state if migratedPrivacyMode is already set to false" time="0.001">
    </testcase>
    <testcase classname="migration #34 should NOT change any state if PreferencesController is missing" name="migration #34 should NOT change any state if PreferencesController is missing" time="0">
    </testcase>
    <testcase classname="migration #34 should NOT change any state if featureFlags.privacyMode is already true" name="migration #34 should NOT change any state if featureFlags.privacyMode is already true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Modal Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.856" tests="6">
    <testcase classname="Modal Component should render a modal with a submit button" name="Modal Component should render a modal with a submit button" time="0.015">
    </testcase>
    <testcase classname="Modal Component should render a modal with a cancel and a submit button" name="Modal Component should render a modal with a cancel and a submit button" time="0.008">
    </testcase>
    <testcase classname="Modal Component should render a modal with different button types" name="Modal Component should render a modal with different button types" time="0.003">
    </testcase>
    <testcase classname="Modal Component should render a modal with children" name="Modal Component should render a modal with children" time="0.001">
    </testcase>
    <testcase classname="Modal Component should render a modal with a header" name="Modal Component should render a modal with a header" time="0.002">
    </testcase>
    <testcase classname="Modal Component should disable the submit button if submitDisabled is true" name="Modal Component should disable the submit button if submitDisabled is true" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="SiteIcon" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="0.771" tests="2">
    <testcase classname="SiteIcon should render without crashing" name="SiteIcon should render without crashing" time="0.015">
    </testcase>
    <testcase classname="SiteIcon should render an icon image" name="SiteIcon should render an icon image" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="migration #41" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.764" tests="4">
    <testcase classname="migration #41 should update the version metadata" name="migration #41 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #41 should rename autoLogoutTimeLimit storage key" name="migration #41 should rename autoLogoutTimeLimit storage key" time="0">
    </testcase>
    <testcase classname="migration #41 should do nothing if no PreferencesController key" name="migration #41 should do nothing if no PreferencesController key" time="0">
    </testcase>
    <testcase classname="migration #41 should do nothing if no preferences key" name="migration #41 should do nothing if no preferences key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TransactionBreakdownRow Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:51" time="1.552" tests="2">
    <testcase classname="TransactionBreakdownRow Component should render text properly" name="TransactionBreakdownRow Component should render text properly" time="0.015">
    </testcase>
    <testcase classname="TransactionBreakdownRow Component should render components properly" name="TransactionBreakdownRow Component should render components properly" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Fetch with cache" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.792" tests="9">
    <testcase classname="Fetch with cache fetches a url" name="Fetch with cache fetches a url" time="0.007">
    </testcase>
    <testcase classname="Fetch with cache returns cached response" name="Fetch with cache returns cached response" time="0">
    </testcase>
    <testcase classname="Fetch with cache fetches URL again after cache refresh time has passed" name="Fetch with cache fetches URL again after cache refresh time has passed" time="0.006">
    </testcase>
    <testcase classname="Fetch with cache should abort the request when the custom timeout is hit" name="Fetch with cache should abort the request when the custom timeout is hit" time="0.026">
    </testcase>
    <testcase classname="Fetch with cache throws when the response is unsuccessful" name="Fetch with cache throws when the response is unsuccessful" time="0.005">
    </testcase>
    <testcase classname="Fetch with cache throws when a POST request is attempted" name="Fetch with cache throws when a POST request is attempted" time="0.001">
    </testcase>
    <testcase classname="Fetch with cache throws when the request has a truthy body" name="Fetch with cache throws when the request has a truthy body" time="0">
    </testcase>
    <testcase classname="Fetch with cache throws when the request has an invalid Content-Type header" name="Fetch with cache throws when the request has an invalid Content-Type header" time="0.001">
    </testcase>
    <testcase classname="Fetch with cache should correctly cache responses from interwoven requests" name="Fetch with cache should correctly cache responses from interwoven requests" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Page Footer" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.812" tests="10">
    <testcase classname="Page Footer renders page container footer" name="Page Footer renders page container footer" time="0.005">
    </testcase>
    <testcase classname="Page Footer should render a secondary footer inside page-container__footer when given children" name="Page Footer should render a secondary footer inside page-container__footer when given children" time="0.001">
    </testcase>
    <testcase classname="Page Footer renders two button components" name="Page Footer renders two button components" time="0.007">
    </testcase>
    <testcase classname="Page Footer Cancel Button has button type of default" name="Page Footer Cancel Button has button type of default" time="0.001">
    </testcase>
    <testcase classname="Page Footer Cancel Button has children text of Cancel" name="Page Footer Cancel Button has children text of Cancel" time="0.001">
    </testcase>
    <testcase classname="Page Footer Cancel Button should call cancel when click is simulated" name="Page Footer Cancel Button should call cancel when click is simulated" time="0.002">
    </testcase>
    <testcase classname="Page Footer Submit Button assigns button type based on props" name="Page Footer Submit Button assigns button type based on props" time="0.001">
    </testcase>
    <testcase classname="Page Footer Submit Button has disabled prop" name="Page Footer Submit Button has disabled prop" time="0">
    </testcase>
    <testcase classname="Page Footer Submit Button has children text when submitText prop exists" name="Page Footer Submit Button has children text when submitText prop exists" time="0.001">
    </testcase>
    <testcase classname="Page Footer Submit Button should call submit when click is simulated" name="Page Footer Submit Button should call submit when click is simulated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SelectedAccount Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.892" tests="1">
    <testcase classname="SelectedAccount Component should render checksummed address" name="SelectedAccount Component should render checksummed address" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="migration #61" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.714" tests="3">
    <testcase classname="migration #61 should update the version metadata" name="migration #61 should update the version metadata" time="0.003">
    </testcase>
    <testcase classname="migration #61 should set recoveryPhraseReminderHasBeenShown to false and recoveryPhraseReminderLastShown to the current time" name="migration #61 should set recoveryPhraseReminderHasBeenShown to false and recoveryPhraseReminderLastShown to the current time" time="0.001">
    </testcase>
    <testcase classname="migration #61 should initialize AppStateController if it does not exist" name="migration #61 should initialize AppStateController if it does not exist" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="queue integration test" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.94" tests="1">
    <testcase classname="queue integration test schedules a retry if background method failed because of a disconnect" name="queue integration test schedules a retry if background method failed because of a disconnect" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="TextArea" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="0.785" tests="8">
    <testcase classname="TextArea should render the TextArea component without crashing" name="TextArea should render the TextArea component without crashing" time="0.03">
    </testcase>
    <testcase classname="TextArea should call onChange when there is a change made" name="TextArea should call onChange when there is a change made" time="0.004">
    </testcase>
    <testcase classname="TextArea should not be able to resize if the resize prop is RESIZE.NONE" name="TextArea should not be able to resize if the resize prop is RESIZE.NONE" time="0.005">
    </testcase>
    <testcase classname="TextArea should be able to resize both height and width if the resize prop is RESIZE.BOTH" name="TextArea should be able to resize both height and width if the resize prop is RESIZE.BOTH" time="0.002">
    </testcase>
    <testcase classname="TextArea should only be able to resize width if the resize prop is RESIZE.HORIZONTAL" name="TextArea should only be able to resize width if the resize prop is RESIZE.HORIZONTAL" time="0.002">
    </testcase>
    <testcase classname="TextArea should only be able to resize height if the resize prop is RESIZE.VERTICAL" name="TextArea should only be able to resize height if the resize prop is RESIZE.VERTICAL" time="0.002">
    </testcase>
    <testcase classname="TextArea should be able to scroll when given a true value for scrollable" name="TextArea should be able to scroll when given a true value for scrollable" time="0.002">
    </testcase>
    <testcase classname="TextArea should NOT be able to scroll when given a false value for scrollable" name="TextArea should NOT be able to scroll when given a false value for scrollable" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ActionQueue" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:52" time="1.575" tests="16">
    <testcase classname="ActionQueue dropQueue rejects all pending actions by default" name="ActionQueue dropQueue rejects all pending actions by default" time="0.011">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground calls promisified background method if the stream is connected" name="ActionQueue submitRequestToBackground calls promisified background method if the stream is connected" time="0.001">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground does not calls promisified background method if the stream is not connected" name="ActionQueue submitRequestToBackground does not calls promisified background method if the stream is not connected" time="0">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground calls promisified background method on stream reconnection" name="ActionQueue submitRequestToBackground calls promisified background method on stream reconnection" time="0.001">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground resolves if backgroundFunction resolves" name="ActionQueue submitRequestToBackground resolves if backgroundFunction resolves" time="0">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground rejects if backgroundFunction throws exception" name="ActionQueue submitRequestToBackground rejects if backgroundFunction throws exception" time="0.001">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground calls methods in parallel when connection available" name="ActionQueue submitRequestToBackground calls methods in parallel when connection available" time="0.011">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground processes the queue sequentially when connection is restored" name="ActionQueue submitRequestToBackground processes the queue sequentially when connection is restored" time="0.017">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground ensures actions in queue will not repeat once finished" name="ActionQueue submitRequestToBackground ensures actions in queue will not repeat once finished" time="0.02">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground stops processng the queue if connection is lost" name="ActionQueue submitRequestToBackground stops processng the queue if connection is lost" time="0.006">
    </testcase>
    <testcase classname="ActionQueue submitRequestToBackground avoids race conditions" name="ActionQueue submitRequestToBackground avoids race conditions" time="0.017">
    </testcase>
    <testcase classname="ActionQueue callBackgroundMethod calls background method if the stream is connected" name="ActionQueue callBackgroundMethod calls background method if the stream is connected" time="0.001">
    </testcase>
    <testcase classname="ActionQueue callBackgroundMethod does not call background method if the stream is not connected" name="ActionQueue callBackgroundMethod does not call background method if the stream is not connected" time="0">
    </testcase>
    <testcase classname="ActionQueue callBackgroundMethod calls background method on stream reconnection" name="ActionQueue callBackgroundMethod calls background method on stream reconnection" time="0">
    </testcase>
    <testcase classname="ActionQueue callBackgroundMethod resolves if backgroundFunction called resolves" name="ActionQueue callBackgroundMethod resolves if backgroundFunction called resolves" time="0.001">
    </testcase>
    <testcase classname="ActionQueue callBackgroundMethod rejects if backgroundFunction called rejects" name="ActionQueue callBackgroundMethod rejects if backgroundFunction called rejects" time="0">
    </testcase>
  </testsuite>
  <testsuite name="send utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.884" tests="6">
    <testcase classname="send utils calcGasTotal() should call multiplyCurrencies with the correct params and return the multiplyCurrencies return" name="send utils calcGasTotal() should call multiplyCurrencies with the correct params and return the multiplyCurrencies return" time="0.001">
    </testcase>
    <testcase classname="send utils generateERC20TransferData() should return undefined if not passed a send token" name="send utils generateERC20TransferData() should return undefined if not passed a send token" time="0">
    </testcase>
    <testcase classname="send utils generateERC20TransferData() should call abi.rawEncode with the correct params" name="send utils generateERC20TransferData() should call abi.rawEncode with the correct params" time="0">
    </testcase>
    <testcase classname="send utils generateERC20TransferData() should return encoded token transfer data" name="send utils generateERC20TransferData() should return encoded token transfer data" time="0">
    </testcase>
    <testcase classname="send utils isBalanceSufficient() should correctly call addCurrencies and return the result of calling conversionGTE" name="send utils isBalanceSufficient() should correctly call addCurrencies and return the result of calling conversionGTE" time="0.001">
    </testcase>
    <testcase classname="send utils isTokenBalanceSufficient() should correctly call conversionUtil and return the result of calling conversionGTE" name="send utils isTokenBalanceSufficient() should correctly call conversionUtil and return the result of calling conversionGTE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TransactionActivityLog utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="1.009" tests="4">
    <testcase classname="TransactionActivityLog utils combineTransactionHistories should return no activities for an empty list of transactions" name="TransactionActivityLog utils combineTransactionHistories should return no activities for an empty list of transactions" time="0.002">
    </testcase>
    <testcase classname="TransactionActivityLog utils combineTransactionHistories should return activities for an array of transactions" name="TransactionActivityLog utils combineTransactionHistories should return activities for an array of transactions" time="0.003">
    </testcase>
    <testcase classname="TransactionActivityLog utils getActivities should return no activities for an empty history" name="TransactionActivityLog utils getActivities should return no activities for an empty history" time="0">
    </testcase>
    <testcase classname="TransactionActivityLog utils getActivities should return activities for a transaction&apos;s history" name="TransactionActivityLog utils getActivities should return activities for a transaction&apos;s history" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MetaFoxLogo" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.835" tests="2">
    <testcase classname="MetaFoxLogo sets icon height and width to 42 by default" name="MetaFoxLogo sets icon height and width to 42 by default" time="0.029">
    </testcase>
    <testcase classname="MetaFoxLogo does not set icon height and width when unsetIconHeight is true" name="MetaFoxLogo does not set icon height and width when unsetIconHeight is true" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="migration #52" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.79" tests="9">
    <testcase classname="migration #52 should update the version metadata" name="migration #52 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #52 should move mainnet tokens and hidden tokens to be keyed by 0x1 for each address" name="migration #52 should move mainnet tokens and hidden tokens to be keyed by 0x1 for each address" time="0.001">
    </testcase>
    <testcase classname="migration #52 should move rinkeby tokens and hidden tokens to be keyed by 0x4 for each address" name="migration #52 should move rinkeby tokens and hidden tokens to be keyed by 0x4 for each address" time="0">
    </testcase>
    <testcase classname="migration #52 should move kovan tokens and hidden tokens to be keyed by 0x2a for each address" name="migration #52 should move kovan tokens and hidden tokens to be keyed by 0x2a for each address" time="0.001">
    </testcase>
    <testcase classname="migration #52 should move goerli tokens and hidden tokens to be keyed by 0x5 for each address" name="migration #52 should move goerli tokens and hidden tokens to be keyed by 0x5 for each address" time="0.002">
    </testcase>
    <testcase classname="migration #52 should move ropsten tokens and hidden tokens to be keyed by 0x3 for each address" name="migration #52 should move ropsten tokens and hidden tokens to be keyed by 0x3 for each address" time="0.002">
    </testcase>
    <testcase classname="migration #52 should duplicate rpc tokens and hidden tokens to all custom networks for each address" name="migration #52 should duplicate rpc tokens and hidden tokens to all custom networks for each address" time="0.002">
    </testcase>
    <testcase classname="migration #52 should overwrite rpc tokens with built in networks if chainIds match" name="migration #52 should overwrite rpc tokens with built in networks if chainIds match" time="0">
    </testcase>
    <testcase classname="migration #52 should do nothing if no PreferencesController key" name="migration #52 should do nothing if no PreferencesController key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="buildUnserializedTransaction" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.875" tests="1">
    <testcase classname="buildUnserializedTransaction returns a transaction that can be serialized and fed to an Optimism smart contract" name="buildUnserializedTransaction returns a transaction that can be serialized and fed to an Optimism smart contract" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Dropdown" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.842" tests="3">
    <testcase classname="Dropdown renders li with dropdown-menu-item class" name="Dropdown renders li with dropdown-menu-item class" time="0.007">
    </testcase>
    <testcase classname="Dropdown adds style based on props passed" name="Dropdown adds style based on props passed" time="0.001">
    </testcase>
    <testcase classname="Dropdown simulates click event and calls onClick and closeMenu" name="Dropdown simulates click event and calls onClick and closeMenu" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #39" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:53" time="0.813" tests="14">
    <testcase classname="migration #39 should update the version metadata" name="migration #39 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #39 should update old DAI token symbol to SAI in tokens" name="migration #39 should update old DAI token symbol to SAI in tokens" time="0.001">
    </testcase>
    <testcase classname="migration #39 should update old DAI token symbol to SAI in accountTokens" name="migration #39 should update old DAI token symbol to SAI in accountTokens" time="0.001">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if accountTokens is not an object" name="migration #39 should NOT change any state if accountTokens is not an object" time="0.001">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if accountTokens is an object with invalid values" name="migration #39 should NOT change any state if accountTokens is an object with invalid values" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if accountTokens includes the new DAI token" name="migration #39 should NOT change any state if accountTokens includes the new DAI token" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if tokens includes the new DAI token" name="migration #39 should NOT change any state if tokens includes the new DAI token" time="0.001">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if tokens does not include DAI" name="migration #39 should NOT change any state if tokens does not include DAI" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if a tokens property has invalid entries" name="migration #39 should NOT change any state if a tokens property has invalid entries" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if a tokens property is not an array" name="migration #39 should NOT change any state if a tokens property is not an array" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if a tokens property is null" name="migration #39 should NOT change any state if a tokens property is null" time="0.001">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if a tokens property is missing" name="migration #39 should NOT change any state if a tokens property is missing" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if a accountTokens property is missing" name="migration #39 should NOT change any state if a accountTokens property is missing" time="0">
    </testcase>
    <testcase classname="migration #39 should NOT change any state if PreferencesController is missing" name="migration #39 should NOT change any state if PreferencesController is missing" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Contract Utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="0.753" tests="1">
    <testcase classname="Contract Utils checks is an address is a contract address or not" name="Contract Utils checks is an address is a contract address or not" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Gas Duck" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="0.749" tests="6">
    <testcase classname="Gas Duck GasReducer() should initialize state" name="Gas Duck GasReducer() should initialize state" time="0.001">
    </testcase>
    <testcase classname="Gas Duck GasReducer() should return state unchanged if it does not match a dispatched actions type" name="Gas Duck GasReducer() should return state unchanged if it does not match a dispatched actions type" time="0">
    </testcase>
    <testcase classname="Gas Duck GasReducer() should set customData.price when receiving a SET_CUSTOM_GAS_PRICE action" name="Gas Duck GasReducer() should set customData.price when receiving a SET_CUSTOM_GAS_PRICE action" time="0.001">
    </testcase>
    <testcase classname="Gas Duck GasReducer() should set customData.limit when receiving a SET_CUSTOM_GAS_LIMIT action" name="Gas Duck GasReducer() should set customData.limit when receiving a SET_CUSTOM_GAS_LIMIT action" time="0.001">
    </testcase>
    <testcase classname="Gas Duck setCustomGasPrice should create the correct action" name="Gas Duck setCustomGasPrice should create the correct action" time="0">
    </testcase>
    <testcase classname="Gas Duck setCustomGasLimit should create the correct action" name="Gas Duck setCustomGasLimit should create the correct action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #59" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="0.751" tests="12">
    <testcase classname="migration #59 should update the version metadata" name="migration #59 should update the version metadata" time="0.005">
    </testcase>
    <testcase classname="migration #59 should drop orphaned cancel transactions" name="migration #59 should drop orphaned cancel transactions" time="0.001">
    </testcase>
    <testcase classname="migration #59 should drop orphaned cancel transactions even if a nonce exists on another network that is confirmed" name="migration #59 should drop orphaned cancel transactions even if a nonce exists on another network that is confirmed" time="0">
    </testcase>
    <testcase classname="migration #59 should not drop cancel transactions with matching non cancel or retry in same network and nonce" name="migration #59 should not drop cancel transactions with matching non cancel or retry in same network and nonce" time="0.001">
    </testcase>
    <testcase classname="migration #59 should drop orphaned retry transactions" name="migration #59 should drop orphaned retry transactions" time="0">
    </testcase>
    <testcase classname="migration #59 should drop orphaned retry transactions even if a nonce exists on another network that is confirmed" name="migration #59 should drop orphaned retry transactions even if a nonce exists on another network that is confirmed" time="0.001">
    </testcase>
    <testcase classname="migration #59 should not drop retry transactions with matching non cancel or retry in same network and nonce" name="migration #59 should not drop retry transactions with matching non cancel or retry in same network and nonce" time="0.001">
    </testcase>
    <testcase classname="migration #59 should drop all orphaned retry and cancel transactions" name="migration #59 should drop all orphaned retry and cancel transactions" time="0">
    </testcase>
    <testcase classname="migration #59 should do nothing if transactions state does not exist" name="migration #59 should do nothing if transactions state does not exist" time="0.001">
    </testcase>
    <testcase classname="migration #59 should do nothing if transactions state is empty" name="migration #59 should do nothing if transactions state is empty" time="0">
    </testcase>
    <testcase classname="migration #59 should do nothing if transactions state is not an object" name="migration #59 should do nothing if transactions state is not an object" time="0">
    </testcase>
    <testcase classname="migration #59 should do nothing if state is empty" name="migration #59 should do nothing if state is empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="i18n helper" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="0.754" tests="9">
    <testcase classname="i18n helper getMessage should return the exact message paired with key if there are no substitutions" name="i18n helper getMessage should return the exact message paired with key if there are no substitutions" time="0.003">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when a single non-react substitution is made" name="i18n helper getMessage should return the correct message when a single non-react substitution is made" time="0">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when two non-react substitutions are made" name="i18n helper getMessage should return the correct message when two non-react substitutions are made" time="0">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when multiple non-react substitutions are made" name="i18n helper getMessage should return the correct message when multiple non-react substitutions are made" time="0.001">
    </testcase>
    <testcase classname="i18n helper getMessage should correctly render falsey substitutions" name="i18n helper getMessage should correctly render falsey substitutions" time="0">
    </testcase>
    <testcase classname="i18n helper getMessage should render nothing for &quot;null&quot; and &quot;undefined&quot; substitutions" name="i18n helper getMessage should render nothing for &quot;null&quot; and &quot;undefined&quot; substitutions" time="0">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when a single react substitution is made" name="i18n helper getMessage should return the correct message when a single react substitution is made" time="0.003">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when two react substitutions are made" name="i18n helper getMessage should return the correct message when two react substitutions are made" time="0.001">
    </testcase>
    <testcase classname="i18n helper getMessage should return the correct message when substituting a mix of react elements and strings" name="i18n helper getMessage should return the correct message when substituting a mix of react elements and strings" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #63" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="1.347" tests="4">
    <testcase classname="migration #63 should update the version metadata" name="migration #63 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #63 should move accountTokens data from PreferencesController to TokensController allTokens field and rotate structure from [accountAddress][chainId] to [chainId][accountAddress]" name="migration #63 should move accountTokens data from PreferencesController to TokensController allTokens field and rotate structure from [accountAddress][chainId] to [chainId][accountAddress]" time="0.003">
    </testcase>
    <testcase classname="migration #63 should move accountHiddenTokens data from PreferencesController to TokensController allIgnoredTokens field and rotate structure from [accountAddress][chainId] to [chainId][accountAddress]" name="migration #63 should move accountHiddenTokens data from PreferencesController to TokensController allIgnoredTokens field and rotate structure from [accountAddress][chainId] to [chainId][accountAddress]" time="0">
    </testcase>
    <testcase classname="migration #63 should should remove all token related state from the preferences controller" name="migration #63 should should remove all token related state from the preferences controller" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="UnitInput Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="1.491" tests="8">
    <testcase classname="UnitInput Component rendering should render properly without a suffix" name="UnitInput Component rendering should render properly without a suffix" time="0.006">
    </testcase>
    <testcase classname="UnitInput Component rendering should render properly with a suffix" name="UnitInput Component rendering should render properly with a suffix" time="0.004">
    </testcase>
    <testcase classname="UnitInput Component rendering should render properly with a child component" name="UnitInput Component rendering should render properly with a child component" time="0.001">
    </testcase>
    <testcase classname="UnitInput Component rendering should render with an error class when props.error === true" name="UnitInput Component rendering should render with an error class when props.error === true" time="0.001">
    </testcase>
    <testcase classname="UnitInput Component handling actions should focus the input on component click" name="UnitInput Component handling actions should focus the input on component click" time="0.02">
    </testcase>
    <testcase classname="UnitInput Component handling actions should call onChange on input changes with the value" name="UnitInput Component handling actions should call onChange on input changes with the value" time="0.004">
    </testcase>
    <testcase classname="UnitInput Component handling actions should set the component state value with props.value" name="UnitInput Component handling actions should set the component state value with props.value" time="0.002">
    </testcase>
    <testcase classname="UnitInput Component handling actions should update the component state value with props.value" name="UnitInput Component handling actions should update the component state value with props.value" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="migration #69" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:55" time="0.686" tests="3">
    <testcase classname="migration #69 should update the version metadata" name="migration #69 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #69 should migrate all data" name="migration #69 should migrate all data" time="0.001">
    </testcase>
    <testcase classname="migration #69 should handle missing SubjectMetadataController" name="migration #69 should handle missing SubjectMetadataController" time="0">
    </testcase>
  </testsuite>
  <testsuite name="app utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:55" time="0.851" tests="13">
    <testcase classname="app utils getEnvironmentType should return popup type" name="app utils getEnvironmentType should return popup type" time="0.002">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return notification type" name="app utils getEnvironmentType should return notification type" time="0.001">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return fullscreen type for home.html" name="app utils getEnvironmentType should return fullscreen type for home.html" time="0">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return background type" name="app utils getEnvironmentType should return background type" time="0">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return the correct type for a URL with a hash fragment" name="app utils getEnvironmentType should return the correct type for a URL with a hash fragment" time="0.001">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return the correct type for a URL with query parameters" name="app utils getEnvironmentType should return the correct type for a URL with query parameters" time="0.001">
    </testcase>
    <testcase classname="app utils getEnvironmentType should return the correct type for a URL with query parameters and a hash fragment" name="app utils getEnvironmentType should return the correct type for a URL with query parameters and a hash fragment" time="0">
    </testcase>
    <testcase classname="app utils isPrefixedFormattedHexString should return true for valid hex strings" name="app utils isPrefixedFormattedHexString should return true for valid hex strings" time="0">
    </testcase>
    <testcase classname="app utils isPrefixedFormattedHexString should return false for invalid hex strings" name="app utils isPrefixedFormattedHexString should return false for invalid hex strings" time="0.001">
    </testcase>
    <testcase classname="app utils getPlatform should detect Firefox" name="app utils getPlatform should detect Firefox" time="0.001">
    </testcase>
    <testcase classname="app utils getPlatform should detect Edge" name="app utils getPlatform should detect Edge" time="0">
    </testcase>
    <testcase classname="app utils getPlatform should detect Opera" name="app utils getPlatform should detect Opera" time="0">
    </testcase>
    <testcase classname="app utils getPlatform should detect Chrome" name="app utils getPlatform should detect Chrome" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ModalContent Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:54" time="1.411" tests="3">
    <testcase classname="ModalContent Component should render a title" name="ModalContent Component should render a title" time="0.007">
    </testcase>
    <testcase classname="ModalContent Component should render a description" name="ModalContent Component should render a description" time="0.005">
    </testcase>
    <testcase classname="ModalContent Component should render both a title and a description" name="ModalContent Component should render both a title and a description" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="migration #72" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:55" time="0.749" tests="4">
    <testcase classname="migration #72 should update the version metadata" name="migration #72 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #72 should empty knownMethodData object in PreferencesController" name="migration #72 should empty knownMethodData object in PreferencesController" time="0.002">
    </testcase>
    <testcase classname="migration #72 should preserve other PreferencesController state" name="migration #72 should preserve other PreferencesController state" time="0">
    </testcase>
    <testcase classname="migration #72 should not change state in controllers other than PreferencesController" name="migration #72 should not change state in controllers other than PreferencesController" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #47" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="0.656" tests="6">
    <testcase classname="migration #47 should update the version metadata" name="migration #47 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #47 should stringify transactions metamaskNetworkId values" name="migration #47 should stringify transactions metamaskNetworkId values" time="0.001">
    </testcase>
    <testcase classname="migration #47 should do nothing if transactions metamaskNetworkId values are already strings" name="migration #47 should do nothing if transactions metamaskNetworkId values are already strings" time="0">
    </testcase>
    <testcase classname="migration #47 should do nothing if transactions state does not exist" name="migration #47 should do nothing if transactions state does not exist" time="0">
    </testcase>
    <testcase classname="migration #47 should do nothing if transactions state is empty" name="migration #47 should do nothing if transactions state is empty" time="0">
    </testcase>
    <testcase classname="migration #47 should do nothing if state is empty" name="migration #47 should do nothing if state is empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="createMetaRPCHandler" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="0.715" tests="6">
    <testcase classname="createMetaRPCHandler can call the api when handler receives a JSON-RPC request" name="createMetaRPCHandler can call the api when handler receives a JSON-RPC request" time="0.002">
    </testcase>
    <testcase classname="createMetaRPCHandler can write the response to the outstream" name="createMetaRPCHandler can write the response to the outstream" time="0">
    </testcase>
    <testcase classname="createMetaRPCHandler can write an async response to the outstream" name="createMetaRPCHandler can write an async response to the outstream" time="0.001">
    </testcase>
    <testcase classname="createMetaRPCHandler can write the error to the outstream when method throws an error" name="createMetaRPCHandler can write the error to the outstream when method throws an error" time="0.005">
    </testcase>
    <testcase classname="createMetaRPCHandler can not throw an error for writing an error after end" name="createMetaRPCHandler can not throw an error for writing an error after end" time="0.001">
    </testcase>
    <testcase classname="createMetaRPCHandler can not throw an error for write after end" name="createMetaRPCHandler can not throw an error for write after end" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #56" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:55" time="1.427" tests="6">
    <testcase classname="migration #56 should update the version metadata" name="migration #56 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #56 should filter out tokens without a valid address property" name="migration #56 should filter out tokens without a valid address property" time="0.001">
    </testcase>
    <testcase classname="migration #56 should not filter any tokens when all token information is valid" name="migration #56 should not filter any tokens when all token information is valid" time="0">
    </testcase>
    <testcase classname="migration #56 should filter out accountTokens without a valid address property" name="migration #56 should filter out accountTokens without a valid address property" time="0">
    </testcase>
    <testcase classname="migration #56 should remove a bad assetImages key" name="migration #56 should remove a bad assetImages key" time="0">
    </testcase>
    <testcase classname="migration #56 token data with no problems should preserve all data" name="migration #56 token data with no problems should preserve all data" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Error utils Tests" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="0.764" tests="1">
    <testcase classname="Error utils Tests should get error html" name="Error utils Tests should get error html" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully and the proper transactions are remove from state" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:55" time="1.451" tests="3">
    <testcase classname="storage is migrated successfully and the proper transactions are remove from state should remove transactions that are unneeded" name="storage is migrated successfully and the proper transactions are remove from state should remove transactions that are unneeded" time="0.003">
    </testcase>
    <testcase classname="storage is migrated successfully and the proper transactions are remove from state should not remove any transactions because 40 is the expected limit" name="storage is migrated successfully and the proper transactions are remove from state should not remove any transactions because 40 is the expected limit" time="0">
    </testcase>
    <testcase classname="storage is migrated successfully and the proper transactions are remove from state should not remove any transactions because 20 txs is under the expected limit" name="storage is migrated successfully and the proper transactions are remove from state should not remove any transactions because 20 txs is under the expected limit" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="migration #49" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="0.875" tests="6">
    <testcase classname="migration #49 should update the version metadata" name="migration #49 should update the version metadata" time="0.005">
    </testcase>
    <testcase classname="migration #49 should move metaMetricsId to MetaMetricsController" name="migration #49 should move metaMetricsId to MetaMetricsController" time="0.001">
    </testcase>
    <testcase classname="migration #49 should move participateInMetaMetrics to MetaMetricsController" name="migration #49 should move participateInMetaMetrics to MetaMetricsController" time="0">
    </testcase>
    <testcase classname="migration #49 should move metaMetricsSendCount to MetaMetricsController" name="migration #49 should move metaMetricsSendCount to MetaMetricsController" time="0">
    </testcase>
    <testcase classname="migration #49 should move all metaMetrics fields to MetaMetricsController" name="migration #49 should move all metaMetrics fields to MetaMetricsController" time="0.001">
    </testcase>
    <testcase classname="migration #49 should do nothing if no PreferencesController key" name="migration #49 should do nothing if no PreferencesController key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="SendRowErrorMessage Component" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="0.806" tests="2">
    <testcase classname="SendRowErrorMessage Component render should render null if the passed errors do not contain an error of errorType" name="SendRowErrorMessage Component render should render null if the passed errors do not contain an error of errorType" time="0.004">
    </testcase>
    <testcase classname="SendRowErrorMessage Component render should render an error message if the passed errors contain an error of errorType" name="SendRowErrorMessage Component render should render an error message if the passed errors contain an error of errorType" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="InfoBox" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.854" tests="3">
    <testcase classname="InfoBox renders title from props" name="InfoBox renders title from props" time="0.007">
    </testcase>
    <testcase classname="InfoBox renders description from props" name="InfoBox renders description from props" time="0.001">
    </testcase>
    <testcase classname="InfoBox closes info box" name="InfoBox closes info box" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #35" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.72" tests="4">
    <testcase classname="migration #35 should update the version metadata" name="migration #35 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #35 should delete seedWords" name="migration #35 should delete seedWords" time="0">
    </testcase>
    <testcase classname="migration #35 should delete falsy seedWords" name="migration #35 should delete falsy seedWords" time="0">
    </testcase>
    <testcase classname="migration #35 should leave state without seedWords unchanged" name="migration #35 should leave state without seedWords unchanged" time="0">
    </testcase>
  </testsuite>
  <testsuite name="hexstring utils" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.86" tests="8">
    <testcase classname="hexstring utils isValidHexAddress should allow 40-char non-prefixed hex" name="hexstring utils isValidHexAddress should allow 40-char non-prefixed hex" time="0.002">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should allow 42-char prefixed hex" name="hexstring utils isValidHexAddress should allow 42-char prefixed hex" time="0">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should NOT allow 40-char non-prefixed hex when allowNonPrefixed is false" name="hexstring utils isValidHexAddress should NOT allow 40-char non-prefixed hex when allowNonPrefixed is false" time="0">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should NOT allow any length of non hex-prefixed string" name="hexstring utils isValidHexAddress should NOT allow any length of non hex-prefixed string" time="0">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should NOT allow less than 42 character hex-prefixed string" name="hexstring utils isValidHexAddress should NOT allow less than 42 character hex-prefixed string" time="0">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should recognize correct capitalized checksum" name="hexstring utils isValidHexAddress should recognize correct capitalized checksum" time="0.001">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should recognize incorrect capitalized checksum" name="hexstring utils isValidHexAddress should recognize incorrect capitalized checksum" time="0">
    </testcase>
    <testcase classname="hexstring utils isValidHexAddress should recognize this sample hashed address" name="hexstring utils isValidHexAddress should recognize this sample hashed address" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #26" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:56" time="1.458" tests="2">
    <testcase classname="migration #26 should move the identities from KeyringController" name="migration #26 should move the identities from KeyringController" time="0.002">
    </testcase>
    <testcase classname="migration #26 should successfully migrate first time state" name="migration #26 should successfully migrate first time state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully where transactions that are submitted have submittedTimes" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.705" tests="1">
    <testcase classname="storage is migrated successfully where transactions that are submitted have submittedTimes should add submittedTime key on the txMeta if appropriate" name="storage is migrated successfully where transactions that are submitted have submittedTimes should add submittedTime key on the txMeta if appropriate" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="migration #71" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.734" tests="3">
    <testcase classname="migration #71 should update the version metadata" name="migration #71 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #71 should rename NotificationController" name="migration #71 should rename NotificationController" time="0.001">
    </testcase>
    <testcase classname="migration #71 should handle missing NotificationController" name="migration #71 should handle missing NotificationController" time="0">
    </testcase>
  </testsuite>
  <testsuite name="storiesMetadata" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.804" tests="1">
    <testcase classname="storiesMetadata matches expected values for storiesMetadata" name="storiesMetadata matches expected values for storiesMetadata" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="migration #54" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="0.816" tests="7">
    <testcase classname="migration #54 should update the version metadata" name="migration #54 should update the version metadata" time="0.007">
    </testcase>
    <testcase classname="migration #54 should retype instance of 0 decimal values to numbers [tokens]" name="migration #54 should retype instance of 0 decimal values to numbers [tokens]" time="0.001">
    </testcase>
    <testcase classname="migration #54 should do nothing if all decimal value typings are correct [tokens]" name="migration #54 should do nothing if all decimal value typings are correct [tokens]" time="0">
    </testcase>
    <testcase classname="migration #54 should retype instance of 0 decimal values to numbers [accountTokens]" name="migration #54 should retype instance of 0 decimal values to numbers [accountTokens]" time="0">
    </testcase>
    <testcase classname="migration #54 should do nothing if all decimal value typings are correct [accountTokens]" name="migration #54 should do nothing if all decimal value typings are correct [accountTokens]" time="0.001">
    </testcase>
    <testcase classname="migration #54 should retype instance of 0 decimal values to numbers [accountTokens and tokens]" name="migration #54 should retype instance of 0 decimal values to numbers [accountTokens and tokens]" time="0">
    </testcase>
    <testcase classname="migration #54 should retype instance of 0 decimal values to numbers, and remove tokens with corrupted decimal values [accountTokens and tokens]" name="migration #54 should retype instance of 0 decimal values to numbers, and remove tokens with corrupted decimal values [accountTokens and tokens]" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #66" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.766" tests="7">
    <testcase classname="migration #66 should update the version metadata" name="migration #66 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #66 should set ledgerTransportType to `u2f` if no preferences controller exists and webhid is not available" name="migration #66 should set ledgerTransportType to `u2f` if no preferences controller exists and webhid is not available" time="0.001">
    </testcase>
    <testcase classname="migration #66 should set ledgerTransportType to `u2f` if no useLedgerLive property exists and webhid is not available" name="migration #66 should set ledgerTransportType to `u2f` if no useLedgerLive property exists and webhid is not available" time="0">
    </testcase>
    <testcase classname="migration #66 should set ledgerTransportType to `u2f` if useLedgerLive is false and webhid is not available" name="migration #66 should set ledgerTransportType to `u2f` if useLedgerLive is false and webhid is not available" time="0">
    </testcase>
    <testcase classname="migration #66 should set ledgerTransportType to `webhid` if useLedgerLive is false and webhid is available" name="migration #66 should set ledgerTransportType to `webhid` if useLedgerLive is false and webhid is available" time="0.001">
    </testcase>
    <testcase classname="migration #66 should set ledgerTransportType to `ledgerLive` if useLedgerLive is true" name="migration #66 should set ledgerTransportType to `ledgerLive` if useLedgerLive is true" time="0">
    </testcase>
    <testcase classname="migration #66 should not change ledgerTransportType if useLedgerLive is true and webhid is available" name="migration #66 should not change ledgerTransportType if useLedgerLive is true and webhid is available" time="0">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:57" time="1.455" tests="1">
    <testcase classname="storage is migrated successfully should work" name="storage is migrated successfully should work" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getMethodName" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.785" tests="1">
    <testcase classname="getMethodName should get correct method names" name="getMethodName should get correct method names" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="migration #40" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.783" tests="3">
    <testcase classname="migration #40 should update the version metadata" name="migration #40 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #40 should delete ProviderApprovalController storage key" name="migration #40 should delete ProviderApprovalController storage key" time="0">
    </testcase>
    <testcase classname="migration #40 should do nothing if no ProviderApprovalController storage key" name="migration #40 should do nothing if no ProviderApprovalController storage key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #48" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.771" tests="17">
    <testcase classname="migration #48 should update the version metadata" name="migration #48 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #48 should delete NetworkController.settings" name="migration #48 should delete NetworkController.settings" time="0">
    </testcase>
    <testcase classname="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is invalid (1)" name="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is invalid (1)" time="0.001">
    </testcase>
    <testcase classname="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is invalid (2)" name="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is invalid (2)" time="0">
    </testcase>
    <testcase classname="migration #48 should not migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is valid" name="migration #48 should not migrate NetworkController.provider to Rinkeby if the type is &quot;rpc&quot; and the chainId is valid" time="0">
    </testcase>
    <testcase classname="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;localhost&quot;" name="migration #48 should migrate NetworkController.provider to Rinkeby if the type is &quot;localhost&quot;" time="0">
    </testcase>
    <testcase classname="migration #48 should re-key NetworkController.provider.rpcTarget to rpcUrl if the type is not &quot;rpc&quot; or &quot;localhost&quot;" name="migration #48 should re-key NetworkController.provider.rpcTarget to rpcUrl if the type is not &quot;rpc&quot; or &quot;localhost&quot;" time="0">
    </testcase>
    <testcase classname="migration #48 should do nothing to NetworkController if affected state does not exist" name="migration #48 should do nothing to NetworkController if affected state does not exist" time="0">
    </testcase>
    <testcase classname="migration #48 should add frequentRpcListDetail item to beginning of list" name="migration #48 should add frequentRpcListDetail item to beginning of list" time="0.001">
    </testcase>
    <testcase classname="migration #48 should delete CachedBalancesController.cachedBalances" name="migration #48 should delete CachedBalancesController.cachedBalances" time="0">
    </testcase>
    <testcase classname="migration #48 should convert hex transaction metamaskNetworkId values to decimal" name="migration #48 should convert hex transaction metamaskNetworkId values to decimal" time="0">
    </testcase>
    <testcase classname="migration #48 should migrate the address book" name="migration #48 should migrate the address book" time="0.001">
    </testcase>
    <testcase classname="migration #48 should migrate the address book and merge entries" name="migration #48 should migrate the address book and merge entries" time="0">
    </testcase>
    <testcase classname="migration #48 should not modify address book if all entries are valid or un-parseable" name="migration #48 should not modify address book if all entries are valid or un-parseable" time="0.001">
    </testcase>
    <testcase classname="migration #48 should delete localhost key in IncomingTransactionsController" name="migration #48 should delete localhost key in IncomingTransactionsController" time="0">
    </testcase>
    <testcase classname="migration #48 should not modify IncomingTransactionsController state if affected key is missing" name="migration #48 should not modify IncomingTransactionsController state if affected key is missing" time="0">
    </testcase>
    <testcase classname="migration #48 should merge localhost token list into rpc token list" name="migration #48 should merge localhost token list into rpc token list" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #28" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.726" tests="2">
    <testcase classname="migration #28 should add corresponding tokens to accountTokens" name="migration #28 should add corresponding tokens to accountTokens" time="0.005">
    </testcase>
    <testcase classname="migration #28 should successfully migrate first time state" name="migration #28 should successfully migrate first time state" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="migration #73" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.727" tests="4">
    <testcase classname="migration #73 should update the version metadata" name="migration #73 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #73 should empty knownMethodData object in PreferencesController" name="migration #73 should empty knownMethodData object in PreferencesController" time="0.001">
    </testcase>
    <testcase classname="migration #73 should preserve other PreferencesController state" name="migration #73 should preserve other PreferencesController state" time="0">
    </testcase>
    <testcase classname="migration #73 should not change state in controllers other than PreferencesController" name="migration #73 should not change state in controllers other than PreferencesController" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Migration to delete notice controller" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.681" tests="1">
    <testcase classname="Migration to delete notice controller removes notice controller from state" name="Migration to delete notice controller removes notice controller from state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #51" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.77" tests="15">
    <testcase classname="migration #51 should update the version metadata" name="migration #51 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;ropsten&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;ropsten&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;ropsten&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;ropsten&quot;, if an incorrect chainId is set" time="0.001">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;rinkeby&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;rinkeby&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;rinkeby&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;rinkeby&quot;, if an incorrect chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;kovan&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;kovan&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;kovan&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;kovan&quot;, if an incorrect chainId is set" time="0.001">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;mainnet&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;mainnet&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;mainnet&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;mainnet&quot;, if an incorrect chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;goerli&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;goerli&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;goerli&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;goerli&quot;, if an incorrect chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;sepolia&quot;, if no chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;sepolia&quot;, if no chainId is set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;sepolia&quot;, if an incorrect chainId is set" name="migration #51 setting chainId should correctly set the chainId for the Infura network &quot;sepolia&quot;, if an incorrect chainId is set" time="0.001">
    </testcase>
    <testcase classname="migration #51 setting chainId should not set the chainId for a non-Infura network that does not have chainId set" name="migration #51 setting chainId should not set the chainId for a non-Infura network that does not have chainId set" time="0">
    </testcase>
    <testcase classname="migration #51 setting chainId should not set the chainId for a non-Infura network that does have chainId set" name="migration #51 setting chainId should not set the chainId for a non-Infura network that does have chainId set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #64" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:58" time="0.805" tests="6">
    <testcase classname="migration #64 should update the version metadata" name="migration #64 should update the version metadata" time="0.003">
    </testcase>
    <testcase classname="migration #64 should do nothing if transactions state does not exist" name="migration #64 should do nothing if transactions state does not exist" time="0">
    </testcase>
    <testcase classname="migration #64 should do nothing if transactions state is empty" name="migration #64 should do nothing if transactions state is empty" time="0.001">
    </testcase>
    <testcase classname="migration #64 should do nothing if transactions state is not an object" name="migration #64 should do nothing if transactions state is not an object" time="0">
    </testcase>
    <testcase classname="migration #64 should do nothing if state is empty" name="migration #64 should do nothing if state is empty" time="0">
    </testcase>
    <testcase classname="migration #64 should change action type of &quot;sentEther&quot; to &quot;simpleSend&quot; for any transactions and transaction history events in transactionsController.transactions" name="migration #64 should change action type of &quot;sentEther&quot; to &quot;simpleSend&quot; for any transactions and transaction history events in transactionsController.transactions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #38" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="0.74" tests="3">
    <testcase classname="migration #38 should update the version metadata" name="migration #38 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #38 should add a fullScreenVsPopup property set to either &quot;control&quot; or &quot;fullScreen&quot;" name="migration #38 should add a fullScreenVsPopup property set to either &quot;control&quot; or &quot;fullScreen&quot;" time="0.001">
    </testcase>
    <testcase classname="migration #38 should leave the fullScreenVsPopup property unchanged if it exists" name="migration #38 should leave the fullScreenVsPopup property unchanged if it exists" time="0">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully and the txParams.from are lowercase" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="0.703" tests="2">
    <testcase classname="storage is migrated successfully and the txParams.from are lowercase should lowercase the from for unapproved txs" name="storage is migrated successfully and the txParams.from are lowercase should lowercase the from for unapproved txs" time="0.002">
    </testcase>
    <testcase classname="storage is migrated successfully and the txParams.from are lowercase should migrate first time state" name="storage is migrated successfully and the txParams.from are lowercase should migrate first time state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #53" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="0.798" tests="5">
    <testcase classname="migration #53 should update the version metadata" name="migration #53 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #53 should update type of standard transactions" name="migration #53 should update type of standard transactions" time="0.002">
    </testcase>
    <testcase classname="migration #53 should do nothing if transactions state does not exist" name="migration #53 should do nothing if transactions state does not exist" time="0.001">
    </testcase>
    <testcase classname="migration #53 should do nothing if transactions state is empty" name="migration #53 should do nothing if transactions state is empty" time="0">
    </testcase>
    <testcase classname="migration #53 should do nothing if state is empty" name="migration #53 should do nothing if state is empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #65" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="0.753" tests="6">
    <testcase classname="migration #65 should update the version metadata" name="migration #65 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #65 should move completedOnboarding from PreferencesController to OnboardingController when completedOnboarding is true" name="migration #65 should move completedOnboarding from PreferencesController to OnboardingController when completedOnboarding is true" time="0">
    </testcase>
    <testcase classname="migration #65 should move completedOnboarding from PreferencesController to OnboardingController when completedOnboarding is false" name="migration #65 should move completedOnboarding from PreferencesController to OnboardingController when completedOnboarding is false" time="0.001">
    </testcase>
    <testcase classname="migration #65 should move firstTimeFlowType from PreferencesController to OnboardingController when firstTimeFlowType is truthy" name="migration #65 should move firstTimeFlowType from PreferencesController to OnboardingController when firstTimeFlowType is truthy" time="0">
    </testcase>
    <testcase classname="migration #65 should move firstTimeFlowType from PreferencesController to OnboardingController when firstTimeFlowType is falsy" name="migration #65 should move firstTimeFlowType from PreferencesController to OnboardingController when firstTimeFlowType is falsy" time="0">
    </testcase>
    <testcase classname="migration #65 should not modify PreferencesController or OnboardingController when completedOnboarding and firstTimeFlowType are undefined" name="migration #65 should not modify PreferencesController or OnboardingController when completedOnboarding and firstTimeFlowType are undefined" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #45" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="1.418" tests="4">
    <testcase classname="migration #45 should update the version metadata" name="migration #45 should update the version metadata" time="0.002">
    </testcase>
    <testcase classname="migration #45 should update ipfsGateway value if outdated" name="migration #45 should update ipfsGateway value if outdated" time="0.001">
    </testcase>
    <testcase classname="migration #45 should not update ipfsGateway value if custom set" name="migration #45 should not update ipfsGateway value if custom set" time="0">
    </testcase>
    <testcase classname="migration #45 should do nothing if no PreferencesController key" name="migration #45 should do nothing if no PreferencesController key" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="wallet2 is migrated successfully with out the BlacklistController" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="1.427" tests="1">
    <testcase classname="wallet2 is migrated successfully with out the BlacklistController should delete BlacklistController key" name="wallet2 is migrated successfully with out the BlacklistController should delete BlacklistController key" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully where transactions that are submitted have submittedTimes" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:00" time="0.728" tests="1">
    <testcase classname="storage is migrated successfully where transactions that are submitted have submittedTimes should auto fail transactions more than 12 hours old" name="storage is migrated successfully where transactions that are submitted have submittedTimes should auto fail transactions more than 12 hours old" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="storage is migrated successfully" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:00" time="0.709" tests="1">
    <testcase classname="storage is migrated successfully should work" name="storage is migrated successfully should work" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="quoteDataRows" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:22:59" time="1.413" tests="1">
    <testcase classname="quoteDataRows matches expected values for quoteDataRows" name="quoteDataRows matches expected values for quoteDataRows" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #67" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:00" time="0.672" tests="6">
    <testcase classname="migration #67 should update the version metadata" name="migration #67 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #67 should set showTestNetworks to true if the user is currently on a test network" name="migration #67 should set showTestNetworks to true if the user is currently on a test network" time="0.001">
    </testcase>
    <testcase classname="migration #67 should set showTestNetworks to true if there is a transaction on a test network in state" name="migration #67 should set showTestNetworks to true if there is a transaction on a test network in state" time="0">
    </testcase>
    <testcase classname="migration #67 should set showTestNetworks to true if the user has a cached balance on a test network" name="migration #67 should set showTestNetworks to true if the user has a cached balance on a test network" time="0.003">
    </testcase>
    <testcase classname="migration #67 should leave showTestNetworks false if there is no evidence of test network usage" name="migration #67 should leave showTestNetworks false if there is no evidence of test network usage" time="0.001">
    </testcase>
    <testcase classname="migration #67 should leave showTestNetworks true if it was true but there is no evidence of test network usage" name="migration #67 should leave showTestNetworks true if it was true but there is no evidence of test network usage" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PermissionController selectors" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:01" time="0.606" tests="4">
    <testcase classname="PermissionController selectors getChangedAccounts returns the new value if the previous value is undefined" name="PermissionController selectors getChangedAccounts returns the new value if the previous value is undefined" time="0.001">
    </testcase>
    <testcase classname="PermissionController selectors getChangedAccounts returns an empty map if the new and previous values are the same" name="PermissionController selectors getChangedAccounts returns an empty map if the new and previous values are the same" time="0">
    </testcase>
    <testcase classname="PermissionController selectors getChangedAccounts returns a new map of the changed accounts if the new and previous values differ" name="PermissionController selectors getChangedAccounts returns a new map of the changed accounts if the new and previous values differ" time="0.001">
    </testcase>
    <testcase classname="PermissionController selectors getPermittedAccountsByOrigin memoizes and gets permitted accounts by origin" name="PermissionController selectors getPermittedAccountsByOrigin memoizes and gets permitted accounts by origin" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #60" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:01" time="0.608" tests="6">
    <testcase classname="migration #60 should update the version metadata" name="migration #60 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #60 prunes the support notification" name="migration #60 prunes the support notification" time="0">
    </testcase>
    <testcase classname="migration #60 does not modify state when the support notification does not exist" name="migration #60 does not modify state when the support notification does not exist" time="0.001">
    </testcase>
    <testcase classname="migration #60 does not modify state when NotificationsController is undefined" name="migration #60 does not modify state when NotificationsController is undefined" time="0">
    </testcase>
    <testcase classname="migration #60 does not modify state when notifications are undefined" name="migration #60 does not modify state when notifications are undefined" time="0">
    </testcase>
    <testcase classname="migration #60 does not modify state when notifications are not an object" name="migration #60 does not modify state when notifications are not an object" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migration #46" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:00" time="1.179" tests="3">
    <testcase classname="migration #46 should update the version metadata" name="migration #46 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #46 should delete ABTestController state" name="migration #46 should delete ABTestController state" time="0">
    </testcase>
    <testcase classname="migration #46 should do nothing if ABTestController state does not exist" name="migration #46 should do nothing if ABTestController state does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="migration #36" errors="0" failures="0" skipped="0" timestamp="2022-09-23T13:23:00" time="1.231" tests="6">
    <testcase classname="migration #36 should update the version metadata" name="migration #36 should update the version metadata" time="0.001">
    </testcase>
    <testcase classname="migration #36 should remove privacyMode if featureFlags.privacyMode was false" name="migration #36 should remove privacyMode if featureFlags.privacyMode was false" time="0">
    </testcase>
    <testcase classname="migration #36 should remove privacyMode if featureFlags.privacyMode was true" name="migration #36 should remove privacyMode if featureFlags.privacyMode was true" time="0">
    </testcase>
    <testcase classname="migration #36 should NOT change any state if privacyMode does not exist" name="migration #36 should NOT change any state if privacyMode does not exist" time="0.001">
    </testcase>
    <testcase classname="migration #36 should NOT change any state if PreferencesController is missing" name="migration #36 should NOT change any state if PreferencesController is missing" time="0">
    </testcase>
    <testcase classname="migration #36 should NOT change any state if featureFlags is missing" name="migration #36 should NOT change any state if featureFlags is missing" time="0">
    </testcase>
  </testsuite>
</testsuites>