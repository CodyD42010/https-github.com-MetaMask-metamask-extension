version: 2.1

executors:
  node-browsers:
    docker:
      - image: circleci/node:14-browsers
  node-browsers-medium-plus:
    docker:
      - image: circleci/node:14-browsers
    resource_class: medium+
    environment:
      NODE_OPTIONS: --max_old_space_size=2048
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine@sha256:35882cba254810c7de458528011e935ba2c4f3ebcb224275dfa7ebfa930ef294

workflows:
  test_and_release:
    jobs:
      - create_release_pull_request:
          requires:
            - prep-deps
          filters:
            branches:
              only:
                - /^Version-v(\d+)[.](\d+)[.](\d+)/
      - prep-deps
      - test-deps-audit
      - test-deps-depcheck:
          requires:
            - prep-deps
      - validate-lavamoat-config:
          requires:
            - prep-deps
      - prep-build:
          requires:
            - prep-deps
      - prep-build-test:
          requires:
            - prep-deps
<<<<<<< HEAD
      - prep-build-test-metrics:
=======
      - prep-build-multichain-test:
          requires:
            - prep-deps
      - prep-build-test-mv3:
          requires:
            - prep-deps
      - prep-build-test-flask:
          requires:
            - prep-deps
      - prep-build-test-mmi:
>>>>>>> upstream/multichain-swaps-controller
          requires:
            - prep-deps
      - prep-build-storybook:
          requires:
            - prep-deps
      - test-lint:
          requires:
            - prep-deps
      - test-lint-shellcheck
      - test-lint-lockfile:
          requires:
            - prep-deps
      - test-lint-changelog:
          requires:
            - prep-deps
      - test-e2e-chrome:
          requires:
            - prep-build-test
      - test-e2e-chrome-multichain:
          requires:
            - prep-build-multichain-test
      - test-e2e-firefox:
          requires:
            - prep-build-test
      - test-e2e-chrome-metrics:
          requires:
<<<<<<< HEAD
            - prep-build-test-metrics
      - test-e2e-firefox-metrics:
          requires:
            - prep-build-test-metrics
      - test-unit:
=======
            - prep-build-test
      - test-e2e-chrome-flask:
          requires:
            - prep-build-test-flask
      - test-e2e-firefox-flask:
          requires:
            - prep-build-test-flask
      - test-e2e-chrome-mmi:
          requires:
            - prep-build-test-mmi
      - test-e2e-chrome-rpc-mmi:
          requires:
            - prep-build-test-mmi
      - test-e2e-chrome-mv3:
          requires:
            - prep-build-test-mv3
      - test-unit-mocha:
>>>>>>> upstream/multichain-swaps-controller
          requires:
            - prep-deps
      - test-unit-global:
          requires:
            - prep-deps
      - validate-source-maps:
          requires:
            - prep-build
      - test-mozilla-lint:
          requires:
            - prep-deps
            - prep-build
      - all-tests-pass:
          requires:
            - validate-lavamoat-config
            - test-lint
            - test-lint-shellcheck
            - test-lint-lockfile
            - test-lint-changelog
            - test-unit
            - test-unit-global
            - validate-source-maps
            - test-mozilla-lint
            - test-e2e-chrome
            - test-e2e-chrome-multichain
            - test-e2e-firefox
<<<<<<< HEAD
            - test-e2e-chrome-metrics
            - test-e2e-firefox-metrics
=======
            - test-e2e-chrome-flask
            - test-e2e-firefox-flask
            - test-e2e-chrome-mmi
            - test-e2e-chrome-rpc-mmi
            - test-storybook
>>>>>>> upstream/multichain-swaps-controller
      - benchmark:
          requires:
            - prep-build-test
      - job-publish-prerelease:
          requires:
            - prep-deps
            - prep-build
            - prep-build-storybook
            - benchmark
            - all-tests-pass
      - job-publish-release:
          filters:
            branches:
              only: master
          requires:
            - prep-deps
            - prep-build
            - all-tests-pass
      - job-publish-storybook:
          filters:
            branches:
              only: develop
          requires:
            - prep-build-storybook

jobs:
  create_release_pull_request:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Bump manifest version
          command: .circleci/scripts/release-bump-manifest-version.sh
      - run:
          name: Update changelog
          command: yarn update-changelog --rc
      - run:
          name: Commit changes
          command: .circleci/scripts/release-commit-version-bump.sh
      - run:
          name: Create GitHub Pull Request for version
          command: .circleci/scripts/release-create-release-pr.sh

  prep-deps:
    executor: node-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Install deps
          command: |
            .circleci/scripts/deps-install.sh
      - save_cache:
          key: dependency-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
            - build-artifacts/yarn-install-har/
      - run:
          name: Postinstall
          command: |
            yarn setup:postinstall
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
          - build-artifacts

  validate-lavamoat-config:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate allow-scripts config
          command: |
            .circleci/scripts/validate-allow-scripts.sh
      - run:
          name: Validate LavaMoat policy
          command: |
            .circleci/scripts/validate-lavamoat-policy.sh

  prep-build:
    executor: node-browsers-medium-plus
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:dist
          command: yarn dist
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - builds

  prep-build-test:
    executor: node-browsers-medium-plus
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test
      - persist_to_workspace:
          root: .
          paths:
            - dist-test
            - builds-test

<<<<<<< HEAD
  prep-build-test-metrics:
    executor: node-browsers-medium-plus
=======
  prep-build-multichain-test:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: MULTICHAIN=1 yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test-multichain
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-multichain
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-multichain
            - builds-test-multichain

  prep-build-storybook:
    executor: node-browsers-large
>>>>>>> upstream/multichain-swaps-controller
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing metrics
          command: yarn build:test:metrics
      - run:
          name: Move test build to 'dist-test-metrics' to avoid conflict with production build
          command: mv ./dist ./dist-test-metrics
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-metrics
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-metrics
            - builds-test-metrics

  prep-build-storybook:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build Storybook
          command: yarn storybook:build
      - persist_to_workspace:
          root: .
          paths:
            - storybook-build

  test-lint:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Verify locales
          command: yarn verify-locales --quiet

  test-lint-shellcheck:
    executor: shellcheck
    steps:
      - checkout
      - run: apk add --no-cache bash jq yarn
      - run:
          name: ShellCheck Lint
          command: ./development/shellcheck.sh

  test-lint-lockfile:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: lockfile-lint
          command: yarn lint:lockfile

  test-lint-changelog:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate changelog
                command: yarn auto-changelog validate
      - when:
          condition:
            matches:
              pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate release candidate changelog
                command: yarn auto-changelog validate --rc


  test-deps-audit:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: yarn audit
          command: .circleci/scripts/yarn-audit.sh

  test-deps-depcheck:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: depcheck
          command: yarn depcheck

  test-e2e-chrome:
<<<<<<< HEAD
    executor: node-browsers
    steps:
      - checkout
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
=======
    executor: node-browsers-large
    parallelism: 24
    steps:
      - run: *shallow-git-clone
>>>>>>> upstream/multichain-swaps-controller
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
<<<<<<< HEAD
              yarn test:e2e:chrome --retries 2
=======
              yarn test:e2e:chrome --retries 2 --debug
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-multichain:
    executor: node-browsers-large
    parallelism: 24
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-multichain ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-multichain ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome-multichain
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              MULTICHAIN=1 yarn test:e2e:chrome --retries 2 --debug
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e
  test-e2e-chrome-mv3:
    executor: node-browsers-large
    parallelism: 24
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mv3 ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mv3 ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome --retries 2 --debug || echo "Temporarily suppressing MV3 e2e test failures"
>>>>>>> upstream/multichain-swaps-controller
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts

<<<<<<< HEAD
  test-e2e-chrome-metrics:
=======
  test-e2e-chrome-rpc:
    executor: node-browsers
    parallelism: 1
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome:rpc
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:rpc --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-rpc-mmi:
>>>>>>> upstream/multichain-swaps-controller
    executor: node-browsers
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-metrics ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-metrics ./builds
      - run:
<<<<<<< HEAD
          name: test:e2e:chrome:metrics
=======
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome:rpc
>>>>>>> upstream/multichain-swaps-controller
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:metrics --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
<<<<<<< HEAD

  test-e2e-firefox:
    executor: node-browsers
    steps:
      - checkout
      - run:
          name: Install Firefox
          command: ./.circleci/scripts/firefox-install.sh
=======
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-firefox-flask:
    executor: node-browsers-large
    parallelism: 16
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-flask ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-flask ./builds
      - run:
          name: Activate Selenium Manager for Firefox
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser firefox
      - run:
          name: test:e2e:firefox:flask
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:firefox:flask --retries 2 --debug
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-flask:
    executor: node-browsers-large
    parallelism: 16
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-flask ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-flask ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome:flask
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:flask --retries 2 --debug
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-mmi:
    executor: node-browsers-large
    parallelism: 16
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mmi ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mmi ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: test:e2e:chrome:mmi
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:mmi --retries 2 --debug --build-type=mmi
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-firefox:
    executor: node-browsers-large
    parallelism: 24
    steps:
      - run: *shallow-git-clone
>>>>>>> upstream/multichain-swaps-controller
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Activate Selenium Manager for Firefox
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser firefox
      - run:
          name: test:e2e:firefox
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:firefox --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts

  test-e2e-firefox-metrics:
    executor: node-browsers
    steps:
      - checkout
      - run:
          name: Install Firefox
          command: ./.circleci/scripts/firefox-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-metrics ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-metrics ./builds
      - run:
          name: test:e2e:firefox:metrics
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:firefox:metrics --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
<<<<<<< HEAD
=======
      - store_test_results:
          path: test/test-results/e2e
>>>>>>> upstream/multichain-swaps-controller

  benchmark:
    executor: node-browsers-medium-plus
    steps:
<<<<<<< HEAD
      - checkout
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
=======
      - run: *shallow-git-clone
>>>>>>> upstream/multichain-swaps-controller
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: Run page load benchmark
          command: yarn benchmark:chrome --out test-artifacts/chrome/benchmark/pageload.json --retries 2
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

<<<<<<< HEAD
=======
  user-actions-benchmark:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: Run page load benchmark
          command: yarn user-actions-benchmark:chrome --out test-artifacts/chrome/benchmark/user_actions.json --retries 2
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

  stats-module-load-init:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mv3 ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mv3 ./builds
      - run:
          name: Activate Selenium Manager for Chrome
          command: node_modules/selenium-webdriver/bin/linux/selenium-manager --browser chrome
      - run:
          name: Run page load benchmark
          command: |
            mkdir -p test-artifacts/chrome/mv3
            cp -R development/charts/flamegraph test-artifacts/chrome/mv3/initialisation
            cp -R development/charts/flamegraph/chart test-artifacts/chrome/mv3/initialisation/background
            cp -R development/charts/flamegraph/chart test-artifacts/chrome/mv3/initialisation/ui
            cp -R development/charts/table test-artifacts/chrome/mv3/load_time
      - run:
          name: Run page load benchmark
          command: yarn mv3:stats:chrome --out test-artifacts/chrome/mv3
      - run:
          name: Install jq
          command: sudo apt install jq -y
      - run:
          name: Record bundle size at commit
          command: ./.circleci/scripts/bundle-stats-commit.sh
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

>>>>>>> upstream/multichain-swaps-controller
  job-publish-prerelease:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:source-map-explorer
          command: ./development/source-map-explorer.sh
      - store_artifacts:
          path: dist/sourcemaps
          destination: builds/sourcemaps
      - store_artifacts:
          path: builds
          destination: builds
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_artifacts:
          path: jest-coverage
          destination: jest-coverage
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      # important: generate lavamoat viz AFTER uploading builds as artifacts
      # Temporarily disabled until we can update to a version of `sesify` with
      # this fix included: https://github.com/LavaMoat/LavaMoat/pull/121
      - run:
          name: build:lavamoat-viz
          command: ./.circleci/scripts/create-lavamoat-viz.sh
      - store_artifacts:
          path: build-artifacts
          destination: build-artifacts
      - store_artifacts:
          path: storybook-build
          destination: storybook
      - run:
          name: build:announce
          command: ./development/metamaskbot-build-announce.js

  job-publish-release:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: sentry sourcemaps upload
          command: SENTRY_ORG=metamask SENTRY_PROJECT=metamask yarn sentry:publish
      - run:
          name: Create GitHub release
          command: |
            .circleci/scripts/release-create-gh-release.sh

  job-publish-storybook:
    executor: node-browsers
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3d:49:29:f4:b2:e8:ea:af:d1:32:eb:2a:fc:15:85:d8"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: storybook:deploy
          command: |
            git remote add storybook git@github.com:MetaMask/metamask-storybook.git
            yarn storybook:deploy

  test-unit:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:coverage
          command: yarn test:coverage
      - run:
          name: test:coverage:jest
          command: yarn test:coverage:jest
      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output
            - coverage
            - jest-coverage
  test-unit-global:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:unit:global
          command: yarn test:unit:global

  validate-source-maps:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  test-mozilla-lint:
    executor: node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:mozilla-lint
          command: NODE_OPTIONS=--max_old_space_size=3072 yarn mozilla-lint

  all-tests-pass:
    executor: node-browsers
    steps:
      - run:
          name: All Tests Passed
          command: echo 'weew - everything passed!'
