diff --git a/dist/cjs/snaps/location/npm.js b/dist/cjs/snaps/location/npm.js
index 263f15632f25f734b67e5a53de827c32e996657f..78bd9b1177c5dba8bb4c2c6486d63e6a1f58c6c7 100644
--- a/dist/cjs/snaps/location/npm.js
+++ b/dist/cjs/snaps/location/npm.js
@@ -30,9 +30,9 @@ _export(exports, {
 });
 const _snapsutils = require("@metamask/snaps-utils");
 const _utils = require("@metamask/utils");
-const _browserifyzlib = require("browserify-zlib");
 const _concatstream = /*#__PURE__*/ _interop_require_default(require("concat-stream"));
 const _getnpmtarballurl = /*#__PURE__*/ _interop_require_default(require("get-npm-tarball-url"));
+const _gunzipmaybe = /*#__PURE__*/ _interop_require_default(require("gunzip-maybe"));
 const _readablestream = require("readable-stream");
 const _readablewebtonodestream = require("readable-web-to-node-stream");
 const _tarstream = require("tar-stream");
@@ -228,7 +228,7 @@ class NpmLocation extends BaseNpmLocation {
             // before we can actually grab any files from it.
             // To prevent recursion-based zip bombs, we should not allow recursion here.
             (0, _readablestream.pipeline)(// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-            getNodeStream(tarballResponse.body), (0, _browserifyzlib.createGunzip)(), createTarballStream(getNpmCanonicalBasePath(this.meta.registry, this.meta.packageName), files), (error)=>{
+            getNodeStream(tarballResponse.body), (0, _gunzipmaybe.default)(1), createTarballStream(getNpmCanonicalBasePath(this.meta.registry, this.meta.packageName), files), (error)=>{
                 error ? reject(error) : resolve(files);
             });
         });
diff --git a/dist/esm/snaps/location/npm.js b/dist/esm/snaps/location/npm.js
index e1144f2085ffc2a082674e26c7e891fa286a1f0d..91497acf40ddc508ca99b761b9170dd3aa0c3491 100644
--- a/dist/esm/snaps/location/npm.js
+++ b/dist/esm/snaps/location/npm.js
@@ -63,9 +63,9 @@ function _define_property(obj, key, value) {
 }
 import { createSnapManifest, DEFAULT_REQUESTED_SNAP_VERSION, getTargetVersion, isValidUrl, NpmSnapIdStruct, VirtualFile, normalizeRelative, parseJson } from '@metamask/snaps-utils';
 import { assert, assertIsSemVerVersion, assertStruct, isObject, isValidSemVerVersion } from '@metamask/utils';
-import { createGunzip } from 'browserify-zlib';
 import concat from 'concat-stream';
 import getNpmTarballUrl from 'get-npm-tarball-url';
+import createGunzipStream from 'gunzip-maybe';
 import { pipeline } from 'readable-stream';
 import { ReadableWebToNodeStream } from 'readable-web-to-node-stream';
 import { extract as tarExtract } from 'tar-stream';
@@ -196,7 +196,7 @@ export class NpmLocation extends BaseNpmLocation {
             // before we can actually grab any files from it.
             // To prevent recursion-based zip bombs, we should not allow recursion here.
             pipeline(// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-            getNodeStream(tarballResponse.body), createGunzip(), createTarballStream(getNpmCanonicalBasePath(this.meta.registry, this.meta.packageName), files), (error)=>{
+            getNodeStream(tarballResponse.body), createGunzipStream(1), createTarballStream(getNpmCanonicalBasePath(this.meta.registry, this.meta.packageName), files), (error)=>{
                 error ? reject(error) : resolve(files);
             });
         });
diff --git a/package.json b/package.json
index da0c48ca014d3f41abc25f9dd019ae1aa1b5b556..f7d89f58b1ff58be221b29f85b11fda4203679a1 100644
--- a/package.json
+++ b/package.json
@@ -56,9 +56,9 @@
     "@metamask/snaps-utils": "^5.1.2",
     "@metamask/utils": "^8.2.1",
     "@xstate/fsm": "^2.0.0",
-    "browserify-zlib": "^0.2.0",
     "concat-stream": "^2.0.0",
     "get-npm-tarball-url": "^2.0.3",
+    "gunzip-maybe": "^1.4.2",
     "immer": "^9.0.6",
     "json-rpc-middleware-stream": "^5.0.0",
     "nanoid": "^3.1.31",
