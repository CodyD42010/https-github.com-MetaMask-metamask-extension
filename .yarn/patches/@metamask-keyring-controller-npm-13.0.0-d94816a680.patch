diff --git a/dist/KeyringController.js b/dist/KeyringController.js
index fc649ea6fc97b905d811b236de638172fb10b548..beab676ab85e5e372eda7846e98b7d34af6317f5 100644
--- a/dist/KeyringController.js
+++ b/dist/KeyringController.js
@@ -1092,9 +1092,13 @@ _KeyringController_keyringBuilders = new WeakMap(), _KeyringController_keyrings
 }, _KeyringController_addQRKeyring = function _KeyringController_addQRKeyring() {
     return __awaiter(this, void 0, void 0, function* () {
         // QRKeyring is not yet compatible with Keyring type from @metamask/utils
-        const qrKeyring = (yield __classPrivateFieldGet(this, _KeyringController_instances, "m", _KeyringController_newKeyring).call(this, KeyringTypes.qr, {
-            accounts: [],
-        }));
+        /**
+         *  Patch for @metamask/keyring-controller v13.0.0
+         *  Below code change will fix the issue 23804, The intial code added a empty accounts as argument when creating a new QR keyring.
+         *  cause the new Keystone MetamaskKeyring default properties all are undefined during deserialise() process.
+         *  Please refer to PR 23903 for detail.
+         */
+        const qrKeyring = (yield __classPrivateFieldGet(this, _KeyringController_instances, "m", _KeyringController_newKeyring).call(this, KeyringTypes.qr));
         const accounts = yield qrKeyring.getAccounts();
         yield __classPrivateFieldGet(this, _KeyringController_instances, "m", _KeyringController_checkForDuplicate).call(this, KeyringTypes.qr, accounts);
         __classPrivateFieldGet(this, _KeyringController_keyrings, "f").push(qrKeyring);
