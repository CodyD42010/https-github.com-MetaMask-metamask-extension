# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build-test

on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [10.18]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn build:test
      - run: zip -r test-dist.zip dist
      - uses: actions/upload-artifact@v2
        with:
          name: portal-test-dist
          path: test-dist.zip

  chrome:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        test-job: [0, 1, 2, 3, 4, 5, 6, 7, 8]
        node-version: [10.18]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - uses: actions/download-artifact@v2
        with:
          name: portal-test-dist
      - run: unzip test-dist.zip
      - run: yarn test:prepare-conflux-local
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        env:
          BUILDKITE_PARALLEL_JOB: ${{matrix.test-job}}
        with:
          run: yarn test:e2e:chrome:parallel

  firefox:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        test-job: [0, 1, 2, 3, 4, 5, 6, 7, 8]
        node-version: [10.18]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - uses: actions/download-artifact@v2
        with:
          name: portal-test-dist
      - run: unzip test-dist.zip
      - run: yarn test:prepare-conflux-local
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        env:
          BUILDKITE_PARALLEL_JOB: ${{matrix.test-job}}
        with:
          run: yarn test:e2e:firefox:parallel
