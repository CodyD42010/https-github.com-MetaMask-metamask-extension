module.exports = {
  parser: 'babel-eslint',
  parserOptions: {
    'sourceType': 'module',
    'ecmaVersion': 2017,
    'ecmaFeatures': {
      'experimentalObjectRestSpread': true,
      'impliedStrict': true,
      'modules': true,
      'blockBindings': true,
      'arrowFunctions': true,
      'objectLiteralShorthandMethods': true,
      'objectLiteralShorthandProperties': true,
      'templateStrings': true,
      'classes': true,
      'jsx': true,
    },
  },

  extends: [
    '@metamask/eslint-config',
    '@metamask/eslint-config/config/nodejs',
    'plugin:react/recommended',
  ],

  env: {
    'browser': true,
    'mocha': true,
  },

  plugins: [
    'babel',
    'mocha',
    'chai',
    'react',
    'json',
    'import',
  ],

  globals: {
    'web3': true,
    '$': false,
    'QUnit': false,
  },

  rules: {
    'import/default': 2,
    'import/export': 2,
    'import/named': 2,
    'import/namespace': 2,
    'import/newline-after-import': 2,
    'import/no-absolute-path': 2,
    'import/no-amd': 2,
    'import/no-anonymous-default-export': [2, { 'allowObject': true }],
    'import/no-duplicates': 2,
    'import/no-dynamic-require': 2,
    'import/no-mutable-exports': 2,
    'import/no-named-as-default': 2,
    'import/no-named-as-default-member': 2,
    'import/no-named-default': 2,
    'import/no-self-import': 2,
    'import/no-unresolved': [2, { 'commonjs': true }],
    'import/no-unused-modules': 2,
    'import/no-useless-path-segments': [2, { 'commonjs': true }],
    'import/no-webpack-loader-syntax': 2,
    'react/no-unused-prop-types': 'error',
    'react/no-unused-state': 2,
    'react/jsx-boolean-value': 2,
    'react/jsx-curly-brace-presence': [2, { 'props': 'never', 'children': 'never' }],
    'react/jsx-equals-spacing': 2,
    'react/no-deprecated': 2,
    'react/default-props-match-prop-types': 2,
    'react/jsx-closing-tag-location': 2,
    'react/jsx-no-duplicate-props': 2,
    'react/jsx-closing-bracket-location': 2,
    'react/jsx-first-prop-new-line': 2,
    'react/jsx-max-props-per-line': [2, { 'maximum': 1, 'when': 'multiline' } ],
    'react/jsx-tag-spacing': [2, {
      'closingSlash': 'never',
      'beforeSelfClosing': 'always',
      'afterOpening': 'never',
    }],
    'react/jsx-wrap-multilines': [2, {
      'declaration': 'parens-new-line',
      'assignment': 'parens-new-line',
      'return': 'parens-new-line',
      'arrow': 'parens-new-line',
      'condition': 'parens-new-line',
      'logical': 'parens-new-line',
      'prop': 'parens-new-line',
    }],
    'babel/semi': [2, 'never'],
    'mocha/no-exclusive-tests': 'error',
  },
}
